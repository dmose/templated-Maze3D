var THREE=THREE||{REVISION:"49"};self.Int32Array||(self.Int32Array=Array,self.Float32Array=Array),function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(b){var c=Date.now(),d=Math.max(0,16-(c-a)),e=window.setTimeout(function(){b(c+d)},d);return a=c+d,e}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)})}(),THREE.Clock=function(a){this.autoStart=a!==void 0?a:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now(),this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime=this.elapsedTime+this.getDelta()},THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=.001*(b-this.oldTime);this.oldTime=b,this.elapsedTime=this.elapsedTime+a}return a},THREE.Color=function(a){return a!==void 0&&this.setHex(a),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a){return this.r=a.r*a.r,this.g=a.g*a.g,this.b=a.b*a.b,this},copyLinearToGamma:function(a){return this.r=Math.sqrt(a.r),this.g=Math.sqrt(a.g),this.b=Math.sqrt(a.b),this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;return this.r=a*a,this.g=b*b,this.b=c*c,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},setRGB:function(a,b,c){return this.r=a,this.g=b,this.b=c,this},setHSV:function(a,b,c){var d,e,f;if(c===0)this.r=this.g=this.b=0;else{d=Math.floor(a*6),e=a*6-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e));switch(d){case 1:this.r=f,this.g=c,this.b=a;break;case 2:this.r=a,this.g=c,this.b=b;break;case 3:this.r=a,this.g=f,this.b=c;break;case 4:this.r=b,this.g=a,this.b=c;break;case 5:this.r=c,this.g=a,this.b=f;break;case 6:case 0:this.r=c,this.g=b,this.b=a}}return this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(a&255)/255,this},lerpSelf:function(a,b){return this.r=this.r+(a.r-this.r)*b,this.g=this.g+(a.g-this.g)*b,this.b=this.b+(a.b-this.b)*b,this},getHex:function(){return Math.floor(this.r*255)<<16^Math.floor(this.g*255)<<8^Math.floor(this.b*255)},getContextStyle:function(){return"rgb("+Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addSelf:function(a){return this.x=this.x+a.x,this.y=this.y+a.y,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},subSelf:function(a){return this.x=this.x-a.x,this.y=this.y-a.y,this},multiplyScalar:function(a){return this.x=this.x*a,this.y=this.y*a,this},divideScalar:function(a){return a?(this.x=this.x/a,this.y=this.y/a):this.set(0,0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){return this.x=this.x+(a.x-this.x)*b,this.y=this.y+(a.y-this.y)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){return this.x=a,this.y=b,this.z=c,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},addSelf:function(a){return this.x=this.x+a.x,this.y=this.y+a.y,this.z=this.z+a.z,this},addScalar:function(a){return this.x=this.x+a,this.y=this.y+a,this.z=this.z+a,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},subSelf:function(a){return this.x=this.x-a.x,this.y=this.y-a.y,this.z=this.z-a.z,this},multiply:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},multiplySelf:function(a){return this.x=this.x*a.x,this.y=this.y*a.y,this.z=this.z*a.z,this},multiplyScalar:function(a){return this.x=this.x*a,this.y=this.y*a,this.z=this.z*a,this},divideSelf:function(a){return this.x=this.x/a.x,this.y=this.y/a.y,this.z=this.z/a.z,this},divideScalar:function(a){return a?(this.x=this.x/a,this.y=this.y/a,this.z=this.z/a):this.z=this.y=this.x=0,this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){return this.x=this.x+(a.x-this.x)*b,this.y=this.y+(a.y-this.y)*b,this.z=this.z+(a.z-this.z)*b,this},cross:function(a,b){return this.x=a.y*b.z-a.z*b.y,this.y=a.z*b.x-a.x*b.z,this.z=a.x*b.y-a.y*b.x,this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;return this.x=c*a.z-d*a.y,this.y=d*a.x-b*a.z,this.z=b*a.y-c*a.x,this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},getPositionFromMatrix:function(a){return this.x=a.elements[12],this.y=a.elements[13],this.z=a.elements[14],this},getRotationFromMatrix:function(a,b){var c=b?b.x:1,d=b?b.y:1,e=b?b.z:1,f=a.elements[0]/c,g=a.elements[4]/d,c=a.elements[1]/c,d=a.elements[5]/d,h=a.elements[9]/e,i=a.elements[10]/e;return this.y=Math.asin(a.elements[8]/e),e=Math.cos(this.y),Math.abs(e)>1e-5?(this.x=Math.atan2(-h/e,i/e),this.z=Math.atan2(-g/e,f/e)):(this.x=0,this.z=Math.atan2(c,d)),this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b,this.y=c,this.z=a},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=d!==void 0?d:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=a.w!==void 0?a.w:1,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},addSelf:function(a){return this.x=this.x+a.x,this.y=this.y+a.y,this.z=this.z+a.z,this.w=this.w+a.w,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},subSelf:function(a){return this.x=this.x-a.x,this.y=this.y-a.y,this.z=this.z-a.z,this.w=this.w-a.w,this},multiplyScalar:function(a){return this.x=this.x*a,this.y=this.y*a,this.z=this.z*a,this.w=this.w*a,this},divideScalar:function(a){return a?(this.x=this.x/a,this.y=this.y/a,this.z=this.z/a,this.w=this.w/a):(this.z=this.y=this.x=0,this.w=1),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){return this.x=this.x+(a.x-this.x)*b,this.y=this.y+(a.y-this.y)*b,this.z=this.z+(a.z-this.z)*b,this.w=this.w+(a.w-this.w)*b,this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]},THREE.Frustum.prototype.setFromMatrix=function(a){var b,c=this.planes,d=a.elements,a=d[0];b=d[1];var e=d[2],f=d[3],g=d[4],h=d[5],i=d[6],j=d[7],k=d[8],l=d[9],m=d[10],n=d[11],o=d[12],p=d[13],q=d[14],d=d[15];c[0].set(f-a,j-g,n-k,d-o),c[1].set(f+a,j+g,n+k,d+o),c[2].set(f+b,j+h,n+l,d+p),c[3].set(f-b,j-h,n-l,d-p),c[4].set(f-e,j-i,n-m,d-q),c[5].set(f+e,j+i,n+m,d+q);for(a=0;a<6;a++)b=c[a],b.divideScalar(Math.sqrt(b.x*b.x+b.y*b.y+b.z*b.z))},THREE.Frustum.prototype.contains=function(a){for(var b=this.planes,c=a.matrixWorld,d=c.elements,c=-a.geometry.boundingSphere.radius*c.getMaxScaleOnAxis(),e=0;e<6;e++){a=b[e].x*d[12]+b[e].y*d[13]+b[e].z*d[14]+b[e].w;if(a<=c)return!1}return!0},THREE.Frustum.__v1=new THREE.Vector3,THREE.Ray=function(a,b){function c(a,b,c){return o.sub(c,a),r=o.dot(b),s=p.add(a,q.copy(b).multiplyScalar(r)),t=c.distanceTo(s)}function d(a,b,c,d){return o.sub(d,b),p.sub(c,b),q.sub(a,b),u=o.dot(o),v=o.dot(p),w=o.dot(q),x=p.dot(p),y=p.dot(q),z=1/(u*x-v*v),A=(x*w-v*y)*z,B=(u*y-v*w)*z,A>=0&&B>=0&&A+B<1}this.origin=a||new THREE.Vector3,this.direction=b||new THREE.Vector3;var e=1e-4;this.setPrecision=function(a){e=a};var f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,n=new THREE.Vector3;this.intersectObject=function(a){var b,o=[];if(a instanceof THREE.Particle){var p=c(this.origin,this.direction,a.matrixWorld.getPosition());if(p>a.scale.x)return[];b={distance:p,point:a.position,face:null,object:a},o.push(b)}else if(a instanceof THREE.Mesh){var p=c(this.origin,this.direction,a.matrixWorld.getPosition()),q=THREE.Frustum.__v1.set(a.matrixWorld.getColumnX().length(),a.matrixWorld.getColumnY().length(),a.matrixWorld.getColumnZ().length());if(p>a.geometry.boundingSphere.radius*Math.max(q.x,Math.max(q.y,q.z)))return o;var r,s,t=a.geometry,u=t.vertices,v;a.matrixRotationWorld.extractRotation(a.matrixWorld),p=0;for(q=t.faces.length;p<q;p++){b=t.faces[p],j.copy(this.origin),k.copy(this.direction),v=a.matrixWorld,l=v.multiplyVector3(l.copy(b.centroid)).subSelf(j),m=a.matrixRotationWorld.multiplyVector3(m.copy(b.normal)),r=k.dot(m);if(!(Math.abs(r)<e)){s=m.dot(l)/r;if(!(s<0)&&(a.doubleSided||(a.flipSided?r>0:r<0))){n.add(j,k.multiplyScalar(s));if(b instanceof THREE.Face3)f=v.multiplyVector3(f.copy(u[b.a])),g=v.multiplyVector3(g.copy(u[b.b])),h=v.multiplyVector3(h.copy(u[b.c])),d(n,f,g,h)&&(b={distance:j.distanceTo(n),point:n.clone(),face:b,object:a},o.push(b));else if(b instanceof THREE.Face4){f=v.multiplyVector3(f.copy(u[b.a])),g=v.multiplyVector3(g.copy(u[b.b])),h=v.multiplyVector3(h.copy(u[b.c])),i=v.multiplyVector3(i.copy(u[b.d]));if(d(n,f,g,i)||d(n,g,h,i))b={distance:j.distanceTo(n),point:n.clone(),face:b,object:a},o.push(b)}}}}}return o},this.intersectObjects=function(a){for(var b=[],c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,this.intersectObject(a[c]));return b.sort(function(a,b){return a.distance-b.distance}),b};var o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,r,s,t,u,v,w,x,y,z,A,B},THREE.Rectangle=function(){function a(){f=d-b,g=e-c}var b,c,d,e,f,g,h=!0;this.getX=function(){return b},this.getY=function(){return c},this.getWidth=function(){return f},this.getHeight=function(){return g},this.getLeft=function(){return b},this.getTop=function(){return c},this.getRight=function(){return d},this.getBottom=function(){return e},this.set=function(f,g,i,j){h=!1,b=f,c=g,d=i,e=j,a()},this.addPoint=function(f,g){h?(h=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>g?e:g),a()},this.add3Points=function(f,g,i,j,k,l){h?(h=!1,b=f<i?f<k?f:k:i<k?i:k,c=g<j?g<l?g:l:j<l?j:l,d=f>i?f>k?f:k:i>k?i:k,e=g>j?g>l?g:l:j>l?j:l):(b=f<i?f<k?f<b?f:b:k<b?k:b:i<k?i<b?i:b:k<b?k:b,c=g<j?g<l?g<c?g:c:l<c?l:c:j<l?j<c?j:c:l<c?l:c,d=f>i?f>k?f>d?f:d:k>d?k:d:i>k?i>d?i:d:k>d?k:d,e=g>j?g>l?g>e?g:e:l>e?l:e:j>l?j>e?j:e:l>e?l:e),a()},this.addRectangle=function(f){h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),d=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom()),a()},this.inflate=function(f){b-=f,c-=f,d+=f,e+=f,a()},this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft(),c=c>f.getTop()?c:f.getTop(),d=d<f.getRight()?d:f.getRight(),e=e<f.getBottom()?e:f.getBottom(),a()},this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0},this.empty=function(){h=!0,e=d=c=b=0,a()},this.isEmpty=function(){return h}},THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return a<0?-1:a>0?1:0}},THREE.Matrix3=function(){this.elements=new Float32Array(9)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],i=-b[9]*b[0]+b[1]*b[8],j=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;b===0&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,k=this.elements;return k[0]=b*a,k[1]=b*c,k[2]=b*d,k[3]=b*e,k[4]=b*f,k[5]=b*g,k[6]=b*h,k[7]=b*i,k[8]=b*j,this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},transposeIntoArray:function(a){var b=this.m;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}},THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.elements=new Float32Array(16),this.set(a!==void 0?a:1,b||0,c||0,d||0,e||0,f!==void 0?f:1,g||0,h||0,i||0,j||0,k!==void 0?k:1,l||0,m||0,n||0,o||0,p!==void 0?p:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){return a=a.elements,this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]),this},lookAt:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;return g.sub(a,b).normalize(),g.length()===0&&(g.z=1),e.cross(c,g).normalize(),e.length()===0&&(g.x=g.x+1e-4,e.cross(c,g).normalize()),f.cross(g,e),d[0]=e.x,d[4]=f.x,d[8]=g.x,d[1]=e.y,d[5]=f.y,d[9]=g.y,d[2]=e.z,d[6]=f.z,d[10]=g.z,this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],c=c[15],u=d[0],v=d[4],w=d[8],x=d[12],y=d[1],z=d[5],A=d[9],B=d[13],C=d[2],D=d[6],E=d[10],F=d[14],G=d[3],H=d[7],I=d[11],d=d[15];return e[0]=f*u+g*y+h*C+i*G,e[4]=f*v+g*z+h*D+i*H,e[8]=f*w+g*A+h*E+i*I,e[12]=f*x+g*B+h*F+i*d,e[1]=j*u+k*y+l*C+m*G,e[5]=j*v+k*z+l*D+m*H,e[9]=j*w+k*A+l*E+m*I,e[13]=j*x+k*B+l*F+m*d,e[2]=n*u+o*y+p*C+q*G,e[6]=n*v+o*z+p*D+q*H,e[10]=n*w+o*A+p*E+q*I,e[14]=n*x+o*B+p*F+q*d,e[3]=r*u+s*y+t*C+c*G,e[7]=r*v+s*z+t*D+c*H,e[11]=r*w+s*A+t*E+c*I,e[15]=r*x+s*B+t*F+c*d,this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiply(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]=b[0]*a,b[4]=b[4]*a,b[8]=b[8]*a,b[12]=b[12]*a,b[1]=b[1]*a,b[5]=b[5]*a,b[9]=b[9]*a,b[13]=b[13]*a,b[2]=b[2]*a,b[6]=b[6]*a,b[10]=b[10]*a,b[14]=b[14]*a,b[3]=b[3]*a,b[7]=b[7]*a,b[11]=b[11]*a,b[15]=b[15]*a,this},multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);return a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f,a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f,a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f,a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;return a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f,a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f,a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f,a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f,a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return a.x=c*b[0]+d*b[4]+e*b[8],a.y=c*b[1]+d*b[5]+e*b[9],a.z=c*b[2]+d*b[6]+e*b[10],a.normalize(),a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;return c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w,c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w,c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w,c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1,c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],a=a[15];return e*h*k*n-d*i*k*n-e*g*l*n+c*i*l*n+d*g*m*n-c*h*m*n-e*h*j*o+d*i*j*o+e*f*l*o-b*i*l*o-d*f*m*o+b*h*m*o+e*g*j*p-c*i*j*p-e*f*k*p+b*i*k*p+c*f*m*p-b*g*m*p-d*g*j*a+c*h*j*a+d*f*k*a-b*h*k*a-c*f*l*a+b*g*l*a},transpose:function(){var a=this.elements,b;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this},flattenToArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],i=c[5],j=c[9],k=c[13],l=c[2],m=c[6],n=c[10],o=c[14],p=c[3],q=c[7],r=c[11],c=c[15];return b[0]=j*o*q-k*n*q+k*m*r-i*o*r-j*m*c+i*n*c,b[4]=g*n*q-f*o*q-g*m*r+e*o*r+f*m*c-e*n*c,b[8]=f*k*q-g*j*q+g*i*r-e*k*r-f*i*c+e*j*c,b[12]=g*j*m-f*k*m-g*i*n+e*k*n+f*i*o-e*j*o,b[1]=k*n*p-j*o*p-k*l*r+h*o*r+j*l*c-h*n*c,b[5]=f*o*p-g*n*p+g*l*r-d*o*r-f*l*c+d*n*c,b[9]=g*j*p-f*k*p-g*h*r+d*k*r+f*h*c-d*j*c,b[13]=f*k*l-g*j*l+g*h*n-d*k*n-f*h*o+d*j*o,b[2]=i*o*p-k*m*p+k*l*q-h*o*q-i*l*c+h*m*c,b[6]=g*m*p-e*o*p-g*l*q+d*o*q+e*l*c-d*m*c,b[10]=e*k*p-g*i*p+g*h*q-d*k*q-e*h*c+d*i*c,b[14]=g*i*l-e*k*l-g*h*m+d*k*m+e*h*o-d*i*o,b[3]=j*m*p-i*n*p-j*l*q+h*n*q+i*l*r-h*m*r,b[7]=e*n*p-f*m*p+f*l*q-d*n*q-e*l*r+d*m*r,b[11]=f*i*p-e*j*p-f*h*q+d*j*q+e*h*r-d*i*r,b[15]=e*j*l-f*i*l+f*h*m-d*j*m-e*h*n+d*i*n,this.multiplyScalar(1/a.determinant()),this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),i=Math.cos(f),f=Math.sin(f);switch(b){case"YXZ":var j=h*i,k=h*f,l=e*i,m=e*f;c[0]=j+m*d,c[4]=l*d-k,c[8]=g*e,c[1]=g*f,c[5]=g*i,c[9]=-d,c[2]=k*d-l,c[6]=m+j*d,c[10]=g*h;break;case"ZXY":j=h*i,k=h*f,l=e*i,m=e*f,c[0]=j-m*d,c[4]=-g*f,c[8]=l+k*d,c[1]=k+l*d,c[5]=g*i,c[9]=m-j*d,c[2]=-g*e,c[6]=d,c[10]=g*h;break;case"ZYX":j=g*i,k=g*f,l=d*i,m=d*f,c[0]=h*i,c[4]=l*e-k,c[8]=j*e+m,c[1]=h*f,c[5]=m*e+j,c[9]=k*e-l,c[2]=-e,c[6]=d*h,c[10]=g*h;break;case"YZX":j=g*h,k=g*e,l=d*h,m=d*e,c[0]=h*i,c[4]=m-j*f,c[8]=l*f+k,c[1]=f,c[5]=g*i,c[9]=-d*i,c[2]=-e*i,c[6]=k*f+l,c[10]=j-m*f;break;case"XZY":j=g*h,k=g*e,l=d*h,m=d*e,c[0]=h*i,c[4]=-f,c[8]=e*i,c[1]=j*f+m,c[5]=g*i,c[9]=k*f-l,c[2]=l*f-k,c[6]=d*i,c[10]=m*f+j;break;default:j=g*i,k=g*f,l=d*i,m=d*f,c[0]=h*i,c[4]=-h*f,c[8]=e,c[1]=k+l*e,c[5]=j-m*e,c[9]=-d*h,c[2]=m-j*e,c[6]=l+k*e,c[10]=g*h}return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,a=c*g,j=c*h,c=c*i,k=d*h,d=d*i,e=e*i,g=f*g,h=f*h,f=f*i;return b[0]=1-(k+e),b[4]=j-f,b[8]=c+h,b[1]=j+f,b[5]=1-(a+e),b[9]=d-g,b[2]=c-h,b[6]=d+g,b[10]=1-(a+k),this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;return e.identity(),e.setRotationFromQuaternion(b),f.makeScale(c.x,c.y,c.z),this.multiply(e,f),d[12]=a.x,d[13]=a.y,d[14]=a.z,this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;return e.set(d[0],d[1],d[2]),f.set(d[4],d[5],d[6]),g.set(d[8],d[9],d[10]),a=a instanceof THREE.Vector3?a:new THREE.Vector3,b=b instanceof THREE.Quaternion?b:new THREE.Quaternion,c=c instanceof THREE.Vector3?c:new THREE.Vector3,c.x=e.length(),c.y=f.length(),c.z=g.length(),a.x=d[12],a.y=d[13],a.z=d[14],d=THREE.Matrix4.__m1,d.copy(this),d.elements[0]=d.elements[0]/c.x,d.elements[1]=d.elements[1]/c.x,d.elements[2]=d.elements[2]/c.x,d.elements[4]=d.elements[4]/c.y,d.elements[5]=d.elements[5]/c.y,d.elements[6]=d.elements[6]/c.y,d.elements[8]=d.elements[8]/c.z,d.elements[9]=d.elements[9]/c.z,d.elements[10]=d.elements[10]/c.z,b.setFromRotationMatrix(d),[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;return b[12]=a[12],b[13]=a[13],b[14]=a[14],this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();return b[0]=a[0]*d,b[1]=a[1]*d,b[2]=a[2]*d,b[4]=a[4]*e,b[5]=a[5]*e,b[6]=a[6]*e,b[8]=a[8]*c,b[9]=a[9]*c,b[10]=a[10]*c,this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;return b[12]=b[0]*c+b[4]*d+b[8]*a+b[12],b[13]=b[1]*c+b[5]*d+b[9]*a+b[13],b[14]=b[2]*c+b[6]*d+b[10]*a+b[14],b[15]=b[3]*c+b[7]*d+b[11]*a+b[15],this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],i=b[10],j=b[11],k=Math.cos(a),a=Math.sin(a);return b[4]=k*c+a*g,b[5]=k*d+a*h,b[6]=k*e+a*i,b[7]=k*f+a*j,b[8]=k*g-a*c,b[9]=k*h-a*d,b[10]=k*i-a*e,b[11]=k*j-a*f,this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],i=b[10],j=b[11],k=Math.cos(a),a=Math.sin(a);return b[0]=k*c-a*g,b[1]=k*d-a*h,b[2]=k*e-a*i,b[3]=k*f-a*j,b[8]=k*g+a*c,b[9]=k*h+a*d,b[10]=k*i+a*e,b[11]=k*j+a*f,this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=Math.cos(a),a=Math.sin(a);return b[0]=k*c+a*g,b[1]=k*d+a*h,b[2]=k*e+a*i,b[3]=k*f+a*j,b[4]=k*g-a*c,b[5]=k*h-a*d,b[6]=k*i-a*e,b[7]=k*j-a*f,this},rotateByAxis:function(a,b){var c=this.elements;if(a.x===1&&a.y===0&&a.z===0)return this.rotateX(b);if(a.x===0&&a.y===1&&a.z===0)return this.rotateY(b);if(a.x===0&&a.y===0&&a.z===1)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,i=f*f,j=Math.cos(b),k=Math.sin(b),l=1-j,m=d*e*l,n=d*f*l,l=e*f*l,d=d*k,o=e*k,k=f*k,f=g+(1-g)*j,g=m+k,e=n-o,m=m-k,h=h+(1-h)*j,k=l+d,n=n+o,l=l-d,i=i+(1-i)*j,j=c[0],d=c[1],o=c[2],p=c[3],q=c[4],r=c[5],s=c[6],t=c[7],u=c[8],v=c[9],w=c[10],x=c[11];return c[0]=f*j+g*q+e*u,c[1]=f*d+g*r+e*v,c[2]=f*o+g*s+e*w,c[3]=f*p+g*t+e*x,c[4]=m*j+h*q+k*u,c[5]=m*d+h*r+k*v,c[6]=m*o+h*s+k*w,c[7]=m*p+h*t+k*x,c[8]=n*j+l*q+i*u,c[9]=n*d+l*r+i*v,c[10]=n*o+l*s+i*w,c[11]=n*p+l*t+i*x,this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;return b[0]=b[0]*c,b[4]=b[4]*d,b[8]=b[8]*a,b[1]=b[1]*c,b[5]=b[5]*d,b[9]=b[9]*a,b[2]=b[2]*c,b[6]=b[6]*d,b[10]=b[10]*a,b[3]=b[3]*c,b[7]=b[7]*d,b[11]=b[11]*a,this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);return this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);return this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);return this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;return g[0]=2*e/(b-a),g[4]=0,g[8]=(b+a)/(b-a),g[12]=0,g[1]=0,g[5]=2*e/(d-c),g[9]=(d+c)/(d-c),g[13]=0,g[2]=0,g[6]=0,g[10]=-(f+e)/(f-e),g[14]=-2*f*e/(f-e),g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-((b+a)/h),g[1]=0,g[5]=2/i,g[9]=0,g[13]=-((c+d)/i),g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-((f+e)/j),g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Object3D=function(){this.id=THREE.Object3DCount++,this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder="XYZ",this.scale=new THREE.Vector3(1,1,1),this.flipSided=this.doubleSided=!1,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.boundRadius=0,this.boundRadiusScale=1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix),this.scale.getScaleFromMatrix(this.matrix),this.rotation.getRotationFromMatrix(this.matrix,this.scale),this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b),this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up),this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){a.parent!==void 0&&a.parent.remove(a),a.parent=this,this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0,this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,e;c=0;for(d=this.children.length;c<d;c++){e=this.children[c];if(e.name===a)return e;if(b){e=e.getChildByName(a,b);if(e!==void 0)return e}}},updateMatrix:function(){this.matrix.setPosition(this.position),this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)}},THREE.Object3DCount=0,THREE.Projector=function(){function a(){var a=g[f]=g[f]||new THREE.RenderableObject;return f++,a}function b(){var a=j[i]=j[i]||new THREE.RenderableVertex;return i++,a}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return e>=0&&f>=0&&g>=0&&h>=0?!0:e<0&&f<0||g<0&&h<0?!1:(e<0?c=Math.max(c,e/(e-f)):f<0&&(d=Math.min(d,e/(e-f))),g<0?c=Math.max(c,g/(g-h)):h<0&&(d=Math.min(d,g/(g-h))),d<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-d),!0))}var e,f,g=[],h,i,j=[],k,l,m=[],n,o=[],p,q,r=[],s,t,u=[],v={objects:[],sprites:[],lights:[],elements:[]},w=new THREE.Vector3,x=new THREE.Vector4,y=new THREE.Matrix4,z=new THREE.Matrix4,A=new THREE.Frustum,B=new THREE.Vector4,C=new THREE.Vector4;this.projectVector=function(a,b){return b.matrixWorldInverse.getInverse(b.matrixWorld),y.multiply(b.projectionMatrix,b.matrixWorldInverse),y.multiplyVector3(a),a},this.unprojectVector=function(a,b){return b.projectionMatrixInverse.getInverse(b.projectionMatrix),y.multiply(b.matrixWorld,b.projectionMatrixInverse),y.multiplyVector3(a),a},this.pickingRay=function(a,b){var c;return a.z=-1,c=new THREE.Vector3(a.x,a.y,1),this.unprojectVector(a,b),this.unprojectVector(c,b),c.subSelf(a).normalize(),new THREE.Ray(a,c)},this.projectGraph=function(b,d){f=0,v.objects.length=0,v.sprites.length=0,v.lights.length=0;var g=function(b){if(b.visible!==!1){(b instanceof THREE.Mesh||b instanceof THREE.Line)&&(b.frustumCulled===!1||A.contains(b))?(w.copy(b.matrixWorld.getPosition()),y.multiplyVector3(w),e=a(),e.object=b,e.z=w.z,v.objects.push(e)):b instanceof THREE.Sprite||b instanceof THREE.Particle?(w.copy(b.matrixWorld.getPosition()),y.multiplyVector3(w),e=a(),e.object=b,e.z=w.z,v.sprites.push(e)):b instanceof THREE.Light&&v.lights.push(b);for(var c=0,d=b.children.length;c<d;c++)g(b.children[c])}};return g(b),d&&v.objects.sort(c),v},this.projectScene=function(a,e,f){var g=e.near,w=e.far,D=!1,F,G,H,I,L,M,N,O,P,Q,R,S,T,U,V;t=q=n=l=0,v.elements.length=0,e.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(e)),a.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld),y.multiply(e.projectionMatrix,e.matrixWorldInverse),A.setFromMatrix(y),v=this.projectGraph(a,!1),a=0;for(F=v.objects.length;a<F;a++){P=v.objects[a].object,Q=P.matrixWorld,i=0;if(P instanceof THREE.Mesh){R=P.geometry,S=P.geometry.materials,I=R.vertices,T=R.faces,U=R.faceVertexUvs,R=P.matrixRotationWorld.extractRotation(Q),G=0;for(H=I.length;G<H;G++)h=b(),h.positionWorld.copy(I[G]),Q.multiplyVector3(h.positionWorld),h.positionScreen.copy(h.positionWorld),y.multiplyVector4(h.positionScreen),h.positionScreen.x=h.positionScreen.x/h.positionScreen.w,h.positionScreen.y=h.positionScreen.y/h.positionScreen.w,h.visible=h.positionScreen.z>g&&h.positionScreen.z<w;I=0;for(G=T.length;I<G;I++){H=T[I];if(H instanceof THREE.Face3){L=j[H.a],M=j[H.b],N=j[H.c];if(!(L.visible&&M.visible&&N.visible))continue;D=(N.positionScreen.x-L.positionScreen.x)*(M.positionScreen.y-L.positionScreen.y)-(N.positionScreen.y-L.positionScreen.y)*(M.positionScreen.x-L.positionScreen.x)<0;if(!P.doubleSided&&D==P.flipSided)continue;O=m[l]=m[l]||new THREE.RenderableFace3,l++,k=O,k.v1.copy(L),k.v2.copy(M),k.v3.copy(N)}else if(H instanceof THREE.Face4){L=j[H.a],M=j[H.b],N=j[H.c],O=j[H.d];if(!(L.visible&&M.visible&&N.visible&&O.visible))continue;D=(O.positionScreen.x-L.positionScreen.x)*(M.positionScreen.y-L.positionScreen.y)-(O.positionScreen.y-L.positionScreen.y)*(M.positionScreen.x-L.positionScreen.x)<0||(M.positionScreen.x-N.positionScreen.x)*(O.positionScreen.y-N.positionScreen.y)-(M.positionScreen.y-N.positionScreen.y)*(O.positionScreen.x-N.positionScreen.x)<0;if(!P.doubleSided&&D==P.flipSided)continue;V=o[n]=o[n]||new THREE.RenderableFace4,n++,k=V,k.v1.copy(L),k.v2.copy(M),k.v3.copy(N),k.v4.copy(O)}k.normalWorld.copy(H.normal),!D&&(P.flipSided||P.doubleSided)&&k.normalWorld.negate(),R.multiplyVector3(k.normalWorld),k.centroidWorld.copy(H.centroid),Q.multiplyVector3(k.centroidWorld),k.centroidScreen.copy(k.centroidWorld),y.multiplyVector3(k.centroidScreen),N=H.vertexNormals,L=0;for(M=N.length;L<M;L++)O=k.vertexNormalsWorld[L],O.copy(N[L]),!D&&(P.flipSided||P.doubleSided)&&O.negate(),R.multiplyVector3(O);L=0;for(M=U.length;L<M;L++)if(V=U[L][I]){N=0;for(O=V.length;N<O;N++)k.uvs[L][N]=V[N]}k.material=P.material,k.faceMaterial=H.materialIndex!==null?S[H.materialIndex]:null,k.z=k.centroidScreen.z,v.elements.push(k)}}else if(P instanceof THREE.Line){z.multiply(y,Q),I=P.geometry.vertices,L=b(),L.positionScreen.copy(I[0]),z.multiplyVector4(L.positionScreen),Q=P.type===THREE.LinePieces?2:1,G=1;for(H=I.length;G<H;G++)L=b(),L.positionScreen.copy(I[G]),z.multiplyVector4(L.positionScreen),(G+1)%Q>0||(M=j[i-2],B.copy(L.positionScreen),C.copy(M.positionScreen),d(B,C)&&(B.multiplyScalar(1/B.w),C.multiplyScalar(1/C.w),S=r[q]=r[q]||new THREE.RenderableLine,q++,p=S,p.v1.positionScreen.copy(B),p.v2.positionScreen.copy(C),p.z=Math.max(B.z,C.z),p.material=P.material,v.elements.push(p)))}}a=0;for(F=v.sprites.length;a<F;a++)P=v.sprites[a].object,Q=P.matrixWorld,P instanceof THREE.Particle&&(x.set(Q.elements[12],Q.elements[13],Q.elements[14],1),y.multiplyVector4(x),x.z=x.z/x.w,x.z>0&&x.z<1&&(g=u[t]=u[t]||new THREE.RenderableParticle,t++,s=g,s.x=x.x/x.w,s.y=x.y/x.w,s.z=x.z,s.rotation=P.rotation.z,s.scale.x=P.scale.x*Math.abs(s.x-(x.x+e.projectionMatrix.elements[0])/(x.w+e.projectionMatrix.elements[12])),s.scale.y=P.scale.y*Math.abs(s.y-(x.y+e.projectionMatrix.elements[5])/(x.w+e.projectionMatrix.elements[13])),s.material=P.material,v.elements.push(s)));return f&&v.elements.sort(c),v}},THREE.Quaternion=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=d!==void 0?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=a.w,this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,d=a.y*b,e=a.z*b,a=Math.cos(d),d=Math.sin(d),b=Math.cos(-e),e=Math.sin(-e),f=Math.cos(c),c=Math.sin(c),g=a*b,h=d*e;return this.w=g*f-h*c,this.x=g*c+h*f,this.y=d*b*f+a*e*c,this.z=a*e*f-d*b*c,this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this.x=a.x*d,this.y=a.y*d,this.z=a.z*d,this.w=Math.cos(c),this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);return this.w=Math.sqrt(Math.max(0,b+a.elements[0]+a.elements[5]+a.elements[10]))/2,this.x=Math.sqrt(Math.max(0,b+a.elements[0]-a.elements[5]-a.elements[10]))/2,this.y=Math.sqrt(Math.max(0,b-a.elements[0]+a.elements[5]-a.elements[10]))/2,this.z=Math.sqrt(Math.max(0,b-a.elements[0]-a.elements[5]+a.elements[10]))/2,this.x=a.elements[6]-a.elements[9]<0?-Math.abs(this.x):Math.abs(this.x),this.y=a.elements[8]-a.elements[2]<0?-Math.abs(this.y):Math.abs(this.y),this.z=a.elements[1]-a.elements[4]<0?-Math.abs(this.z):Math.abs(this.z),this.normalize(),this},calculateW:function(){return this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z)),this},inverse:function(){return this.x=this.x*-1,this.y=this.y*-1,this.z=this.z*-1,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x=this.x*a,this.y=this.y*a,this.z=this.z*a,this.w=this.w*a),this},multiply:function(a,b){return this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x,this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y,this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z,this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w,this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z,a=a.w;return this.x=b*a+e*f+c*h-d*g,this.y=c*a+e*g+d*f-b*h,this.z=d*a+e*h+b*g-c*f,this.w=e*a-b*f-c*g-d*h,this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,i=this.w,j=i*c+g*e-h*d,k=i*d+h*c-f*e,l=i*e+f*d-g*c,c=-f*c-g*d-h*e;return b.x=j*i+c*-f+k*-h-l*-g,b.y=k*i+c*-g+l*-f-j*-h,b.z=l*i+c*-h+j*-g-k*-f,b},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;e<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(Math.abs(e)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(e),e=Math.sqrt(1-e*e);return Math.abs(e)<.001?(c.w=.5*(a.w+b.w),c.x=.5*(a.x+b.x),c.y=.5*(a.y+b.y),c.z=.5*(a.z+b.z),c):(b=Math.sin((1-d)*f)/e,d=Math.sin(d*f)/e,c.w=a.w*b+c.w*d,c.x=a.x*b+c.x*d,c.y=a.y*b+c.y*d,c.z=a.z*b+c.z*d,c)},THREE.Vertex=function(){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.")},THREE.Face3=function(a,b,c,d,e,f){this.a=a,this.b=b,this.c=c,this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3,this.vertexNormals=d instanceof Array?d:[],this.color=e instanceof THREE.Color?e:new THREE.Color,this.vertexColors=e instanceof Array?e:[],this.vertexTangents=[],this.materialIndex=f,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.Face4=function(a,b,c,d,e,f,g){this.a=a,this.b=b,this.c=c,this.d=d,this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3,this.vertexNormals=e instanceof Array?e:[],this.color=f instanceof THREE.Color?f:new THREE.Color,this.vertexColors=f instanceof Array?f:[],this.vertexTangents=[],this.materialIndex=g,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.UV=function(a,b){this.u=a||0,this.v=b||0},THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){return this.u=a,this.v=b,this},copy:function(a){return this.u=a.u,this.v=a.v,this},lerpSelf:function(a,b){return this.u=this.u+(a.u-this.u)*b,this.v=this.v+(a.v-this.v)*b,this},clone:function(){return new THREE.UV(this.u,this.v)}},THREE.Geometry=function(){this.id=THREE.GeometryCount++,this.vertices=[],this.colors=[],this.materials=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.boundingSphere=this.boundingBox=null,this.dynamic=this.hasTangents=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(this.__tmpVertices===void 0){d=this.__tmpVertices=Array(this.vertices.length),a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{d=this.__tmpVertices,a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces,a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={},this.morphNormals[a].faceNormals=[],this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,i,j;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=new THREE.Vector3,j=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(i),h.push(j)}g=this.morphNormals[a],f.vertices=this.morphTargets[a].vertices,f.computeFaceNormals(),f.computeVertexNormals(),c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=g.faceNormals[c],j=g.vertexNormals[c],i.copy(e.normal),e instanceof THREE.Face3?(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2])):(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2]),j.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,y){h=a.vertices[b],i=a.vertices[c],j=a.vertices[d],k=g[e],l=g[f],m=g[y],n=i.x-h.x,o=j.x-h.x,p=i.y-h.y,q=j.y-h.y,r=i.z-h.z,s=j.z-h.z,t=l.u-k.u,u=m.u-k.u,v=l.v-k.v,w=m.v-k.v,x=1/(t*w-u*v),B.set((w*n-v*o)*x,(w*p-v*q)*x,(w*r-v*s)*x),C.set((t*o-u*n)*x,(t*q-u*p)*x,(t*s-u*r)*x),z[b].addSelf(B),z[c].addSelf(B),z[d].addSelf(B),A[b].addSelf(C),A[c].addSelf(C),A[d].addSelf(C)}var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z=[],A=[],B=new THREE.Vector3,C=new THREE.Vector3,D=new THREE.Vector3,E=new THREE.Vector3,F=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)z[b]=new THREE.Vector3,A[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var G=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<f.vertexNormals.length;d++)F.copy(f.vertexNormals[d]),e=f[G[d]],y=z[e],D.copy(y),D.subSelf(F.multiplyScalar(F.dot(y))).normalize(),E.cross(f.vertexNormals[d],y),e=E.dot(A[e]),e=e<0?-1:1,f.vertexTangents[d]=new THREE.Vector4(D.x,D.y,D.z,e)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(this.vertices.length>0){var a;a=this.vertices[0],this.boundingBox.min.copy(a),this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z?b.z=a.z:a.z>c.z&&(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});for(var a,b=0,c=0,d=this.vertices.length;c<d;c++)a=this.vertices[c].length(),a>b&&(b=a);this.boundingSphere.radius=b},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),a[d]===void 0?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++){e=this.faces[f];if(e instanceof THREE.Face3)e.a=c[e.a],e.b=c[e.b],e.c=c[e.c];else if(e instanceof THREE.Face4){e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e.d=c[e.d],d=[e.a,e.b,e.c,e.d];for(a=3;a>0;a--)if(d.indexOf(e["abcd"[a]])!=a){d.splice(a,1),this.faces[f]=new THREE.Face3(d[0],d[1],d[2]),e=0;for(d=this.faceVertexUvs.length;e<d;e++)(h=this.faceVertexUvs[e][f])&&h.splice(a,1);break}}}return c=this.vertices.length-b.length,this.vertices=b,c}},THREE.GeometryCount=0,THREE.Spline=function(a){function b(a,b,c,d,e,f,g){return a=(c-a)*.5,d=(d-b)*.5,(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,i,j,k,l,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},this.getPoint=function(a){return e=(this.points.length-1)*a,f=Math.floor(e),g=e-f,c[0]=f===0?f:f-1,c[1]=f,c[2]=f>this.points.length-2?this.points.length-1:f+1,c[3]=f>this.points.length-3?this.points.length-1:f+2,j=this.points[c[0]],k=this.points[c[1]],l=this.points[c[2]],m=this.points[c[3]],h=g*g,i=g*h,d.x=b(j.x,k.x,l.x,m.x,g,h,i),d.y=b(j.y,k.y,l.y,m.y,g,h,i),d.z=b(j.z,k.z,l.z,m.z,g,h,i),d},this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;h[0]=0,a||(a=100),c=this.points.length*a,f.copy(this.points[0]);for(a=1;a<c;a++)b=a/c,d=this.getPoint(b),g.copy(d),i+=g.distanceTo(f),f.copy(d),b=(this.points.length-1)*b,b=Math.floor(b),b!=e&&(h[b]=i,e=b);return h[h.length]=i,{chunks:h,total:i}},this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],i=new THREE.Vector3,j=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=j.chunks[b]-j.chunks[b-1],g=Math.ceil(a*c/j.total),e=(b-1)/(this.points.length-1),f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=h}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=new THREE.Object3D,THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up),this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this),this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=e!==void 0?e:.1,this.far=f!==void 0?f:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=new THREE.Camera,THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this),this.fov=a!==void 0?a:50,this.aspect=b!==void 0?b:1,this.near=c!==void 0?c:.1,this.far=d!==void 0?d:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=new THREE.Camera,THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:24)/(a*2))*(180/Math.PI),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a,this.fullHeight=b,this.x=c,this.y=d,this.width=e,this.height=f,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(a){THREE.Object3D.call(this),this.color=new THREE.Color(a)},THREE.Light.prototype=new THREE.Object3D,THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.supr=THREE.Object3D.prototype,THREE.AmbientLight=function(a){THREE.Light.call(this,a)},THREE.AmbientLight.prototype=new THREE.Light,THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=b!==void 0?b:1,this.distance=c!==void 0?c:0,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=new THREE.Light,THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.PointLight=function(a,b,c){THREE.Light.call(this,a),this.position=new THREE.Vector3(0,0,0),this.intensity=b!==void 0?b:1,this.distance=c!==void 0?c:0},THREE.PointLight.prototype=new THREE.Light,THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=b!==void 0?b:1,this.distance=c!==void 0?c:0,this.angle=d!==void 0?d:Math.PI/2,this.exponent=e!==void 0?e:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=new THREE.Light,THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");return a.style.position="absolute",a.style.right="0px",a.style.top="0px",a.style.fontSize="0.8em",a.style.textAlign="left",a.style.background="rgba(0,0,0,0.25)",a.style.color="#fff",a.style.width="120px",a.style.padding="0.5em 0.5em 0.5em 0.5em",a.style.zIndex=1e3,a.innerHTML="Loading ...",a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/a.total).toFixed(0)+"%"):b+((a.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){return a=a.split("/"),a.pop(),(a.length<1?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++){b=a.materials[c];if(b instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(a,b){function c(a){return a=Math.log(a)/Math.LN2,Math.floor(a)==a}function d(a){return a=Math.log(a)/Math.LN2,Math.pow(2,Math.round(a))}function e(a,b){var e=new Image;e.onload=function(){if(!c(this.width)||!c(this.height)){var b=d(this.width),e=d(this.height);a.image.width=b,a.image.height=e,a.image.getContext("2d").drawImage(this,0,0,b,e)}else a.image=this;a.needsUpdate=!0},e.crossOrigin=h.crossOrigin,e.src=b}function f(a,c,d,f,g,h){var i=document.createElement("canvas");a[c]=new THREE.Texture(i),a[c].sourceFile=d,f&&(a[c].repeat.set(f[0],f[1]),f[0]!=1&&(a[c].wrapS=THREE.RepeatWrapping),f[1]!=1&&(a[c].wrapT=THREE.RepeatWrapping)),g&&a[c].offset.set(g[0],g[1]),h&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},f[h[0]]!==void 0&&(a[c].wrapS=f[h[0]]),f[h[1]]!==void 0&&(a[c].wrapT=f[h[1]])),e(a[c],b+"/"+d)}function g(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255}var h=this,i="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:a.wireframe};if(a.shading){var k=a.shading.toLowerCase();k==="phong"?i="MeshPhongMaterial":k==="basic"&&(i="MeshBasicMaterial")}a.blending!==void 0&&THREE[a.blending]!==void 0&&(j.blending=THREE[a.blending]);if(a.transparent!==void 0||a.opacity<1)j.transparent=a.transparent;return a.depthTest!==void 0&&(j.depthTest=a.depthTest),a.depthWrite!==void 0&&(j.depthWrite=a.depthWrite),a.vertexColors!==void 0&&(a.vertexColors=="face"?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors)),a.colorDiffuse?j.color=g(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor),a.colorSpecular&&(j.specular=g(a.colorSpecular)),a.colorAmbient&&(j.ambient=g(a.colorAmbient)),a.transparency&&(j.opacity=a.transparency),a.specularCoef&&(j.shininess=a.specularCoef),a.mapDiffuse&&b&&f(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap),a.mapLight&&b&&f(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap),a.mapNormal&&b&&f(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap),a.mapSpecular&&b&&f(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap),a.mapNormal?(i=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(i.uniforms),k.tNormal.texture=j.normalMap,a.mapNormalFactor&&(k.uNormalScale.value=a.mapNormalFactor),j.map&&(k.tDiffuse.texture=j.map,k.enableDiffuse.value=!0),j.specularMap&&(k.tSpecular.texture=j.specularMap,k.enableSpecular.value=!0),j.lightMap&&(k.tAO.texture=j.lightMap,k.enableAO.value=!0),k.uDiffuseColor.value.setHex(j.color),k.uSpecularColor.value.setHex(j.specular),k.uAmbientColor.value.setHex(j.ambient),k.uShininess.value=j.shininess,j.opacity!==void 0&&(k.uOpacity.value=j.opacity),j=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:k,lights:!0,fog:!0})):j=new THREE[i](j),a.DbgName!==void 0&&(j.name=a.DbgName),j}},THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)},THREE.BinaryLoader.prototype=new THREE.Loader,THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader,THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c?c:this.extractUrlBase(a),d=d?d:this.extractUrlBase(a),e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart(),this.loadAjaxJSON(this,a,b,c,d,e)},THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(g.readyState==4)if(g.status==200||g.status==0){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")},g.open("GET",b,!0),g.overrideMimeType&&g.overrideMimeType("text/plain; charset=x-user-defined"),g.setRequestHeader("Content-Type","text/plain"),g.send(null)},THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){f.readyState==4?f.status==200||f.status==0?THREE.BinaryLoader.prototype.createBinModel(f.response,b,d,a.materials):console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]"):f.readyState==3?e&&(h==0&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):f.readyState==2&&(h=f.getResponseHeader("Content-Length"))},f.open("GET",g,!0),f.responseType="arraybuffer",f.send(null)},THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(b){function s(a){return a%4?4-a%4:0}function t(a,b){return(new Uint8Array(a,b,1))[0]}function u(a,b){return(new Uint32Array(a,b,1))[0]}function v(b,c){var d,e,f,g,h,i,j,k,l=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=l[d*3],f=l[d*3+1],g=l[d*3+2],h=E[e*2],e=E[e*2+1],i=E[f*2],j=E[f*2+1],f=E[g*2],k=E[g*2+1],g=B.faceVertexUvs[0];var m=[];m.push(new THREE.UV(h,e)),m.push(new THREE.UV(i,j)),m.push(new THREE.UV(f,k)),g.push(m)}}function w(b,c){var d,e,f,g,h,i,j,k,l,m,n=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=n[d*4],f=n[d*4+1],g=n[d*4+2],h=n[d*4+3],i=E[e*2],e=E[e*2+1],j=E[f*2],l=E[f*2+1],k=E[g*2],m=E[g*2+1],g=E[h*2],f=E[h*2+1],h=B.faceVertexUvs[0];var o=[];o.push(new THREE.UV(i,e)),o.push(new THREE.UV(j,l)),o.push(new THREE.UV(k,m)),o.push(new THREE.UV(g,f)),h.push(o)}}function x(b,c,d){for(var e,f,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[d*3],f=c[d*3+1],g=c[d*3+2],h=i[d],B.faces.push(new THREE.Face3(e,f,g,null,null,h))}function y(b,c,d){for(var e,f,g,h,i,c=new Uint32Array(a,c,4*b),j=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[d*4],f=c[d*4+1],g=c[d*4+2],h=c[d*4+3],i=j[d],B.faces.push(new THREE.Face4(e,f,g,h,null,null,i))}function z(b,c,d,e){for(var f,g,h,i,j,k,l,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),m=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[e*3],g=c[e*3+1],h=c[e*3+2],j=d[e*3],k=d[e*3+1],l=d[e*3+2],i=m[e];var n=D[k*3],o=D[k*3+1];k=D[k*3+2];var p=D[l*3],q=D[l*3+1];l=D[l*3+2],B.faces.push(new THREE.Face3(f,g,h,[new THREE.Vector3(D[j*3],D[j*3+1],D[j*3+2]),new THREE.Vector3(n,o,k),new THREE.Vector3(p,q,l)],null,i))}}function A(b,c,d,e){for(var f,g,h,i,j,k,l,m,n,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),o=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[e*4],g=c[e*4+1],h=c[e*4+2],i=c[e*4+3],k=d[e*4],l=d[e*4+1],m=d[e*4+2],n=d[e*4+3],j=o[e];var p=D[l*3],q=D[l*3+1];l=D[l*3+2];var r=D[m*3],s=D[m*3+1];m=D[m*3+2];var t=D[n*3],u=D[n*3+1];n=D[n*3+2],B.faces.push(new THREE.Face4(f,g,h,i,[new THREE.Vector3(D[k*3],D[k*3+1],D[k*3+2]),new THREE.Vector3(p,q,l),new THREE.Vector3(r,s,m),new THREE.Vector3(t,u,n)],null,j))}}var c,e,f,g,h,i,j,k,l,m,n,o,p,q,r,B=this,C=0,D=[],E=[],F,G,H;THREE.Geometry.call(this),THREE.Loader.prototype.initMaterials(B,d,b),function(a,b,c){for(var a=new Uint8Array(a,b,c),d="",e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d}(a,C,12),c=t(a,C+12),t(a,C+13),t(a,C+14),t(a,C+15),e=t(a,C+16),f=t(a,C+17),g=t(a,C+18),h=t(a,C+19),i=u(a,C+20),j=u(a,C+20+4),k=u(a,C+20+8),b=u(a,C+20+12),l=u(a,C+20+16),m=u(a,C+20+20),n=u(a,C+20+24),o=u(a,C+20+28),p=u(a,C+20+32),q=u(a,C+20+36),r=u(a,C+20+40),C+=c,c=e*3+h,H=e*4+h,F=b*c,G=l*(c+f*3),e=m*(c+g*3),h=n*(c+f*3+g*3),c=o*H,f=p*(H+f*4),g=q*(H+g*4),C+=function(b){var b=new Float32Array(a,b,i*3),c,d,e,f;for(c=0;c<i;c++)d=b[c*3],e=b[c*3+1],f=b[c*3+2],B.vertices.push(new THREE.Vector3(d,e,f));return i*3*Float32Array.BYTES_PER_ELEMENT}(C),C+=function(b){if(j){var b=new Int8Array(a,b,j*3),c,d,e,f;for(c=0;c<j;c++)d=b[c*3],e=b[c*3+1],f=b[c*3+2],D.push(d/127,e/127,f/127)}return j*3*Int8Array.BYTES_PER_ELEMENT}(C),C+=s(j*3),C+=function(b){if(k){var b=new Float32Array(a,b,k*2),c,d,e;for(c=0;c<k;c++)d=b[c*2],e=b[c*2+1],E.push(d,e)}return k*2*Float32Array.BYTES_PER_ELEMENT}(C),F=C+F+s(b*2),G=F+G+s(l*2),e=G+e+s(m*2),h=e+h+s(n*2),c=h+c+s(o*2),f=c+f+s(p*2),g=f+g+s(q*2),function(a){if(m){var b=a+m*Uint32Array.BYTES_PER_ELEMENT*3;x(m,a,b+m*Uint32Array.BYTES_PER_ELEMENT*3),v(m,b)}}(G),function(a){if(n){var b=a+n*Uint32Array.BYTES_PER_ELEMENT*3,c=b+n*Uint32Array.BYTES_PER_ELEMENT*3;z(n,a,b,c+n*Uint32Array.BYTES_PER_ELEMENT*3),v(n,c)}}(e),function(a){if(q){var b=a+q*Uint32Array.BYTES_PER_ELEMENT*4;y(q,a,b+q*Uint32Array.BYTES_PER_ELEMENT*4),w(q,b)}}(f),function(a){if(r){var b=a+r*Uint32Array.BYTES_PER_ELEMENT*4,c=b+r*Uint32Array.BYTES_PER_ELEMENT*4;A(r,a,b,c+r*Uint32Array.BYTES_PER_ELEMENT*4),w(r,c)}}(g),b&&x(b,C,C+b*Uint32Array.BYTES_PER_ELEMENT*3),function(a){if(l){var b=a+l*Uint32Array.BYTES_PER_ELEMENT*3;z(l,a,b,b+l*Uint32Array.BYTES_PER_ELEMENT*3)}}(F),o&&y(o,h,h+o*Uint32Array.BYTES_PER_ELEMENT*4),function(a){if(p){var b=a+p*Uint32Array.BYTES_PER_ELEMENT*4;A(p,a,b,b+p*Uint32Array.BYTES_PER_ELEMENT*4)}}(c),this.computeCentroids(),this.computeFaceNormals(),THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};e.prototype=new THREE.Geometry,e.prototype.constructor=e,b(new e(c))},THREE.JSONLoader=function(a){THREE.Loader.call(this,a)},THREE.JSONLoader.prototype=new THREE.Loader,THREE.JSONLoader.prototype.constructor=THREE.JSONLoader,THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a),this.onLoadStart(),this.loadAjaxJSON(this,a,b,c)},THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(f.status===200||f.status===0){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(g===0&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))},f.open("GET",b,!0),f.overrideMimeType&&f.overrideMimeType("text/plain; charset=x-user-defined"),f.setRequestHeader("Content-Type","text/plain"),f.send(null)},THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=a.scale!==void 0?1/a.scale:1;this.initMaterials(d,a.materials,c),function(b){var c,e,f,g,h,i,j,k,l,m,n,o,p,q,r=a.faces;i=a.vertices;var s=a.normals,t=a.colors,u=0;for(c=0;c<a.uvs.length;c++)a.uvs[c].length&&u++;for(c=0;c<u;c++)d.faceUvs[c]=[],d.faceVertexUvs[c]=[];g=0;for(h=i.length;g<h;)j=new THREE.Vector3,j.x=i[g++]*b,j.y=i[g++]*b,j.z=i[g++]*b,d.vertices.push(j);g=0;for(h=r.length;g<h;){b=r[g++],i=b&1,f=b&2,c=b&4,e=b&8,k=b&16,j=b&32,m=b&64,b&=128,i?(n=new THREE.Face4,n.a=r[g++],n.b=r[g++],n.c=r[g++],n.d=r[g++],i=4):(n=new THREE.Face3,n.a=r[g++],n.b=r[g++],n.c=r[g++],i=3),f&&(f=r[g++],n.materialIndex=f),f=d.faces.length;if(c)for(c=0;c<u;c++)o=a.uvs[c],l=r[g++],q=o[l*2],l=o[l*2+1],d.faceUvs[c][f]=new THREE.UV(q,l);if(e)for(c=0;c<u;c++){o=a.uvs[c],p=[];for(e=0;e<i;e++)l=r[g++],q=o[l*2],l=o[l*2+1],p[e]=new THREE.UV(q,l);d.faceVertexUvs[c][f]=p}k&&(k=r[g++]*3,e=new THREE.Vector3,e.x=s[k++],e.y=s[k++],e.z=s[k],n.normal=e);if(j)for(c=0;c<i;c++)k=r[g++]*3,e=new THREE.Vector3,e.x=s[k++],e.y=s[k++],e.z=s[k],n.vertexNormals.push(e);m&&(j=r[g++],j=new THREE.Color(t[j]),n.color=j);if(b)for(c=0;c<i;c++)j=r[g++],j=new THREE.Color(t[j]),n.vertexColors.push(j);d.faces.push(n)}}(e),function(){var b,c,e,f;if(a.skinWeights){b=0;for(c=a.skinWeights.length;b<c;b+=2)e=a.skinWeights[b],f=a.skinWeights[b+1],d.skinWeights.push(new THREE.Vector4(e,f,0,0))}if(a.skinIndices){b=0;for(c=a.skinIndices.length;b<c;b+=2)e=a.skinIndices[b],f=a.skinIndices[b+1],d.skinIndices.push(new THREE.Vector4(e,f,0,0))}d.bones=a.bones,d.animation=a.animation}(),function(b){if(a.morphTargets!==void 0){var c,e,f,g,h,i;c=0;for(e=a.morphTargets.length;c<e;c++){d.morphTargets[c]={},d.morphTargets[c].name=a.morphTargets[c].name,d.morphTargets[c].vertices=[],h=d.morphTargets[c].vertices,i=a.morphTargets[c].vertices,f=0;for(g=i.length;f<g;f+=3){var j=new THREE.Vector3;j.x=i[f]*b,j.y=i[f+1]*b,j.z=i[f+2]*b,h.push(j)}}}if(a.morphColors!==void 0){c=0;for(e=a.morphColors.length;c<e;c++){d.morphColors[c]={},d.morphColors[c].name=a.morphColors[c].name,d.morphColors[c].colors=[],g=d.morphColors[c].colors,h=a.morphColors[c].colors,b=0;for(f=h.length;b<f;b+=3)i=new THREE.Color(16755200),i.setRGB(h[b],h[b+1],h[b+2]),g.push(i)}}}(e),d.computeCentroids(),d.computeFaceNormals(),this.hasNormals(d)&&d.computeTangents(),b(d)},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){}},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(d.readyState==4)if(d.status==200||d.status==0){var e=JSON.parse(d.responseText);c.createScene(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")},d.open("GET",a,!0),d.overrideMimeType&&d.overrideMimeType("text/plain; charset=x-user-defined"),d.setRequestHeader("Content-Type","text/plain"),d.send(null)},THREE.SceneLoader.prototype.createScene=function(a,b,c){function d(a,b){return b=="relativeToHTML"?a:j+"/"+a}function e(){var a;for(m in F.objects)if(!L.objects[m]){r=F.objects[m];if(r.geometry!==void 0){if(B=L.geometries[r.geometry])a=!1,C=L.materials[r.materials[0]],(a=C instanceof THREE.ShaderMaterial)&&B.computeTangents(),v=r.position,w=r.rotation,x=r.quaternion,y=r.scale,s=r.matrix,x=0,r.materials.length==0&&(C=new THREE.MeshFaceMaterial),r.materials.length>1&&(C=new THREE.MeshFaceMaterial),a=new THREE.Mesh(B,C),a.name=m,s?(a.matrixAutoUpdate=!1,a.matrix.set(s[0],s[1],s[2],s[3],s[4],s[5],s[6],s[7],s[8],s[9],s[10],s[11],s[12],s[13],s[14],s[15])):(a.position.set(v[0],v[1],v[2]),x?(a.quaternion.set(x[0],x[1],x[2],x[3]),a.useQuaternion=!0):a.rotation.set(w[0],w[1],w[2]),a.scale.set(y[0],y[1],y[2])),a.visible=r.visible,a.doubleSided=r.doubleSided,a.castShadow=r.castShadow,a.receiveShadow=r.receiveShadow,L.scene.add(a),L.objects[m]=a}else v=r.position,w=r.rotation,x=r.quaternion,y=r.scale,x=0,a=new THREE.Object3D,a.name=m,a.position.set(v[0],v[1],v[2]),x?(a.quaternion.set(x[0],x[1],x[2],x[3]),a.useQuaternion=!0):a.rotation.set(w[0],w[1],w[2]),a.scale.set(y[0],y[1],y[2]),a.visible=r.visible!==void 0?r.visible:!1,L.scene.add(a),L.objects[m]=a,L.empties[m]=a}}function f(a){return function(b){L.geometries[a]=b,e(),H-=1,i.onLoadComplete(),h()}}function g(a){return function(b){L.geometries[a]=b}}function h(){i.callbackProgress({totalModels:J,totalTextures:K,loadedModels:J-H,loadedTextures:K-I},L),i.onLoadProgress(),H==0&&I==0&&b(L)}var i=this,j=THREE.Loader.prototype.extractUrlBase(c),k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L;F=a,c=new THREE.BinaryLoader,G=new THREE.JSONLoader,I=H=0,L={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(F.transform){a=F.transform.position,t=F.transform.rotation,z=F.transform.scale,a&&L.scene.position.set(a[0],a[1],a[2]),t&&L.scene.rotation.set(t[0],t[1],t[2]),z&&L.scene.scale.set(z[0],z[1],z[2]);if(a||t||z)L.scene.updateMatrix(),L.scene.updateMatrixWorld()}a=function(){I-=1,h(),i.onLoadComplete()};for(o in F.cameras)z=F.cameras[o],z.type=="perspective"?D=new THREE.PerspectiveCamera(z.fov,z.aspect,z.near,z.far):z.type=="ortho"&&(D=new THREE.OrthographicCamera(z.left,z.right,z.top,z.bottom,z.near,z.far)),v=z.position,t=z.target,z=z.up,D.position.set(v[0],v[1],v[2]),D.target=new THREE.Vector3(t[0],t[1],t[2]),z&&D.up.set(z[0],z[1],z[2]),L.cameras[o]=D;for(n in F.lights)t=F.lights[n],o=t.color!==void 0?t.color:16777215,D=t.intensity!==void 0?t.intensity:1,t.type=="directional"?(v=t.direction,u=new THREE.DirectionalLight(o,D),u.position.set(v[0],v[1],v[2]),u.position.normalize()):t.type=="point"?(v=t.position,u=t.distance,u=new THREE.PointLight(o,D,u),u.position.set(v[0],v[1],v[2])):t.type=="ambient"&&(u=new THREE.AmbientLight(o)),L.scene.add(u),L.lights[n]=u;for(p in F.fogs)n=F.fogs[p],n.type=="linear"?E=new THREE.Fog(0,n.near,n.far):n.type=="exp2"&&(E=new THREE.FogExp2(0,n.density)),z=n.color,E.color.setRGB(z[0],z[1],z[2]),L.fogs[p]=E;L.cameras&&F.defaults.camera&&(L.currentCamera=L.cameras[F.defaults.camera]),L.fogs&&F.defaults.fog&&(L.scene.fog=L.fogs[F.defaults.fog]),z=F.defaults.bgcolor,L.bgColor=new THREE.Color,L.bgColor.setRGB(z[0],z[1],z[2]),L.bgColorAlpha=F.defaults.bgalpha;for(k in F.geometries){p=F.geometries[k];if(p.type=="bin_mesh"||p.type=="ascii_mesh")H+=1,i.onLoadStart()}J=H;for(k in F.geometries)p=F.geometries[k],p.type=="cube"?(B=new THREE.CubeGeometry(p.width,p.height,p.depth,p.segmentsWidth,p.segmentsHeight,p.segmentsDepth,null,p.flipped,p.sides),L.geometries[k]=B):p.type=="plane"?(B=new THREE.PlaneGeometry(p.width,p.height,p.segmentsWidth,p.segmentsHeight),L.geometries[k]=B):p.type=="sphere"?(B=new THREE.SphereGeometry(p.radius,p.segmentsWidth,p.segmentsHeight),L.geometries[k]=B):p.type=="cylinder"?(B=new THREE.CylinderGeometry(p.topRad,p.botRad,p.height,p.radSegs,p.heightSegs),L.geometries[k]=B):p.type=="torus"?(B=new THREE.TorusGeometry(p.radius,p.tube,p.segmentsR,p.segmentsT),L.geometries[k]=B):p.type=="icosahedron"?(B=new THREE.IcosahedronGeometry(p.radius,p.subdivisions),L.geometries[k]=B):p.type=="bin_mesh"?c.load(d(p.url,F.urlBaseType),f(k)):p.type=="ascii_mesh"?G.load(d(p.url,F.urlBaseType),f(k)):p.type=="embedded_mesh"&&(p=F.embeds[p.id],p.metadata=F.metadata,p&&G.createModel(p,g(k),""));for(q in F.textures){k=F.textures[q];if(k.url instanceof Array){I+=k.url.length;for(p=0;p<k.url.length;p++)i.onLoadStart()}else I+=1,i.onLoadStart()}K=I;for(q in F.textures){k=F.textures[q],k.mapping!=void 0&&THREE[k.mapping]!=void 0&&(k.mapping=new THREE[k.mapping]);if(k.url instanceof Array){p=[];for(E=0;E<k.url.length;E++)p[E]=d(k.url[E],F.urlBaseType);p=THREE.ImageUtils.loadTextureCube(p,k.mapping,a)}else p=THREE.ImageUtils.loadTexture(d(k.url,F.urlBaseType),k.mapping,a),THREE[k.minFilter]!=void 0&&(p.minFilter=THREE[k.minFilter]),THREE[k.magFilter]!=void 0&&(p.magFilter=THREE[k.magFilter]),k.repeat&&(p.repeat.set(k.repeat[0],k.repeat[1]),k.repeat[0]!=1&&(p.wrapS=THREE.RepeatWrapping),k.repeat[1]!=1&&(p.wrapT=THREE.RepeatWrapping)),k.offset&&p.offset.set(k.offset[0],k.offset[1]),k.wrap&&(E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},E[k.wrap[0]]!==void 0&&(p.wrapS=E[k.wrap[0]]),E[k.wrap[1]]!==void 0&&(p.wrapT=E[k.wrap[1]]));L.textures[q]=p}for(l in F.materials){s=F.materials[l];for(A in s.parameters)A=="envMap"||A=="map"||A=="lightMap"?s.parameters[A]=L.textures[s.parameters[A]]:A=="shading"?s.parameters[A]=s.parameters[A]=="flat"?THREE.FlatShading:THREE.SmoothShading:A=="blending"?s.parameters[A]=THREE[s.parameters[A]]?THREE[s.parameters[A]]:THREE.NormalBlending:A=="combine"?s.parameters[A]=s.parameters[A]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation:A=="vertexColors"&&(s.parameters[A]=="face"?s.parameters[A]=THREE.FaceColors:s.parameters[A]&&(s.parameters[A]=THREE.VertexColors));s.parameters.opacity!==void 0&&s.parameters.opacity<1&&(s.parameters.transparent=!0),s.parameters.normalMap?(q=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(q.uniforms),k=s.parameters.color,p=s.parameters.specular,E=s.parameters.ambient,c=s.parameters.shininess,a.tNormal.texture=L.textures[s.parameters.normalMap],s.parameters.normalMapFactor&&(a.uNormalScale.value=s.parameters.normalMapFactor),s.parameters.map&&(a.tDiffuse.texture=s.parameters.map,a.enableDiffuse.value=!0),s.parameters.lightMap&&(a.tAO.texture=s.parameters.lightMap,a.enableAO.value=!0),s.parameters.specularMap&&(a.tSpecular.texture=L.textures[s.parameters.specularMap],a.enableSpecular.value=!0),a.uDiffuseColor.value.setHex(k),a.uSpecularColor.value.setHex(p),a.uAmbientColor.value.setHex(E),a.uShininess.value=c,s.parameters.opacity&&(a.uOpacity.value=s.parameters.opacity),C=new THREE.ShaderMaterial({fragmentShader:q.fragmentShader,vertexShader:q.vertexShader,uniforms:a,lights:!0,fog:!0})):C=new THREE[s.type](s.parameters),L.materials[l]=C}e(),i.callbackSync(L),h()},THREE.Material=function(a){a=a||{},this.id=THREE.MaterialCount++,this.name="",this.opacity=a.opacity!==void 0?a.opacity:1,this.transparent=a.transparent!==void 0?a.transparent:!1,this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending,this.blendSrc=a.blendSrc!==void 0?a.blendSrc:THREE.SrcAlphaFactor,this.blendDst=a.blendDst!==void 0?a.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=a.blendEquation!==void 0?a.blendEquation:THREE.AddEquation,this.depthTest=a.depthTest!==void 0?a.depthTest:!0,this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0,this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1,this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0,this.polygonOffsetUnits=a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0,this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0,this.overdraw=a.overdraw!==void 0?a.overdraw:!1,this.needsUpdate=this.visible=!0},THREE.MaterialCount=0,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.AdditiveAlphaBlending=5,THREE.CustomBlending=6,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215),this.linewidth=a.linewidth!==void 0?a.linewidth:1,this.linecap=a.linecap!==void 0?a.linecap:"round",this.linejoin=a.linejoin!==void 0?a.linejoin:"round",this.vertexColors=a.vertexColors?a.vertexColors:!1,this.fog=a.fog!==void 0?a.fog:!0},THREE.LineBasicMaterial.prototype=new THREE.Material,THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215),this.map=a.map!==void 0?a.map:null,this.lightMap=a.lightMap!==void 0?a.lightMap:null,this.envMap=a.envMap!==void 0?a.envMap:null,this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation,this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1,this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:.98,this.fog=a.fog!==void 0?a.fog:!0,this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading,this.wireframe=a.wireframe!==void 0?a.wireframe:!1,this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1,this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round",this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round",this.vertexColors=a.vertexColors!==void 0?a.vertexColors:THREE.NoColors,this.skinning=a.skinning!==void 0?a.skinning:!1,this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1},THREE.MeshBasicMaterial.prototype=new THREE.Material,THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215),this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(16777215),this.emissive=a.emissive!==void 0?new THREE.Color(a.emissive):new THREE.Color(0),this.wrapAround=a.wrapAround!==void 0?a.wrapAround:!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=a.map!==void 0?a.map:null,this.lightMap=a.lightMap!==void 0?a.lightMap:null,this.envMap=a.envMap!==void 0?a.envMap:null,this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation,this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1,this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:.98,this.fog=a.fog!==void 0?a.fog:!0,this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading,this.wireframe=a.wireframe!==void 0?a.wireframe:!1,this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1,this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round",this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round",this.vertexColors=a.vertexColors!==void 0?a.vertexColors:THREE.NoColors,this.skinning=a.skinning!==void 0?a.skinning:!1,this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1,this.morphNormals=a.morphNormals!==void 0?a.morphNormals:!1},THREE.MeshLambertMaterial.prototype=new THREE.Material,THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215),this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(16777215),this.emissive=a.emissive!==void 0?new THREE.Color(a.emissive):new THREE.Color(0),this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481),this.shininess=a.shininess!==void 0?a.shininess:30,this.metal=a.metal!==void 0?a.metal:!1,this.perPixel=a.perPixel!==void 0?a.perPixel:!1,this.wrapAround=a.wrapAround!==void 0?a.wrapAround:!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=a.map!==void 0?a.map:null,this.lightMap=a.lightMap!==void 0?a.lightMap:null,this.envMap=a.envMap!==void 0?a.envMap:null,this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation,this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1,this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:.98,this.fog=a.fog!==void 0?a.fog:!0,this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading,this.wireframe=a.wireframe!==void 0?a.wireframe:!1,this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1,this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round",this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round",this.vertexColors=a.vertexColors!==void 0?a.vertexColors:THREE.NoColors,this.skinning=a.skinning!==void 0?a.skinning:!1,this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1,this.morphNormals=a.morphNormals!==void 0?a.morphNormals:!1},THREE.MeshPhongMaterial.prototype=new THREE.Material,THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading,this.wireframe=a.wireframe!==void 0?a.wireframe:!1,this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1},THREE.MeshDepthMaterial.prototype=new THREE.Material,THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.shading=a.shading?a.shading:THREE.FlatShading,this.wireframe=a.wireframe?a.wireframe:!1,this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1},THREE.MeshNormalMaterial.prototype=new THREE.Material,THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshFaceMaterial=function(){},THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215),this.map=a.map!==void 0?a.map:null,this.size=a.size!==void 0?a.size:1,this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0,this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1,this.fog=a.fog!==void 0?a.fog:!0},THREE.ParticleBasicMaterial.prototype=new THREE.Material,THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial,THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215),this.program=a.program!==void 0?a.program:function(){}},THREE.ParticleCanvasMaterial.prototype=new THREE.Material,THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial,THREE.ParticleDOMMaterial=function(a){THREE.Material.call(this),this.domElement=a},THREE.ShaderMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}",this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}",this.uniforms=a.uniforms!==void 0?a.uniforms:{},this.attributes=a.attributes,this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading,this.wireframe=a.wireframe!==void 0?a.wireframe:!1,this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1,this.fog=a.fog!==void 0?a.fog:!1,this.lights=a.lights!==void 0?a.lights:!1,this.vertexColors=a.vertexColors!==void 0?a.vertexColors:THREE.NoColors,this.skinning=a.skinning!==void 0?a.skinning:!1,this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1,this.morphNormals=a.morphNormals!==void 0?a.morphNormals:!1},THREE.ShaderMaterial.prototype=new THREE.Material,THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.Texture=function(a,b,c,d,e,f,g,h){this.id=THREE.TextureCount++,this.image=a,this.mapping=b!==void 0?b:new THREE.UVMapping,this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping,this.wrapT=d!==void 0?d:THREE.ClampToEdgeWrapping,this.magFilter=e!==void 0?e:THREE.LinearFilter,this.minFilter=f!==void 0?f:THREE.LinearMipMapLinearFilter,this.format=g!==void 0?g:THREE.RGBAFormat,this.type=h!==void 0?h:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.needsUpdate=this.premultiplyAlpha=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter,this.format,this.type);return a.offset.copy(this.offset),a.repeat.copy(this.repeat),a}},THREE.TextureCount=0,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=0,THREE.ClampToEdgeWrapping=1,THREE.MirroredRepeatWrapping=2,THREE.NearestFilter=3,THREE.NearestMipMapNearestFilter=4,THREE.NearestMipMapLinearFilter=5,THREE.LinearFilter=6,THREE.LinearMipMapNearestFilter=7,THREE.LinearMipMapLinearFilter=8,THREE.ByteType=9,THREE.UnsignedByteType=10,THREE.ShortType=11,THREE.UnsignedShortType=12,THREE.IntType=13,THREE.UnsignedIntType=14,THREE.FloatType=15,THREE.AlphaFormat=16,THREE.RGBFormat=17,THREE.RGBAFormat=18,THREE.LuminanceFormat=19,THREE.LuminanceAlphaFormat=20,THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j){THREE.Texture.call(this,null,f,g,h,i,j,d,e),this.image={data:a,width:b,height:c}},THREE.DataTexture.prototype=new THREE.Texture,THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);return a.offset.copy(this.offset),a.repeat.copy(this.repeat),a},THREE.Particle=function(a){THREE.Object3D.call(this),this.material=a},THREE.Particle.prototype=new THREE.Object3D,THREE.Particle.prototype.constructor=THREE.Particle,THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=b!==void 0?b:new THREE.ParticleBasicMaterial({color:Math.random()*16777215}),this.sortParticles=!1,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius),this.frustumCulled=!1},THREE.ParticleSystem.prototype=new THREE.Object3D,THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem,THREE.Line=function(a,b,c){THREE.Object3D.call(this),this.geometry=a,this.material=b!==void 0?b:new THREE.LineBasicMaterial({color:Math.random()*16777215}),this.type=c!==void 0?c:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=new THREE.Object3D,THREE.Line.prototype.constructor=THREE.Line,THREE.Mesh=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=b!==void 0?b:new THREE.MeshBasicMaterial({color:Math.random()*16777215,wireframe:!0});if(this.geometry){this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius;if(this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}}},THREE.Mesh.prototype=new THREE.Object3D,THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.supr=THREE.Object3D.prototype,THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){return this.morphTargetDictionary[a]!==void 0?this.morphTargetDictionary[a]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),0)},THREE.Bone=function(a){THREE.Object3D.call(this),this.skin=a,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=new THREE.Object3D,THREE.Bone.prototype.constructor=THREE.Bone,THREE.Bone.prototype.supr=THREE.Object3D.prototype,THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)},THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b),this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var c,d,e,f,g,h;if(this.geometry.bones!==void 0){for(c=0;c<this.geometry.bones.length;c++)e=this.geometry.bones[c],f=e.pos,g=e.rotq,h=e.scl,d=this.addBone(),d.name=e.name,d.position.set(f[0],f[1],f[2]),d.quaternion.set(g[0],g[1],g[2],g[3]),d.useQuaternion=!0,h!==void 0?d.scale.set(h[0],h[1],h[2]):d.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)e=this.geometry.bones[c],d=this.bones[c],e.parent===-1?this.add(d):this.bones[e.parent].add(d);this.boneMatrices=new Float32Array(16*this.bones.length),this.pose()}},THREE.SkinnedMesh.prototype=new THREE.Mesh,THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.addBone=function(a){return a===void 0&&(a=new THREE.Bone(this)),this.bones.push(a),a},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}for(var b=this.bones.length,c=this.bones,d=this.boneMatrices,a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(d,a*16)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var d=new THREE.Matrix4;d.getInverse(a.skinMatrix),b.push(d),a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[],this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a],e=this.geometry.skinIndices[a].x,f=this.geometry.skinIndices[a].y,d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[e].multiplyVector3(d)),d=new THREE.Vector3(c.x,c.y,c.z),this.geometry.skinVerticesB.push(b[f].multiplyVector3(d)),this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*.5,this.geometry.skinWeights[a].x=this.geometry.skinWeights[a].x+c,this.geometry.skinWeights[a].y=this.geometry.skinWeights[a].y+c)}}},THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=new THREE.Mesh,THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh,THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a,this.endKeyframe=b,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&g.length>1){g=g[1],c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e),e>h.end&&(h.end=e),b||(b=g)}}a.firstAnimation=b},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[a]={start:b,end:c}},THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1e3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time=this.time+this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||this.time<0)this.direction=this.direction*-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)}else this.time=this.time%this.duration,this.time<0&&(this.time=this.time+this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1),a!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a),b=this.time%b/b,this.directionBackwards&&(b=1-b),this.morphTargetInfluences[this.currentKeyframe]=b,this.morphTargetInfluences[this.lastKeyframe]=1-b},THREE.Ribbon=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=b},THREE.Ribbon.prototype=new THREE.Object3D,THREE.Ribbon.prototype.constructor=THREE.Ribbon,THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=new THREE.Object3D,THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.supr=THREE.Object3D.prototype,THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a}),this.add(a)},THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld),a=a.matrixWorldInverse,a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]),this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++){if(!(a>=this.LODs[b].visibleAtDistance))break;this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0}for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}},THREE.Sprite=function(a){THREE.Object3D.call(this),this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215),this.map=a.map!==void 0?a.map:new THREE.Texture,this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending,this.blendSrc=a.blendSrc!==void 0?a.blendSrc:THREE.SrcAlphaFactor,this.blendDst=a.blendDst!==void 0?a.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=a.blendEquation!==void 0?a.blendEquation:THREE.AddEquation,this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0,this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates,this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:!this.useScreenCoordinates,this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance,this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center,this.rotation3d=this.rotation,this.rotation=0,this.opacity=1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1)},THREE.Sprite.prototype=new THREE.Object3D,THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=new THREE.Object3D,THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)this.__lights.indexOf(a)===-1&&this.__lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.__objects.indexOf(a)===-1){this.__objects.push(a),this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])},THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);b!==-1&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),b!==-1&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])},THREE.Fog=function(a,b,c){this.color=new THREE.Color(a),this.near=b!==void 0?b:1,this.far=c!==void 0?c:1e3},THREE.FogExp2=function(a,b){this.color=new THREE.Color(a),this.density=b!==void 0?b:25e-5},THREE.DOMRenderer=function(){console.log("THREE.DOMRenderer",THREE.REVISION);var a,b,c,d,e,f,g,h=new THREE.Projector;g=function(a){for(var b=document.documentElement,c=0;c<a.length;c++)if(typeof b.style[a[c]]=="string")return a[c];return null}(["transform","MozTransform","WebkitTransform","msTransform","OTransform"]),this.domElement=document.createElement("div"),this.setSize=function(a,b){c=a,d=b,e=c/2,f=d/2},this.render=function(c,d){var i,j,k,l,m,n;a=h.projectScene(c,d),b=a.elements,i=0;for(j=b.length;i<j;i++)k=b[i],k instanceof THREE.RenderableParticle&&k.material instanceof THREE.ParticleDOMMaterial&&(l=k.material.domElement,m=k.x*e+e-(l.offsetWidth>>1),n=k.y*f+f-(l.offsetHeight>>1),l.style.left=m+"px",l.style.top=n+"px",l.style.zIndex=Math.abs(Math.floor((1-k.z)*d.far/d.near)),g&&(l.style[g]="scale("+k.scale.x*e+","+k.scale.y*f+")"))}},THREE.CanvasRenderer=function(a){function b(a){s!=a&&(p.globalAlpha=s=a)}function c(a){if(t!=a){switch(a){case THREE.NormalBlending:p.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:p.globalCompositeOperation="lighter"}t=a}}function d(a){u!=a&&(p.strokeStyle=u=a)}function e(a){v!=a&&(p.fillStyle=v=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);var a=a||{},f=this,g,h,i,j=new THREE.Projector,k=a.canvas!==void 0?a.canvas:document.createElement("canvas"),l,m,n,o,p=k.getContext("2d"),q=new THREE.Color(0),r=0,s=1,t=0,u=null,v=null,w=null,x=null,y=null,z,A,B,C,D=new THREE.RenderableVertex,E=new THREE.RenderableVertex,F,G,H,I,J,K,L,M,N,O,P,Q,R=new THREE.Color,S=new THREE.Color,T=new THREE.Color,U=new THREE.Color,V=new THREE.Color,W=[],X=[],Y,Z,$,_,ab,bb,cb,db,eb,fb,gb=new THREE.Rectangle,hb=new THREE.Rectangle,ib=new THREE.Rectangle,jb=!1,kb=new THREE.Color,lb=new THREE.Color,mb=new THREE.Color,nb=new THREE.Vector3,ob,pb,qb,rb,sb,tb,a=16;ob=document.createElement("canvas"),ob.width=ob.height=2,pb=ob.getContext("2d"),pb.fillStyle="rgba(0,0,0,1)",pb.fillRect(0,0,2,2),qb=pb.getImageData(0,0,2,2),rb=qb.data,sb=document.createElement("canvas"),sb.width=sb.height=a,tb=sb.getContext("2d"),tb.translate(-a/2,-a/2),tb.scale(a,a),a--,this.domElement=k,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.setSize=function(a,b){l=a,m=b,n=Math.floor(l/2),o=Math.floor(m/2),k.width=l,k.height=m,gb.set(-n,-o,n,o),hb.set(-n,-o,n,o),s=1,t=0,y=x=w=v=u=null},this.setClearColor=function(a,b){q.copy(a),r=b!==void 0?b:1,hb.set(-n,-o,n,o)},this.setClearColorHex=function(a,b){q.setHex(a),r=b!==void 0?b:1,hb.set(-n,-o,n,o)},this.clear=function(){p.setTransform(1,0,0,-1,n,o),hb.isEmpty()||(hb.minSelf(gb),hb.inflate(2),r<1&&p.clearRect(Math.floor(hb.getX()),Math.floor(hb.getY()),Math.floor(hb.getWidth()),Math.floor(hb.getHeight())),r>0&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(q.r*255)+","+Math.floor(q.g*255)+","+Math.floor(q.b*255)+","+r+")"),p.fillRect(Math.floor(hb.getX()),Math.floor(hb.getY()),Math.floor(hb.getWidth()),Math.floor(hb.getHeight()))),hb.empty())},this.render=function(a,k){function l(a){var b,c,d,e;kb.setRGB(0,0,0),lb.setRGB(0,0,0),mb.setRGB(0,0,0),b=0;for(c=a.length;b<c;b++)d=a[b],e=d.color,d instanceof THREE.AmbientLight?(kb.r=kb.r+e.r,kb.g=kb.g+e.g,kb.b=kb.b+e.b):d instanceof THREE.DirectionalLight?(lb.r=lb.r+e.r,lb.g=lb.g+e.g,lb.b=lb.b+e.b):d instanceof THREE.PointLight&&(mb.r=mb.r+e.r,mb.g=mb.g+e.g,mb.b=mb.b+e.b)}function m(a,b,c,d){var e,f,g,h,i,j;e=0;for(f=a.length;e<f;e++)g=a[e],h=g.color,g instanceof THREE.DirectionalLight?(i=g.matrixWorld.getPosition(),j=c.dot(i),j<=0||(j*=g.intensity,d.r=d.r+h.r*j,d.g=d.g+h.g*j,d.b=d.b+h.b*j)):g instanceof THREE.PointLight&&(i=g.matrixWorld.getPosition(),j=c.dot(nb.sub(i,b).normalize()),j<=0||(j*=g.distance==0?1:1-Math.min(b.distanceTo(i)/g.distance,1),j!=0&&(j*=g.intensity,d.r=d.r+h.r*j,d.g=d.g+h.g*j,d.b=d.b+h.b*j)))}function q(a,f,g){b(g.opacity),c(g.blending);var h,i,j,k,l,m;g instanceof THREE.ParticleBasicMaterial?g.map&&(k=g.map.image,l=k.width>>1,m=k.height>>1,g=f.scale.x*n,j=f.scale.y*o,h=g*l,i=j*m,ib.set(a.x-h,a.y-i,a.x+h,a.y+i),gb.intersects(ib)&&(p.save(),p.translate(a.x,a.y),p.rotate(-f.rotation),p.scale(g,-j),p.translate(-l,-m),p.drawImage(k,0,0),p.restore())):g instanceof THREE.ParticleCanvasMaterial&&(h=f.scale.x*n,i=f.scale.y*o,ib.set(a.x-h,a.y-i,a.x+h,a.y+i),gb.intersects(ib)&&(d(g.color.getContextStyle()),e(g.color.getContextStyle()),p.save(),p.translate(a.x,a.y),p.rotate(-f.rotation),p.scale(h,i),g.program(p),p.restore()))}function r(a,e,f,g){b(g.opacity),c(g.blending),p.beginPath(),p.moveTo(a.positionScreen.x,a.positionScreen.y),p.lineTo(e.positionScreen.x,e.positionScreen.y),p.closePath(),g instanceof THREE.LineBasicMaterial&&(a=g.linewidth,w!=a&&(p.lineWidth=w=a),a=g.linecap,x!=a&&(p.lineCap=x=a),a=g.linejoin,y!=a&&(p.lineJoin=y=a),d(g.color.getContextStyle()),p.stroke(),ib.inflate(g.linewidth*2))}function s(a,d,e,g,h,j,l,n){f.info.render.vertices=f.info.render.vertices+3,f.info.render.faces++,b(n.opacity),c(n.blending),F=a.positionScreen.x,G=a.positionScreen.y,H=d.positionScreen.x,I=d.positionScreen.y,J=e.positionScreen.x,K=e.positionScreen.y,u(F,G,H,I,J,K),n instanceof THREE.MeshBasicMaterial?n.map?n.map.mapping instanceof THREE.UVMapping&&(_=l.uvs[0],wb(F,G,H,I,J,K,_[g].u,_[g].v,_[h].u,_[h].v,_[j].u,_[j].v,n.map)):n.envMap?n.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=k.matrixWorldInverse,nb.copy(l.vertexNormalsWorld[g]),ab=(nb.x*a.elements[0]+nb.y*a.elements[4]+nb.z*a.elements[8])*.5+.5,bb=-(nb.x*a.elements[1]+nb.y*a.elements[5]+nb.z*a.elements[9])*.5+.5,nb.copy(l.vertexNormalsWorld[h]),cb=(nb.x*a.elements[0]+nb.y*a.elements[4]+nb.z*a.elements[8])*.5+.5,db=-(nb.x*a.elements[1]+nb.y*a.elements[5]+nb.z*a.elements[9])*.5+.5,nb.copy(l.vertexNormalsWorld[j]),eb=(nb.x*a.elements[0]+nb.y*a.elements[4]+nb.z*a.elements[8])*.5+.5,fb=-(nb.x*a.elements[1]+nb.y*a.elements[5]+nb.z*a.elements[9])*.5+.5,wb(F,G,H,I,J,K,ab,bb,cb,db,eb,fb,n.envMap)):n.wireframe?ub(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):vb(n.color):n instanceof THREE.MeshLambertMaterial?jb?!n.wireframe&&n.shading==THREE.SmoothShading&&l.vertexNormalsWorld.length==3?(S.r=T.r=U.r=kb.r,S.g=T.g=U.g=kb.g,S.b=T.b=U.b=kb.b,m(i,l.v1.positionWorld,l.vertexNormalsWorld[0],S),m(i,l.v2.positionWorld,l.vertexNormalsWorld[1],T),m(i,l.v3.positionWorld,l.vertexNormalsWorld[2],U),S.r=Math.max(0,Math.min(n.color.r*S.r,1)),S.g=Math.max(0,Math.min(n.color.g*S.g,1)),S.b=Math.max(0,Math.min(n.color.b*S.b,1)),T.r=Math.max(0,Math.min(n.color.r*T.r,1)),T.g=Math.max(0,Math.min(n.color.g*T.g,1)),T.b=Math.max(0,Math.min(n.color.b*T.b,1)),U.r=Math.max(0,Math.min(n.color.r*U.r,1)),U.g=Math.max(0,Math.min(n.color.g*U.g,1)),U.b=Math.max(0,Math.min(n.color.b*U.b,1)),V.r=(T.r+U.r)*.5,V.g=(T.g+U.g)*.5,V.b=(T.b+U.b)*.5,$=yb(S,T,U,V),xb(F,G,H,I,J,K,0,0,1,0,0,1,$)):(R.r=kb.r,R.g=kb.g,R.b=kb.b,m(i,l.centroidWorld,l.normalWorld,R),R.r=Math.max(0,Math.min(n.color.r*R.r,1)),R.g=Math.max(0,Math.min(n.color.g*R.g,1)),R.b=Math.max(0,Math.min(n.color.b*R.b,1)),n.wireframe?ub(R,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):vb(R)):n.wireframe?ub(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):vb(n.color):n instanceof THREE.MeshDepthMaterial?(Y=k.near,Z=k.far,S.r=S.g=S.b=1-zb(a.positionScreen.z,Y,Z),T.r=T.g=T.b=1-zb(d.positionScreen.z,Y,Z),U.r=U.g=U.b=1-zb(e.positionScreen.z,Y,Z),V.r=(T.r+U.r)*.5,V.g=(T.g+U.g)*.5,V.b=(T.b+U.b)*.5,$=yb(S,T,U,V),xb(F,G,H,I,J,K,0,0,1,0,0,1,$)):n instanceof THREE.MeshNormalMaterial&&(R.r=Ab(l.normalWorld.x),R.g=Ab(l.normalWorld.y),R.b=Ab(l.normalWorld.z),n.wireframe?ub(R,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):vb(R))}function t(a,d,e,g,h,j,l,n,o){f.info.render.vertices=f.info.render.vertices+4,f.info.render.faces++,b(n.opacity),c(n.blending),n.map||n.envMap?(s(a,d,g,0,1,3,l,n,o),s(h,e,j,1,2,3,l,n,o)):(F=a.positionScreen.x,G=a.positionScreen.y,H=d.positionScreen.x,I=d.positionScreen.y,J=e.positionScreen.x,K=e.positionScreen.y,L=g.positionScreen.x,M=g.positionScreen.y,N=h.positionScreen.x,O=h.positionScreen.y,P=j.positionScreen.x,Q=j.positionScreen.y,n instanceof THREE.MeshBasicMaterial?(v(F,G,H,I,J,K,L,M),n.wireframe?ub(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):vb(n.color)):n instanceof THREE.MeshLambertMaterial?jb?!n.wireframe&&n.shading==THREE.SmoothShading&&l.vertexNormalsWorld.length==4?(S.r=T.r=U.r=V.r=kb.r,S.g=T.g=U.g=V.g=kb.g,S.b=T.b=U.b=V.b=kb.b,m(i,l.v1.positionWorld,l.vertexNormalsWorld[0],S),m(i,l.v2.positionWorld,l.vertexNormalsWorld[1],T),m(i,l.v4.positionWorld,l.vertexNormalsWorld[3],U),m(i,l.v3.positionWorld,l.vertexNormalsWorld[2],V),S.r=Math.max(0,Math.min(n.color.r*S.r,1)),S.g=Math.max(0,Math.min(n.color.g*S.g,1)),S.b=Math.max(0,Math.min(n.color.b*S.b,1)),T.r=Math.max(0,Math.min(n.color.r*T.r,1)),T.g=Math.max(0,Math.min(n.color.g*T.g,1)),T.b=Math.max(0,Math.min(n.color.b*T.b,1)),U.r=Math.max(0,Math.min(n.color.r*U.r,1)),U.g=Math.max(0,Math.min(n.color.g*U.g,1)),U.b=Math.max(0,Math.min(n.color.b*U.b,1)),V.r=Math.max(0,Math.min(n.color.r*V.r,1)),V.g=Math.max(0,Math.min(n.color.g*V.g,1)),V.b=Math.max(0,Math.min(n.color.b*V.b,1)),$=yb(S,T,U,V),u(F,G,H,I,L,M),xb(F,G,H,I,L,M,0,0,1,0,0,1,$),u(N,O,J,K,P,Q),xb(N,O,J,K,P,Q,1,0,1,1,0,1,$)):(R.r=kb.r,R.g=kb.g,R.b=kb.b,m(i,l.centroidWorld,l.normalWorld,R),R.r=Math.max(0,Math.min(n.color.r*R.r,1)),R.g=Math.max(0,Math.min(n.color.g*R.g,1)),R.b=Math.max(0,Math.min(n.color.b*R.b,1)),v(F,G,H,I,J,K,L,M),n.wireframe?ub(R,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):vb(R)):(v(F,G,H,I,J,K,L,M),n.wireframe?ub(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):vb(n.color)):n instanceof THREE.MeshNormalMaterial?(R.r=Ab(l.normalWorld.x),R.g=Ab(l.normalWorld.y),R.b=Ab(l.normalWorld.z),v(F,G,H,I,J,K,L,M),n.wireframe?ub(R,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):vb(R)):n instanceof THREE.MeshDepthMaterial&&(Y=k.near,Z=k.far,S.r=S.g=S.b=1-zb(a.positionScreen.z,Y,Z),T.r=T.g=T.b=1-zb(d.positionScreen.z,Y,Z),U.r=U.g=U.b=1-zb(g.positionScreen.z,Y,Z),V.r=V.g=V.b=1-zb(e.positionScreen.z,Y,Z),$=yb(S,T,U,V),u(F,G,H,I,L,M),xb(F,G,H,I,L,M,0,0,1,0,0,1,$),u(N,O,J,K,P,Q),xb(N,O,J,K,P,Q,1,0,1,1,0,1,$)))}function u(a,b,c,d,e,f){p.beginPath(),p.moveTo(a,b),p.lineTo(c,d),p.lineTo(e,f),p.lineTo(a,b),p.closePath()}function v(a,b,c,d,e,f,g,h){p.beginPath(),p.moveTo(a,b),p.lineTo(c,d),p.lineTo(e,f),p.lineTo(g,h),p.lineTo(a,b),p.closePath()}function ub(a,b,c,e){w!=b&&(p.lineWidth=w=b),x!=c&&(p.lineCap=x=c),y!=e&&(p.lineJoin=y=e),d(a.getContextStyle()),p.stroke(),ib.inflate(b*2)}function vb(a){e(a.getContextStyle()),p.fill()}function wb(a,b,c,d,f,g,h,i,j,k,l,m,n){if(n.image.width!=0){if(n.needsUpdate==1||W[n.id]==void 0){var o=n.wrapS==THREE.RepeatWrapping,q=n.wrapT==THREE.RepeatWrapping;W[n.id]=p.createPattern(n.image,o&&q?"repeat":o&&!q?"repeat-x":!o&&q?"repeat-y":"no-repeat"),n.needsUpdate=!1}e(W[n.id]);var o=n.offset.x/n.repeat.x,q=n.offset.y/n.repeat.y,r=n.image.width*n.repeat.x,s=n.image.height*n.repeat.y,h=(h+o)*r,i=(i+q)*s,c=c-a,d=d-b,f=f-a,g=g-b,j=(j+o)*r-h,k=(k+q)*s-i,l=(l+o)*r-h,m=(m+q)*s-i,o=j*m-l*k;o==0?(X[n.id]===void 0&&(b=document.createElement("canvas"),b.width=n.image.width,b.height=n.image.height,b=b.getContext("2d"),b.drawImage(n.image,0,0),X[n.id]=b.getImageData(0,0,n.image.width,n.image.height).data),b=X[n.id],h=(Math.floor(h)+Math.floor(i)*n.image.width)*4,R.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),vb(R)):(o=1/o,n=(m*c-k*f)*o,k=(m*d-k*g)*o,c=(j*f-l*c)*o,d=(j*g-l*d)*o,a=a-n*h-c*i,h=b-k*h-d*i,p.save(),p.transform(n,k,c,d,a,h),p.fill(),p.restore())}}function xb(a,b,c,d,e,f,g,h,i,j,k,l,m){var n,o;n=m.width-1,o=m.height-1,g*=n,h*=o,c-=a,d-=b,e-=a,f-=b,i=i*n-g,j=j*o-h,k=k*n-g,l=l*o-h,o=1/(i*l-k*j),n=(l*c-j*e)*o,j=(l*d-j*f)*o,c=(i*e-k*c)*o,d=(i*f-k*d)*o,a=a-n*g-c*h,b=b-j*g-d*h,p.save(),p.transform(n,j,c,d,a,b),p.clip(),p.drawImage(m,0,0),p.restore()}function yb(a,b,c,d){var e=~~(a.r*255),f=~~(a.g*255),a=~~(a.b*255),g=~~(b.r*255),h=~~(b.g*255),b=~~(b.b*255),i=~~(c.r*255),j=~~(c.g*255),c=~~(c.b*255),k=~~(d.r*255),l=~~(d.g*255),d=~~(d.b*255);return rb[0]=e<0?0:e>255?255:e,rb[1]=f<0?0:f>255?255:f,rb[2]=a<0?0:a>255?255:a,rb[4]=g<0?0:g>255?255:g,rb[5]=h<0?0:h>255?255:h,rb[6]=b<0?0:b>255?255:b,rb[8]=i<0?0:i>255?255:i,rb[9]=j<0?0:j>255?255:j,rb[10]=c<0?0:c>255?255:c,rb[12]=k<0?0:k>255?255:k,rb[13]=l<0?0:l>255?255:l,rb[14]=d<0?0:d>255?255:d,pb.putImageData(qb,0,0),tb.drawImage(ob,0,0),sb}function zb(a,b,c){return a=(a-b)/(c-b),a*a*(3-2*a)}function Ab(a){return a=(a+1)*.5,a<0?0:a>1?1:a}function Bb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;e!=0&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x=b.x+c,b.y=b.y+d,a.x=a.x-c,a.y=a.y-d)}var Eb,Fb,Gb,Hb;this.autoClear?this.clear():p.setTransform(1,0,0,-1,n,o),f.info.render.vertices=0,f.info.render.faces=0,g=j.projectScene(a,k,this.sortElements),h=g.elements,i=g.lights,(jb=i.length>0)&&l(i),Eb=0;for(Fb=h.length;Eb<Fb;Eb++)Gb=h[Eb],Hb=Gb.material,Hb=Hb instanceof THREE.MeshFaceMaterial?Gb.faceMaterial:Hb,Hb!==void 0&&Hb.visible!==!1&&(ib.empty(),Gb instanceof THREE.RenderableParticle?(z=Gb,z.x=z.x*n,z.y=z.y*o,q(z,Gb,Hb,a)):Gb instanceof THREE.RenderableLine?(z=Gb.v1,A=Gb.v2,z.positionScreen.x=z.positionScreen.x*n,z.positionScreen.y=z.positionScreen.y*o,A.positionScreen.x=A.positionScreen.x*n,A.positionScreen.y=A.positionScreen.y*o,ib.addPoint(z.positionScreen.x,z.positionScreen.y),ib.addPoint(A.positionScreen.x,A.positionScreen.y),gb.intersects(ib)&&r(z,A,Gb,Hb,a)):Gb instanceof THREE.RenderableFace3?(z=Gb.v1,A=Gb.v2,B=Gb.v3,z.positionScreen.x=z.positionScreen.x*n,z.positionScreen.y=z.positionScreen.y*o,A.positionScreen.x=A.positionScreen.x*n,A.positionScreen.y=A.positionScreen.y*o,B.positionScreen.x=B.positionScreen.x*n,B.positionScreen.y=B.positionScreen.y*o,Hb.overdraw&&(Bb(z.positionScreen,A.positionScreen),Bb(A.positionScreen,B.positionScreen),Bb(B.positionScreen,z.positionScreen)),ib.add3Points(z.positionScreen.x,z.positionScreen.y,A.positionScreen.x,A.positionScreen.y,B.positionScreen.x,B.positionScreen.y),gb.intersects(ib)&&s(z,A,B,0,1,2,Gb,Hb,a)):Gb instanceof THREE.RenderableFace4&&(z=Gb.v1,A=Gb.v2,B=Gb.v3,C=Gb.v4,z.positionScreen.x=z.positionScreen.x*n,z.positionScreen.y=z.positionScreen.y*o,A.positionScreen.x=A.positionScreen.x*n,A.positionScreen.y=A.positionScreen.y*o,B.positionScreen.x=B.positionScreen.x*n,B.positionScreen.y=B.positionScreen.y*o,C.positionScreen.x=C.positionScreen.x*n,C.positionScreen.y=C.positionScreen.y*o,D.positionScreen.copy(A.positionScreen),E.positionScreen.copy(C.positionScreen),Hb.overdraw&&(Bb(z.positionScreen,A.positionScreen),Bb(A.positionScreen,C.positionScreen),Bb(C.positionScreen,z.positionScreen),Bb(B.positionScreen,D.positionScreen),Bb(B.positionScreen,E.positionScreen)),ib.addPoint(z.positionScreen.x,z.positionScreen.y),ib.addPoint(A.positionScreen.x,A.positionScreen.y),ib.addPoint(B.positionScreen.x,B.positionScreen.y),ib.addPoint(C.positionScreen.x,C.positionScreen.y),gb.intersects(ib)&&t(z,A,B,C,D,E,Gb,Hb,a)),hb.addRectangle(ib));p.setTransform(1,0,0,1,0,0)}},THREE.SVGRenderer=function(){function a(a,b,c,d){var e,f,g,h,i,j;e=0;for(f=a.length;e<f;e++)g=a[e],h=g.color,g instanceof THREE.DirectionalLight?(i=g.matrixWorld.getPosition(),j=c.dot(i),j<=0||(j*=g.intensity,d.r=d.r+h.r*j,d.g=d.g+h.g*j,d.b=d.b+h.b*j)):g instanceof THREE.PointLight&&(i=g.matrixWorld.getPosition(),j=c.dot(z.sub(i,b).normalize()),j<=0||(j*=g.distance==0?1:1-Math.min(b.distanceTo(i)/g.distance,1),j!=0&&(j*=g.intensity,d.r=d.r+h.r*j,d.g=d.g+h.g*j,d.b=d.b+h.b*j)))}function b(a){return A[a]==null&&(A[a]=document.createElementNS("http://www.w3.org/2000/svg","path"),F==0&&A[a].setAttribute("shape-rendering","crispEdges")),A[a]}function c(a){return a=(a+1)*.5,a<0?0:a>1?1:a}console.log("THREE.SVGRenderer",THREE.REVISION);var d=this,e,f,g,h=new THREE.Projector,i=document.createElementNS("http://www.w3.org/2000/svg","svg"),j,k,l,m,n,o,p,q,r=new THREE.Rectangle,s=new THREE.Rectangle,t=!1,u=new THREE.Color,v=new THREE.Color,w=new THREE.Color,x=new THREE.Color,y,z=new THREE.Vector3,A=[],B=[],C,D,E,F=1;this.domElement=i,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.setQuality=function(a){switch(a){case"high":F=1;break;case"low":F=0}},this.setSize=function(a,b){j=a,k=b,l=j/2,m=k/2,i.setAttribute("viewBox",-l+" "+ -m+" "+j+" "+k),i.setAttribute("width",j),i.setAttribute("height",k),r.set(-l,-m,l,m)},this.clear=function(){for(;i.childNodes.length>0;)i.removeChild(i.childNodes[0])},this.render=function(j,k){var z,A,G,I;this.autoClear&&this.clear(),d.info.render.vertices=0,d.info.render.faces=0,e=h.projectScene(j,k,this.sortElements),f=e.elements,g=e.lights,E=D=0;if(t=g.length>0){v.setRGB(0,0,0),w.setRGB(0,0,0),x.setRGB(0,0,0),z=0;for(A=g.length;z<A;z++)I=g[z],G=I.color,I instanceof THREE.AmbientLight?(v.r=v.r+G.r,v.g=v.g+G.g,v.b=v.b+G.b):I instanceof THREE.DirectionalLight?(w.r=w.r+G.r,w.g=w.g+G.g,w.b=w.b+G.b):I instanceof THREE.PointLight&&(x.r=x.r+G.r,x.g=x.g+G.g,x.b=x.b+G.b)}z=0;for(A=f.length;z<A;z++){G=f[z],I=G.material,I=I instanceof THREE.MeshFaceMaterial?G.faceMaterial:I;if(I!==void 0&&I.visible!==!1){s.empty();if(G instanceof THREE.RenderableParticle)n=G,n.x=n.x*l,n.y=n.y*-m;else if(G instanceof THREE.RenderableLine){n=G.v1,o=G.v2,n.positionScreen.x=n.positionScreen.x*l,n.positionScreen.y=n.positionScreen.y*-m,o.positionScreen.x=o.positionScreen.x*l,o.positionScreen.y=o.positionScreen.y*-m,s.addPoint(n.positionScreen.x,n.positionScreen.y),s.addPoint(o.positionScreen.x,o.positionScreen.y);if(r.intersects(s)){G=n;var L=o,M=E++;B[M]==null&&(B[M]=document.createElementNS("http://www.w3.org/2000/svg","line"),F==0&&B[M].setAttribute("shape-rendering","crispEdges")),C=B[M],C.setAttribute("x1",G.positionScreen.x),C.setAttribute("y1",G.positionScreen.y),C.setAttribute("x2",L.positionScreen.x),C.setAttribute("y2",L.positionScreen.y),I instanceof THREE.LineBasicMaterial&&(C.setAttribute("style","fill: none; stroke: "+I.color.getContextStyle()+"; stroke-width: "+I.linewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.linecap+"; stroke-linejoin: "+I.linejoin),i.appendChild(C))}}else if(G instanceof THREE.RenderableFace3){n=G.v1,o=G.v2,p=G.v3,n.positionScreen.x=n.positionScreen.x*l,n.positionScreen.y=n.positionScreen.y*-m,o.positionScreen.x=o.positionScreen.x*l,o.positionScreen.y=o.positionScreen.y*-m,p.positionScreen.x=p.positionScreen.x*l,p.positionScreen.y=p.positionScreen.y*-m,s.addPoint(n.positionScreen.x,n.positionScreen.y),s.addPoint(o.positionScreen.x,o.positionScreen.y),s.addPoint(p.positionScreen.x,p.positionScreen.y);if(r.intersects(s)){var L=n,M=o,N=p;d.info.render.vertices=d.info.render.vertices+3,d.info.render.faces++,C=b(D++),C.setAttribute("d","M "+L.positionScreen.x+" "+L.positionScreen.y+" L "+M.positionScreen.x+" "+M.positionScreen.y+" L "+N.positionScreen.x+","+N.positionScreen.y+"z"),I instanceof THREE.MeshBasicMaterial?u.copy(I.color):I instanceof THREE.MeshLambertMaterial?t?(u.r=v.r,u.g=v.g,u.b=v.b,a(g,G.centroidWorld,G.normalWorld,u),u.r=Math.max(0,Math.min(I.color.r*u.r,1)),u.g=Math.max(0,Math.min(I.color.g*u.g,1)),u.b=Math.max(0,Math.min(I.color.b*u.b,1))):u.copy(I.color):I instanceof THREE.MeshDepthMaterial?(y=1-I.__2near/(I.__farPlusNear-G.z*I.__farMinusNear),u.setRGB(y,y,y)):I instanceof THREE.MeshNormalMaterial&&u.setRGB(c(G.normalWorld.x),c(G.normalWorld.y),c(G.normalWorld.z)),I.wireframe?C.setAttribute("style","fill: none; stroke: "+u.getContextStyle()+"; stroke-width: "+I.wireframeLinewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.wireframeLinecap+"; stroke-linejoin: "+I.wireframeLinejoin):C.setAttribute("style","fill: "+u.getContextStyle()+"; fill-opacity: "+I.opacity),i.appendChild(C)}}else if(G instanceof THREE.RenderableFace4){n=G.v1,o=G.v2,p=G.v3,q=G.v4,n.positionScreen.x=n.positionScreen.x*l,n.positionScreen.y=n.positionScreen.y*-m,o.positionScreen.x=o.positionScreen.x*l,o.positionScreen.y=o.positionScreen.y*-m,p.positionScreen.x=p.positionScreen.x*l,p.positionScreen.y=p.positionScreen.y*-m,q.positionScreen.x=q.positionScreen.x*l,q.positionScreen.y=q.positionScreen.y*-m,s.addPoint(n.positionScreen.x,n.positionScreen.y),s.addPoint(o.positionScreen.x,o.positionScreen.y),s.addPoint(p.positionScreen.x,p.positionScreen.y),s.addPoint(q.positionScreen.x,q.positionScreen.y);if(r.intersects(s)){var L=n,M=o,N=p,O=q;d.info.render.vertices=d.info.render.vertices+4,d.info.render.faces++,C=b(D++),C.setAttribute("d","M "+L.positionScreen.x+" "+L.positionScreen.y+" L "+M.positionScreen.x+" "+M.positionScreen.y+" L "+N.positionScreen.x+","+N.positionScreen.y+" L "+O.positionScreen.x+","+O.positionScreen.y+"z"),I instanceof THREE.MeshBasicMaterial?u.copy(I.color):I instanceof THREE.MeshLambertMaterial?t?(u.r=v.r,u.g=v.g,u.b=v.b,a(g,G.centroidWorld,G.normalWorld,u),u.r=Math.max(0,Math.min(I.color.r*u.r,1)),u.g=Math.max(0,Math.min(I.color.g*u.g,1)),u.b=Math.max(0,Math.min(I.color.b*u.b,1))):u.copy(I.color):I instanceof THREE.MeshDepthMaterial?(y=1-I.__2near/(I.__farPlusNear-G.z*I.__farMinusNear),u.setRGB(y,y,y)):I instanceof THREE.MeshNormalMaterial&&u.setRGB(c(G.normalWorld.x),c(G.normalWorld.y),c(G.normalWorld.z)),I.wireframe?C.setAttribute("style","fill: none; stroke: "+u.getContextStyle()+"; stroke-width: "+I.wireframeLinewidth+"; stroke-opacity: "+I.opacity+"; stroke-linecap: "+I.wireframeLinecap+"; stroke-linejoin: "+I.wireframeLinejoin):C.setAttribute("style","fill: "+u.getContextStyle()+"; fill-opacity: "+I.opacity),i.appendChild(C)}}}}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvWorldPosition = mPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\nvec3 transformedNormal = normalMatrix * morphedNormal;\n#else\nvec3 transformedNormal = normalMatrix * normal;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n#ifdef USE_MORPHTARGETS\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\n#else\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n#endif\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)e[c]=d[c]}return e},clone:function(a){var b,c,d,e={};for(b in a){e[b]={};for(c in a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d}return e}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif",THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.morphnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){a.__webglCustomAttributesList===void 0&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;f.type==="v2"?g=2:f.type==="v3"?g=3:f.type==="v4"?g=4:f.type==="c"&&(g=3),f.size=g,f.array=new Float32Array(c*g),f.buffer=I.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function c(a,b){if(!(!a.material||a.material instanceof THREE.MeshFaceMaterial))return a.material;if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&a.shading!==void 0&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a instanceof THREE.ShaderMaterial?!0:!1}function f(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;var i=a.colors,j=i.length,k=a.__vertexArray,l=a.__colorArray,m=a.__sortArray,n=a.verticesNeedUpdate,o=a.colorsNeedUpdate,p=a.__webglCustomAttributesList;if(c.sortParticles){ib.copy(hb),ib.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)e=h[d],jb.copy(e),ib.multiplyVector3(jb),m[d]=[jb.z,d];m.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)e=h[m[d][1]],f=d*3,k[f]=e.x,k[f+1]=e.y,k[f+2]=e.z;for(d=0;d<j;d++)f=d*3,e=i[m[d][1]],l[f]=e.r,l[f+1]=e.g,l[f+2]=e.b;if(p){i=0;for(j=p.length;i<j;i++){h=p[i];if(h.boundTo===void 0||h.boundTo==="vertices"){f=0,e=h.value.length;if(h.size===1)for(d=0;d<e;d++)g=m[d][1],h.array[d]=h.value[g];else if(h.size===2)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(h.size===3)if(h.type==="c")for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(h.size===4)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}}}else{if(n)for(d=0;d<g;d++)e=h[d],f=d*3,k[f]=e.x,k[f+1]=e.y,k[f+2]=e.z;if(o)for(d=0;d<j;d++)e=i[d],f=d*3,l[f]=e.r,l[f+1]=e.g,l[f+2]=e.b;if(p){i=0;for(j=p.length;i<j;i++){h=p[i];if(h.needsUpdate&&(h.boundTo===void 0||h.boundTo==="vertices")){e=h.value.length,f=0;if(h.size===1)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(h.size===2)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(h.size===3)if(h.type==="c")for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(h.size===4)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}}}if(n||c.sortParticles)I.bindBuffer(I.ARRAY_BUFFER,a.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,k,b);if(o||c.sortParticles)I.bindBuffer(I.ARRAY_BUFFER,a.__webglColorBuffer),I.bufferData(I.ARRAY_BUFFER,l,b);if(p){i=0;for(j=p.length;i<j;i++){h=p[i];if(h.needsUpdate||c.sortParticles)I.bindBuffer(I.ARRAY_BUFFER,h.buffer),I.bufferData(I.ARRAY_BUFFER,h.array,b)}}}function g(a,b){return b.z-a.z}function h(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)O=K=null,M=N=R=Q=X=W=S=-1,lb=!0,a[d].render(b,c,eb,fb),O=K=null,M=N=R=Q=X=W=S=-1,lb=!0}function i(a,b,c,d,e,f,g,h){var i,j,k,l;b?(j=a.length-1,l=b=-1):(j=0,b=a.length,l=1);for(var m=j;m!==b;m+=l){i=a[m];if(i.render){j=i.object,k=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;g&&H.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),H.setDepthTest(i.depthTest),H.setDepthWrite(i.depthWrite),r(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}H.setObjectFaces(j),k instanceof THREE.BufferGeometry?H.renderBufferDirect(d,e,f,i,k,j):H.renderBuffer(d,e,f,i,k,j)}}}function j(a,b,c,d,e,f,g){for(var h,i,j=0,k=a.length;j<k;j++){h=a[j],i=h.object;if(i.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&H.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),H.setDepthTest(h.depthTest),H.setDepthWrite(h.depthWrite),r(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}H.renderImmediateObject(c,d,e,h,i)}}}function k(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function l(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function m(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function n(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function o(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function p(a,b,c,d,e){if(!d.program||d.needsUpdate)H.initMaterial(d,b,c,e),d.needsUpdate=!1;if(d.morphTargets&&!e.__webglMorphTargetInfluences){e.__webglMorphTargetInfluences=new Float32Array(H.maxMorphTargets);for(var f=0,g=H.maxMorphTargets;f<g;f++)e.__webglMorphTargetInfluences[f]=0}var h=!1,f=d.program,g=f.uniforms,i=d.uniforms;f!==K&&(I.useProgram(f),K=f,h=!0),d.id!==M&&(M=d.id,h=!0);if(h||a!==O)I.uniformMatrix4fv(g.projectionMatrix,!1,a._projectionMatrixArray),a!==O&&(O=a);if(h){c&&d.fog&&(i.fogColor.value=c.color,c instanceof THREE.Fog?(i.fogNear.value=c.near,i.fogFar.value=c.far):c instanceof THREE.FogExp2&&(i.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(lb){for(var j,k=0,l=0,m=0,n,o,p,q=mb,r=q.directional.colors,s=q.directional.positions,u=q.point.colors,v=q.point.positions,y=q.point.distances,z=q.spot.colors,A=q.spot.positions,B=q.spot.distances,C=q.spot.directions,D=q.spot.angles,E=q.spot.exponents,F=0,G=0,J=0,L=p=0,c=L=0,h=b.length;c<h;c++)j=b[c],j.onlyShadow||(n=j.color,o=j.intensity,p=j.distance,j instanceof THREE.AmbientLight?H.gammaInput?(k+=n.r*n.r,l+=n.g*n.g,m+=n.b*n.b):(k+=n.r,l+=n.g,m+=n.b):j instanceof THREE.DirectionalLight?(p=F*3,H.gammaInput?(r[p]=n.r*n.r*o*o,r[p+1]=n.g*n.g*o*o,r[p+2]=n.b*n.b*o*o):(r[p]=n.r*o,r[p+1]=n.g*o,r[p+2]=n.b*o),kb.copy(j.matrixWorld.getPosition()),kb.subSelf(j.target.matrixWorld.getPosition()),kb.normalize(),s[p]=kb.x,s[p+1]=kb.y,s[p+2]=kb.z,F+=1):j instanceof THREE.PointLight?(L=G*3,H.gammaInput?(u[L]=n.r*n.r*o*o,u[L+1]=n.g*n.g*o*o,u[L+2]=n.b*n.b*o*o):(u[L]=n.r*o,u[L+1]=n.g*o,u[L+2]=n.b*o),n=j.matrixWorld.getPosition(),v[L]=n.x,v[L+1]=n.y,v[L+2]=n.z,y[G]=p,G+=1):j instanceof THREE.SpotLight&&(L=J*3,H.gammaInput?(z[L]=n.r*n.r*o*o,z[L+1]=n.g*n.g*o*o,z[L+2]=n.b*n.b*o*o):(z[L]=n.r*o,z[L+1]=n.g*o,z[L+2]=n.b*o),n=j.matrixWorld.getPosition(),A[L]=n.x,A[L+1]=n.y,A[L+2]=n.z,B[J]=p,kb.copy(n),kb.subSelf(j.target.matrixWorld.getPosition()),kb.normalize(),C[L]=kb.x,C[L+1]=kb.y,C[L+2]=kb.z,D[J]=Math.cos(j.angle),E[J]=j.exponent,J+=1));c=F*3;for(h=r.length;c<h;c++)r[c]=0;c=G*3;for(h=u.length;c<h;c++)u[c]=0;c=J*3;for(h=z.length;c<h;c++)z[c]=0;q.directional.length=F,q.point.length=G,q.spot.length=J,q.ambient[0]=k,q.ambient[1]=l,q.ambient[2]=m,lb=!1}c=mb,i.ambientLightColor.value=c.ambient,i.directionalLightColor.value=c.directional.colors,i.directionalLightDirection.value=c.directional.positions,i.pointLightColor.value=c.point.colors,i.pointLightPosition.value=c.point.positions,i.pointLightDistance.value=c.point.distances,i.spotLightColor.value=c.spot.colors,i.spotLightPosition.value=c.spot.positions,i.spotLightDistance.value=c.spot.distances,i.spotLightDirection.value=c.spot.directions,i.spotLightAngle.value=c.spot.angles,i.spotLightExponent.value=c.spot.exponents}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)i.opacity.value=d.opacity,H.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color,(i.map.texture=d.map)&&i.offsetRepeat.value.set(d.map.offset.x,d.map.offset.y,d.map.repeat.x,d.map.repeat.y),i.lightMap.texture=d.lightMap,i.envMap.texture=d.envMap,i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,i.reflectivity.value=d.reflectivity,i.refractionRatio.value=d.refractionRatio,i.combine.value=d.combine,i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping;d instanceof THREE.LineBasicMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=x.height/2,i.map.texture=d.map):d instanceof THREE.MeshPhongMaterial?(i.shininess.value=d.shininess,H.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(H.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&i.shadowMatrix){h=c=0;for(j=b.length;h<j;h++)k=b[h],k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade)&&(i.shadowMap.texture[c]=k.shadowMap,i.shadowMapSize.value[c]=k.shadowMapSize,i.shadowMatrix.value[c]=k.shadowMatrix,i.shadowDarkness.value[c]=k.shadowDarkness,i.shadowBias.value[c]=k.shadowBias,c++)}b=d.uniformsList,i=0;for(c=b.length;i<c;i++)if(k=f.uniforms[b[i][1]]){h=b[i][0],l=h.type,j=h.value;switch(l){case"i":I.uniform1i(k,j);break;case"f":I.uniform1f(k,j);break;case"v2":I.uniform2f(k,j.x,j.y);break;case"v3":I.uniform3f(k,j.x,j.y,j.z);break;case"v4":I.uniform4f(k,j.x,j.y,j.z,j.w);break;case"c":I.uniform3f(k,j.r,j.g,j.b);break;case"fv1":I.uniform1fv(k,j);break;case"fv":I.uniform3fv(k,j);break;case"v2v":h._array||(h._array=new Float32Array(2*j.length)),l=0;for(m=j.length;l<m;l++)q=l*2,h._array[q]=j[l].x,h._array[q+1]=j[l].y;I.uniform2fv(k,h._array);break;case"v3v":h._array||(h._array=new Float32Array(3*j.length)),l=0;for(m=j.length;l<m;l++)q=l*3,h._array[q]=j[l].x,h._array[q+1]=j[l].y,h._array[q+2]=j[l].z;I.uniform3fv(k,h._array);break;case"v4v":h._array||(h._array=new Float32Array(4*j.length)),l=0;for(m=j.length;l<m;l++)q=l*4,h._array[q]=j[l].x,h._array[q+1]=j[l].y,h._array[q+2]=j[l].z,h._array[q+3]=j[l].w;I.uniform4fv(k,h._array);break;case"m4":h._array||(h._array=new Float32Array(16)),j.flattenToArray(h._array),I.uniformMatrix4fv(k,!1,h._array);break;case"m4v":h._array||(h._array=new Float32Array(16*j.length)),l=0;for(m=j.length;l<m;l++)j[l].flattenToArrayOffset(h._array,l*16);I.uniformMatrix4fv(k,!1,h._array);break;case"t":I.uniform1i(k,j),k=h.texture;if(!k)continue;if(k.image instanceof Array&&k.image.length===6){h=k;if(h.image.length===6)if(h.needsUpdate){h.image.__webglTextureCube||(h.image.__webglTextureCube=I.createTexture()),I.activeTexture(I.TEXTURE0+j),I.bindTexture(I.TEXTURE_CUBE_MAP,h.image.__webglTextureCube),j=[];for(k=0;k<6;k++)l=j,m=k,H.autoScaleCubemaps?(q=h.image[k],s=ob,q.width<=s&&q.height<=s||(u=Math.max(q.width,q.height),r=Math.floor(q.width*s/u),s=Math.floor(q.height*s/u),u=document.createElement("canvas"),u.width=r,u.height=s,u.getContext("2d").drawImage(q,0,0,q.width,q.height,0,0,r,s),q=u)):q=h.image[k],l[m]=q;k=j[0],l=(k.width&k.width-1)===0&&(k.height&k.height-1)===0,m=w(h.format),q=w(h.type),t(I.TEXTURE_CUBE_MAP,h,l);for(k=0;k<6;k++)I.texImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+k,0,m,m,q,j[k]);h.generateMipmaps&&l&&I.generateMipmap(I.TEXTURE_CUBE_MAP),h.needsUpdate=!1,h.onUpdate&&h.onUpdate()}else I.activeTexture(I.TEXTURE0+j),I.bindTexture(I.TEXTURE_CUBE_MAP,h.image.__webglTextureCube)}else k instanceof THREE.WebGLRenderTargetCube?(h=k,I.activeTexture(I.TEXTURE0+j),I.bindTexture(I.TEXTURE_CUBE_MAP,h.__webglTexture)):H.setTexture(k,j);break;case"tv":if(!h._array){h._array=[],l=0;for(m=h.texture.length;l<m;l++)h._array[l]=j+l}I.uniform1iv(k,h._array),l=0;for(m=h.texture.length;l<m;l++)(k=h.texture[l])&&H.setTexture(k,h._array[l])}}(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&g.cameraPosition!==null&&(b=a.matrixWorld.getPosition(),I.uniform3f(g.cameraPosition,b.x,b.y,b.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&g.viewMatrix!==null&&I.uniformMatrix4fv(g.viewMatrix,!1,a._viewMatrixArray),d.skinning&&I.uniformMatrix4fv(g.boneGlobalMatrices,!1,e.boneMatrices)}return I.uniformMatrix4fv(g.modelViewMatrix,!1,e._modelViewMatrix.elements),g.normalMatrix&&I.uniformMatrix3fv(g.normalMatrix,!1,e._normalMatrix.elements),g.objectMatrix!==null&&I.uniformMatrix4fv(g.objectMatrix,!1,e.matrixWorld.elements),f}function q(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getInverse(a._modelViewMatrix),a._normalMatrix.transpose()}function r(a,b,c){Y!==a&&(a?I.enable(I.POLYGON_OFFSET_FILL):I.disable(I.POLYGON_OFFSET_FILL),Y=a),a&&(Z!==b||$!==c)&&(I.polygonOffset(b,c),Z=b,$=c)}function s(a,b){var c;return a==="fragment"?c=I.createShader(I.FRAGMENT_SHADER):a==="vertex"&&(c=I.createShader(I.VERTEX_SHADER)),I.shaderSource(c,b),I.compileShader(c),I.getShaderParameter(c,I.COMPILE_STATUS)?c:(console.error(I.getShaderInfoLog(c)),console.error(b),null)}function t(a,b,c){c?(I.texParameteri(a,I.TEXTURE_WRAP_S,w(b.wrapS)),I.texParameteri(a,I.TEXTURE_WRAP_T,w(b.wrapT)),I.texParameteri(a,I.TEXTURE_MAG_FILTER,w(b.magFilter)),I.texParameteri(a,I.TEXTURE_MIN_FILTER,w(b.minFilter))):(I.texParameteri(a,I.TEXTURE_WRAP_S,I.CLAMP_TO_EDGE),I.texParameteri(a,I.TEXTURE_WRAP_T,I.CLAMP_TO_EDGE),I.texParameteri(a,I.TEXTURE_MAG_FILTER,v(b.magFilter)),I.texParameteri(a,I.TEXTURE_MIN_FILTER,v(b.minFilter)))}function u(a,b){I.bindRenderbuffer(I.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(I.renderbufferStorage(I.RENDERBUFFER,I.DEPTH_COMPONENT16,b.width,b.height),I.framebufferRenderbuffer(I.FRAMEBUFFER,I.DEPTH_ATTACHMENT,I.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(I.renderbufferStorage(I.RENDERBUFFER,I.DEPTH_STENCIL,b.width,b.height),I.framebufferRenderbuffer(I.FRAMEBUFFER,I.DEPTH_STENCIL_ATTACHMENT,I.RENDERBUFFER,a)):I.renderbufferStorage(I.RENDERBUFFER,I.RGBA4,b.width,b.height)}function v(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return I.NEAREST;default:return I.LINEAR}}function w(a){switch(a){case THREE.RepeatWrapping:return I.REPEAT;case THREE.ClampToEdgeWrapping:return I.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return I.MIRRORED_REPEAT;case THREE.NearestFilter:return I.NEAREST;case THREE.NearestMipMapNearestFilter:return I.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return I.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return I.LINEAR;case THREE.LinearMipMapNearestFilter:return I.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return I.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return I.BYTE;case THREE.UnsignedByteType:return I.UNSIGNED_BYTE;case THREE.ShortType:return I.SHORT;case THREE.UnsignedShortType:return I.UNSIGNED_SHORT;case THREE.IntType:return I.INT;case THREE.UnsignedIntType:return I.UNSIGNED_INT;case THREE.FloatType:return I.FLOAT;case THREE.AlphaFormat:return I.ALPHA;case THREE.RGBFormat:return I.RGB;case THREE.RGBAFormat:return I.RGBA;case THREE.LuminanceFormat:return I.LUMINANCE;case THREE.LuminanceAlphaFormat:return I.LUMINANCE_ALPHA;case THREE.AddEquation:return I.FUNC_ADD;case THREE.SubtractEquation:return I.FUNC_SUBTRACT;case THREE.ReverseSubtractEquation:return I.FUNC_REVERSE_SUBTRACT;case THREE.ZeroFactor:return I.ZERO;case THREE.OneFactor:return I.ONE;case THREE.SrcColorFactor:return I.SRC_COLOR;case THREE.OneMinusSrcColorFactor:return I.ONE_MINUS_SRC_COLOR;case THREE.SrcAlphaFactor:return I.SRC_ALPHA;case THREE.OneMinusSrcAlphaFactor:return I.ONE_MINUS_SRC_ALPHA;case THREE.DstAlphaFactor:return I.DST_ALPHA;case THREE.OneMinusDstAlphaFactor:return I.ONE_MINUS_DST_ALPHA;case THREE.DstColorFactor:return I.DST_COLOR;case THREE.OneMinusDstColorFactor:return I.ONE_MINUS_DST_COLOR;case THREE.SrcAlphaSaturateFactor:return I.SRC_ALPHA_SATURATE}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},x=a.canvas!==void 0?a.canvas:document.createElement("canvas"),y=a.precision!==void 0?a.precision:"highp",z=a.alpha!==void 0?a.alpha:!0,A=a.premultipliedAlpha!==void 0?a.premultipliedAlpha:!0,B=a.antialias!==void 0?a.antialias:!1,C=a.stencil!==void 0?a.stencil:!0,D=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,E=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),F=a.clearAlpha!==void 0?a.clearAlpha:0,G=a.maxLights!==void 0?a.maxLights:4;this.domElement=x,this.context=null,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var H=this,I,J=[],K=null,L=null,M=-1,N=null,O=null,P=0,Q=-1,R=-1,S=-1,T=-1,U=-1,V=-1,W=-1,X=-1,Y=null,Z=null,$=null,_=null,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=new THREE.Frustum,hb=new THREE.Matrix4,ib=new THREE.Matrix4,jb=new THREE.Vector4,kb=new THREE.Vector3,lb=!0,mb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]}};I=function(){var a;try{if(!(a=x.getContext("experimental-webgl",{alpha:z,premultipliedAlpha:A,antialias:B,stencil:C,preserveDrawingBuffer:D})))throw"Error creating WebGL context."}catch(b){console.error(b)}return a.getExtension("OES_texture_float")||console.log("THREE.WebGLRenderer: Float textures not supported."),a}(),I.clearColor(0,0,0,1),I.clearDepth(1),I.clearStencil(0),I.enable(I.DEPTH_TEST),I.depthFunc(I.LEQUAL),I.frontFace(I.CCW),I.cullFace(I.BACK),I.enable(I.CULL_FACE),I.enable(I.BLEND),I.blendEquation(I.FUNC_ADD),I.blendFunc(I.SRC_ALPHA,I.ONE_MINUS_SRC_ALPHA),I.clearColor(E.r,E.g,E.b,F),this.context=I;var nb=I.getParameter(I.MAX_VERTEX_TEXTURE_IMAGE_UNITS);I.getParameter(I.MAX_TEXTURE_SIZE);var ob=I.getParameter(I.MAX_CUBE_MAP_TEXTURE_SIZE);this.getContext=function(){return I},this.supportsVertexTextures=function(){return nb>0},this.setSize=function(a,b){x.width=a,x.height=b,this.setViewport(0,0,x.width,x.height)},this.setViewport=function(a,b,c,d){ab=a,bb=b,cb=c,db=d,I.viewport(ab,bb,cb,db)},this.setScissor=function(a,b,c,d){I.scissor(a,b,c,d)},this.enableScissorTest=function(a){a?I.enable(I.SCISSOR_TEST):I.disable(I.SCISSOR_TEST)},this.setClearColorHex=function(a,b){E.setHex(a),F=b,I.clearColor(E.r,E.g,E.b,F)},this.setClearColor=function(a,b){E.copy(a),F=b,I.clearColor(E.r,E.g,E.b,F)},this.getClearColor=function(){return E},this.getClearAlpha=function(){return F},this.clear=function(a,b,c){var d=0;if(a===void 0||a)d|=I.COLOR_BUFFER_BIT;if(b===void 0||b)d|=I.DEPTH_BUFFER_BIT;if(c===void 0||c)d|=I.STENCIL_BUFFER_BIT;I.clear(d)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.addPostPlugin=function(a){a.init(this),this.renderPluginsPost.push(a)},this.addPrePlugin=function(a){a.init(this),this.renderPluginsPre.push(a)},this.deallocateObject=function(a){if(a.__webglInit){a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray;if(a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];I.deleteBuffer(c.__webglVertexBuffer),I.deleteBuffer(c.__webglNormalBuffer),I.deleteBuffer(c.__webglTangentBuffer),I.deleteBuffer(c.__webglColorBuffer),I.deleteBuffer(c.__webglUVBuffer),I.deleteBuffer(c.__webglUV2Buffer),I.deleteBuffer(c.__webglSkinVertexABuffer),I.deleteBuffer(c.__webglSkinVertexBBuffer),I.deleteBuffer(c.__webglSkinIndicesBuffer),I.deleteBuffer(c.__webglSkinWeightsBuffer),I.deleteBuffer(c.__webglFaceBuffer),I.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=0;for(e=c.numMorphTargets;d<e;d++)I.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)I.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList){d=void 0;for(d in c.__webglCustomAttributesList)I.deleteBuffer(c.__webglCustomAttributesList[d].buffer)}H.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,I.deleteBuffer(a.__webglVertexBuffer),I.deleteBuffer(a.__webglColorBuffer),H.info.memory.geometries--):a instanceof THREE.Line?(a=a.geometry,I.deleteBuffer(a.__webglVertexBuffer),I.deleteBuffer(a.__webglColorBuffer),H.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,I.deleteBuffer(a.__webglVertexBuffer),I.deleteBuffer(a.__webglColorBuffer),H.info.memory.geometries--)}},this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,I.deleteTexture(a.__webglTexture),H.info.memory.textures--)},this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture){I.deleteTexture(a.__webglTexture);if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;b<6;b++)I.deleteFramebuffer(a.__webglFramebuffer[b]),I.deleteRenderbuffer(a.__webglRenderbuffer[b]);else I.deleteFramebuffer(a.__webglFramebuffer),I.deleteRenderbuffer(a.__webglRenderbuffer)}},this.updateShadowMap=function(a,b){K=null,M=N=X=W=S=-1,lb=!0,R=Q=-1,this.shadowMapPlugin.update(a,b)},this.renderBufferImmediate=function(a,b,c){a.__webglVertexBuffer||(a.__webglVertexBuffer=I.createBuffer()),a.__webglNormalBuffer||(a.__webglNormalBuffer=I.createBuffer()),a.hasPos&&(I.bindBuffer(I.ARRAY_BUFFER,a.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,a.positionArray,I.DYNAMIC_DRAW),I.enableVertexAttribArray(b.attributes.position),I.vertexAttribPointer(b.attributes.position,3,I.FLOAT,!1,0,0));if(a.hasNormal){I.bindBuffer(I.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var d,e,f,g,h,i,j,k,l,m,n=a.count*3;for(m=0;m<n;m+=9)c=a.normalArray,d=c[m],e=c[m+1],f=c[m+2],g=c[m+3],i=c[m+4],k=c[m+5],h=c[m+6],j=c[m+7],l=c[m+8],d=(d+g+h)/3,e=(e+i+j)/3,f=(f+k+l)/3,c[m]=d,c[m+1]=e,c[m+2]=f,c[m+3]=d,c[m+4]=e,c[m+5]=f,c[m+6]=d,c[m+7]=e,c[m+8]=f}I.bufferData(I.ARRAY_BUFFER,a.normalArray,I.DYNAMIC_DRAW),I.enableVertexAttribArray(b.attributes.normal),I.vertexAttribPointer(b.attributes.normal,3,I.FLOAT,!1,0,0)}I.drawArrays(I.TRIANGLES,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible!==!1){c=p(a,b,c,d,f),a=c.attributes,b=!1,d=e.id*16777215+c.id*2+(d.wireframe?1:0),d!==N&&(N=d,b=!0);if(f instanceof THREE.Mesh){f=e.offsets,d=0;for(c=f.length;d<c;++d)b&&(I.bindBuffer(I.ARRAY_BUFFER,e.vertexPositionBuffer),I.vertexAttribPointer(a.position,e.vertexPositionBuffer.itemSize,I.FLOAT,!1,0,f[d].index*12),a.normal>=0&&e.vertexNormalBuffer&&(I.bindBuffer(I.ARRAY_BUFFER,e.vertexNormalBuffer),I.vertexAttribPointer(a.normal,e.vertexNormalBuffer.itemSize,I.FLOAT,!1,0,f[d].index*12)),a.uv>=0&&e.vertexUvBuffer&&(e.vertexUvBuffer?(I.bindBuffer(I.ARRAY_BUFFER,e.vertexUvBuffer),I.vertexAttribPointer(a.uv,e.vertexUvBuffer.itemSize,I.FLOAT,!1,0,f[d].index*8),I.enableVertexAttribArray(a.uv)):I.disableVertexAttribArray(a.uv)),a.color>=0&&e.vertexColorBuffer&&(I.bindBuffer(I.ARRAY_BUFFER,e.vertexColorBuffer),I.vertexAttribPointer(a.color,e.vertexColorBuffer.itemSize,I.FLOAT,!1,0,f[d].index*16)),I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,e.vertexIndexBuffer)),I.drawElements(I.TRIANGLES,f[d].count,I.UNSIGNED_SHORT,f[d].start*2),H.info.render.calls++,H.info.render.vertices=H.info.render.vertices+f[d].count,H.info.render.faces=H.info.render.faces+f[d].count/3}}},this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==!1){var g,h,c=p(a,b,c,d,f),b=c.attributes,a=!1,c=e.id*16777215+c.id*2+(d.wireframe?1:0);c!==N&&(N=c,a=!0);if(!d.morphTargets&&b.position>=0)a&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglVertexBuffer),I.vertexAttribPointer(b.position,3,I.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes,f.morphTargetBase!==-1?(I.bindBuffer(I.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),I.vertexAttribPointer(c.position,3,I.FLOAT,!1,0,0)):c.position>=0&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglVertexBuffer),I.vertexAttribPointer(c.position,3,I.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){g=0;var i=f.morphTargetForcedOrder;for(h=f.morphTargetInfluences;g<d.numSupportedMorphTargets&&g<i.length;)I.bindBuffer(I.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[i[g]]),I.vertexAttribPointer(c["morphTarget"+g],3,I.FLOAT,!1,0,0),d.morphNormals&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[i[g]]),I.vertexAttribPointer(c["morphNormal"+g],3,I.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[g]=h[i[g]],g++}else{var i=[],j=-1,k=0;h=f.morphTargetInfluences;var l,m=h.length;g=0;for(f.morphTargetBase!==-1&&(i[f.morphTargetBase]=!0);g<d.numSupportedMorphTargets;){for(l=0;l<m;l++)!i[l]&&h[l]>j&&(k=l,j=h[k]);I.bindBuffer(I.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k]),I.vertexAttribPointer(c["morphTarget"+g],3,I.FLOAT,!1,0,0),d.morphNormals&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[k]),I.vertexAttribPointer(c["morphNormal"+g],3,I.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[g]=j,i[k]=1,j=-1,g++}}d.program.uniforms.morphTargetInfluences!==null&&I.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=e.__webglCustomAttributesList[g],b[c.buffer.belongsToAttribute]>=0&&(I.bindBuffer(I.ARRAY_BUFFER,c.buffer),I.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,I.FLOAT,!1,0,0))}b.color>=0&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglColorBuffer),I.vertexAttribPointer(b.color,3,I.FLOAT,!1,0,0)),b.normal>=0&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglNormalBuffer),I.vertexAttribPointer(b.normal,3,I.FLOAT,!1,0,0)),b.tangent>=0&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglTangentBuffer),I.vertexAttribPointer(b.tangent,4,I.FLOAT,!1,0,0)),b.uv>=0&&(e.__webglUVBuffer?(I.bindBuffer(I.ARRAY_BUFFER,e.__webglUVBuffer),I.vertexAttribPointer(b.uv,2,I.FLOAT,!1,0,0),I.enableVertexAttribArray(b.uv)):I.disableVertexAttribArray(b.uv)),b.uv2>=0&&(e.__webglUV2Buffer?(I.bindBuffer(I.ARRAY_BUFFER,e.__webglUV2Buffer),I.vertexAttribPointer(b.uv2,2,I.FLOAT,!1,0,0),I.enableVertexAttribArray(b.uv2)):I.disableVertexAttribArray(b.uv2)),d.skinning&&b.skinVertexA>=0&&b.skinVertexB>=0&&b.skinIndex>=0&&b.skinWeight>=0&&(I.bindBuffer(I.ARRAY_BUFFER,e.__webglSkinVertexABuffer),I.vertexAttribPointer(b.skinVertexA,4,I.FLOAT,!1,0,0),I.bindBuffer(I.ARRAY_BUFFER,e.__webglSkinVertexBBuffer),I.vertexAttribPointer(b.skinVertexB,4,I.FLOAT,!1,0,0),I.bindBuffer(I.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),I.vertexAttribPointer(b.skinIndex,4,I.FLOAT,!1,0,0),I.bindBuffer(I.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),I.vertexAttribPointer(b.skinWeight,4,I.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==_&&(I.lineWidth(d),_=d),a&&I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),I.drawElements(I.LINES,e.__webglLineCount,I.UNSIGNED_SHORT,0)):(a&&I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),I.drawElements(I.TRIANGLES,e.__webglFaceCount,I.UNSIGNED_SHORT,0)),H.info.render.calls++,H.info.render.vertices=H.info.render.vertices+e.__webglFaceCount,H.info.render.faces=H.info.render.faces+e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?I.LINE_STRIP:I.LINES,d=d.linewidth,d!==_&&(I.lineWidth(d),_=d),I.drawArrays(f,0,e.__webglLineCount),H.info.render.calls++):f instanceof THREE.ParticleSystem?(I.drawArrays(I.POINTS,0,e.__webglParticleCount),H.info.render.calls++,H.info.render.points=H.info.render.points+e.__webglParticleCount):f instanceof THREE.Ribbon&&(I.drawArrays(I.TRIANGLE_STRIP,0,e.__webglVertexCount),H.info.render.calls++)}},this.render=function(a,b,c,d){var e,f,k,l,m=a.__lights,n=a.fog;M=-1,lb=!0,b.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b)),this.autoUpdateScene&&a.updateMatrixWorld(),b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16)),b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16)),b.matrixWorldInverse.getInverse(b.matrixWorld),b.matrixWorldInverse.flattenToArray(b._viewMatrixArray),b.projectionMatrix.flattenToArray(b._projectionMatrixArray),hb.multiply(b.projectionMatrix,b.matrixWorldInverse),gb.setFromMatrix(hb),this.autoUpdateObjects&&this.initWebGLObjects(a),h(this.renderPluginsPre,a,b),H.info.render.calls=0,H.info.render.vertices=0,H.info.render.faces=0,H.info.render.points=0,this.setRenderTarget(c),(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),l=a.__webglObjects,d=0;for(e=l.length;d<e;d++){f=l[d],k=f.object,f.render=!1;if(k.visible&&(!(k instanceof THREE.Mesh||k instanceof THREE.ParticleSystem)||!k.frustumCulled||gb.contains(k))){q(k,b);var o=f,p=o.object,s=o.buffer,t=void 0,t=t=void 0,t=p.material;t instanceof THREE.MeshFaceMaterial?(t=s.materialIndex,t>=0&&(t=p.geometry.materials[t],t.transparent?(o.transparent=t,o.opaque=null):(o.opaque=t,o.transparent=null))):t&&(t.transparent?(o.transparent=t,o.opaque=null):(o.opaque=t,o.transparent=null)),f.render=!0,this.sortObjects&&(k.renderDepth?f.z=k.renderDepth:(jb.copy(k.matrixWorld.getPosition()),hb.multiplyVector3(jb),f.z=jb.z))}}this.sortObjects&&l.sort(g),l=a.__webglObjectsImmediate,d=0;for(e=l.length;d<e;d++)f=l[d],k=f.object,k.visible&&(q(k,b),k=f.object.material,k.transparent?(f.transparent=k,f.opaque=null):(f.opaque=k,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),r(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),i(a.__webglObjects,!1,"",b,m,n,!0,d),j(a.__webglObjectsImmediate,"",b,m,n,!1,d)):(this.setBlending(THREE.NormalBlending),i(a.__webglObjects,!0,"opaque",b,m,n,!1),j(a.__webglObjectsImmediate,"opaque",b,m,n,!1),i(a.__webglObjects,!1,"transparent",b,m,n,!0),j(a.__webglObjectsImmediate,"transparent",b,m,n,!0)),h(this.renderPluginsPost,a,b),c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(I.bindTexture(I.TEXTURE_CUBE_MAP,c.__webglTexture),I.generateMipmap(I.TEXTURE_CUBE_MAP),I.bindTexture(I.TEXTURE_CUBE_MAP,null)):(I.bindTexture(I.TEXTURE_2D,c.__webglTexture),I.generateMipmap(I.TEXTURE_2D),I.bindTexture(I.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(a,b,c,d,e){var f=p(a,b,c,d,e);N=-1,H.setObjectFaces(e),e.immediateRenderCallback?e.immediateRenderCallback(f,I,gb):e.render(function(a){H.renderBufferImmediate(a,f,d.shading)})},this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var g=a.__objectsAdded[0],h=a,i=void 0,j=void 0,p=void 0;if(!g.__webglInit){g.__webglInit=!0,g._modelViewMatrix=new THREE.Matrix4,g._normalMatrix=new THREE.Matrix3;if(g instanceof THREE.Mesh){j=g.geometry;if(j instanceof THREE.Geometry){if(j.geometryGroups===void 0){var q=j,r=void 0,s=void 0,t=void 0,u=void 0,v=void 0,w=void 0,x=void 0,y={},z=q.morphTargets.length,A=q.morphNormals.length;q.geometryGroups={},r=0;for(s=q.faces.length;r<s;r++)t=q.faces[r],u=t.materialIndex,w=u!==void 0?u:-1,y[w]===void 0&&(y[w]={hash:w,counter:0}),x=y[w].hash+"_"+y[w].counter,q.geometryGroups[x]===void 0&&(q.geometryGroups[x]={faces3:[],faces4:[],materialIndex:u,vertices:0,numMorphTargets:z,numMorphNormals:A}),v=t instanceof THREE.Face3?3:4,q.geometryGroups[x].vertices+v>65535&&(y[w].counter=y[w].counter+1,x=y[w].hash+"_"+y[w].counter,q.geometryGroups[x]===void 0&&(q.geometryGroups[x]={faces3:[],faces4:[],materialIndex:u,vertices:0,numMorphTargets:z,numMorphNormals:A})),t instanceof THREE.Face3?q.geometryGroups[x].faces3.push(r):q.geometryGroups[x].faces4.push(r),q.geometryGroups[x].vertices=q.geometryGroups[x].vertices+v;q.geometryGroupsList=[];var B=void 0;for(B in q.geometryGroups)q.geometryGroups[B].id=P++,q.geometryGroupsList.push(q.geometryGroups[B])}for(i in j.geometryGroups){p=j.geometryGroups[i];if(!p.__webglVertexBuffer){var C=p;C.__webglVertexBuffer=I.createBuffer(),C.__webglNormalBuffer=I.createBuffer(),C.__webglTangentBuffer=I.createBuffer(),C.__webglColorBuffer=I.createBuffer(),C.__webglUVBuffer=I.createBuffer(),C.__webglUV2Buffer=I.createBuffer(),C.__webglSkinVertexABuffer=I.createBuffer(),C.__webglSkinVertexBBuffer=I.createBuffer(),C.__webglSkinIndicesBuffer=I.createBuffer(),C.__webglSkinWeightsBuffer=I.createBuffer(),C.__webglFaceBuffer=I.createBuffer(),C.__webglLineBuffer=I.createBuffer();var D=void 0,E=void 0;if(C.numMorphTargets){C.__webglMorphTargetsBuffers=[],D=0;for(E=C.numMorphTargets;D<E;D++)C.__webglMorphTargetsBuffers.push(I.createBuffer())}if(C.numMorphNormals){C.__webglMorphNormalsBuffers=[],D=0;for(E=C.numMorphNormals;D<E;D++)C.__webglMorphNormalsBuffers.push(I.createBuffer())}H.info.memory.geometries++;var F=p,G=g,J=G.geometry,K=F.faces3,L=F.faces4,M=K.length*3+L.length*4,N=K.length*1+L.length*2,O=K.length*3+L.length*4,Q=c(G,F),R=e(Q),S=d(Q),T=Q.vertexColors?Q.vertexColors:!1;F.__vertexArray=new Float32Array(M*3),S&&(F.__normalArray=new Float32Array(M*3)),J.hasTangents&&(F.__tangentArray=new Float32Array(M*4)),T&&(F.__colorArray=new Float32Array(M*3));if(R){if(J.faceUvs.length>0||J.faceVertexUvs.length>0)F.__uvArray=new Float32Array(M*2);if(J.faceUvs.length>1||J.faceVertexUvs.length>1)F.__uv2Array=new Float32Array(M*2)}G.geometry.skinWeights.length&&G.geometry.skinIndices.length&&(F.__skinVertexAArray=new Float32Array(M*4),F.__skinVertexBArray=new Float32Array(M*4),F.__skinIndexArray=new Float32Array(M*4),F.__skinWeightArray=new Float32Array(M*4)),F.__faceArray=new Uint16Array(N*3),F.__lineArray=new Uint16Array(O*2);var U=void 0,V=void 0;if(F.numMorphTargets){F.__morphTargetsArrays=[],U=0;for(V=F.numMorphTargets;U<V;U++)F.__morphTargetsArrays.push(new Float32Array(M*3))}if(F.numMorphNormals){F.__morphNormalsArrays=[],U=0;for(V=F.numMorphNormals;U<V;U++)F.__morphNormalsArrays.push(new Float32Array(M*3))}F.__webglFaceCount=N*3,F.__webglLineCount=O*2;if(Q.attributes){F.__webglCustomAttributesList===void 0&&(F.__webglCustomAttributesList=[]);var W=void 0;for(W in Q.attributes){var X=Q.attributes[W],Y={},Z;for(Z in X)Y[Z]=X[Z];if(!Y.__webglInitialized||Y.createUniqueBuffers){Y.__webglInitialized=!0;var $=1;Y.type==="v2"?$=2:Y.type==="v3"?$=3:Y.type==="v4"?$=4:Y.type==="c"&&($=3),Y.size=$,Y.array=new Float32Array(M*$),Y.buffer=I.createBuffer(),Y.buffer.belongsToAttribute=W,X.needsUpdate=!0,Y.__original=X}F.__webglCustomAttributesList.push(Y)}}F.__inittedArrays=!0,j.verticesNeedUpdate=!0,j.morphTargetsNeedUpdate=!0,j.elementsNeedUpdate=!0,j.uvsNeedUpdate=!0,j.normalsNeedUpdate=!0,j.tangetsNeedUpdate=!0,j.colorsNeedUpdate=!0}}}}else if(g instanceof THREE.Ribbon){j=g.geometry;if(!j.__webglVertexBuffer){var _=j;_.__webglVertexBuffer=I.createBuffer(),_.__webglColorBuffer=I.createBuffer(),H.info.memory.geometries++;var ab=j,bb=ab.vertices.length;ab.__vertexArray=new Float32Array(bb*3),ab.__colorArray=new Float32Array(bb*3),ab.__webglVertexCount=bb,j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0}}else if(g instanceof THREE.Line){j=g.geometry;if(!j.__webglVertexBuffer){var cb=j;cb.__webglVertexBuffer=I.createBuffer(),cb.__webglColorBuffer=I.createBuffer(),H.info.memory.geometries++;var db=j,eb=g,fb=db.vertices.length;db.__vertexArray=new Float32Array(fb*3),db.__colorArray=new Float32Array(fb*3),db.__webglLineCount=fb,b(db,eb),j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0}}else if(g instanceof THREE.ParticleSystem){j=g.geometry;if(!j.__webglVertexBuffer){var gb=j;gb.__webglVertexBuffer=I.createBuffer(),gb.__webglColorBuffer=I.createBuffer(),H.info.geometries++;var hb=j,ib=g,jb=hb.vertices.length;hb.__vertexArray=new Float32Array(jb*3),hb.__colorArray=new Float32Array(jb*3),hb.__sortArray=[],hb.__webglParticleCount=jb,b(hb,ib),j.verticesNeedUpdate=!0,j.colorsNeedUpdate=!0}}}if(!g.__webglActive){if(g instanceof THREE.Mesh){j=g.geometry;if(j instanceof THREE.BufferGeometry)k(h.__webglObjects,j,g);else for(i in j.geometryGroups)p=j.geometryGroups[i],k(h.__webglObjects,p,g)}else g instanceof THREE.Ribbon||g instanceof THREE.Line||g instanceof THREE.ParticleSystem?(j=g.geometry,k(h.__webglObjects,j,g)):g instanceof THREE.ImmediateRenderObject||g.immediateRenderCallback?h.__webglObjectsImmediate.push({object:g,opaque:null,transparent:null}):g instanceof THREE.Sprite?h.__webglSprites.push(g):g instanceof THREE.LensFlare&&h.__webglFlares.push(g);g.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var kb=a.__objectsRemoved[0],lb=a;kb instanceof THREE.Mesh||kb instanceof THREE.ParticleSystem||kb instanceof THREE.Ribbon||kb instanceof THREE.Line?n(lb.__webglObjects,kb):kb instanceof THREE.Sprite?o(lb.__webglSprites,kb):kb instanceof THREE.LensFlare?o(lb.__webglFlares,kb):(kb instanceof THREE.ImmediateRenderObject||kb.immediateRenderCallback)&&n(lb.__webglObjectsImmediate,kb),kb.__webglActive=!1,a.__objectsRemoved.splice(0,1)}for(var mb=0,nb=a.__webglObjects.length;mb<nb;mb++){var ob=a.__webglObjects[mb].object,pb=ob.geometry,qb=void 0,rb=void 0,sb=void 0;if(ob instanceof THREE.Mesh)if(pb instanceof THREE.BufferGeometry)pb.verticesNeedUpdate=!1,pb.elementsNeedUpdate=!1,pb.uvsNeedUpdate=!1,pb.normalsNeedUpdate=!1,pb.colorsNeedUpdate=!1;else{for(var tb=0,ub=pb.geometryGroupsList.length;tb<ub;tb++){qb=pb.geometryGroupsList[tb],sb=c(ob,qb),rb=sb.attributes&&l(sb);if(pb.verticesNeedUpdate||pb.morphTargetsNeedUpdate||pb.elementsNeedUpdate||pb.uvsNeedUpdate||pb.normalsNeedUpdate||pb.colorsNeedUpdate||pb.tangetsNeedUpdate||rb){var vb=qb,wb=ob,xb=I.DYNAMIC_DRAW,yb=!pb.dynamic,zb=sb;if(vb.__inittedArrays){var Ab=d(zb),Bb=zb.vertexColors?zb.vertexColors:!1,Cb=e(zb),Db=Ab===THREE.SmoothShading,Eb=void 0,Fb=void 0,Gb=void 0,Hb=void 0,Ib=void 0,Jb=void 0,Kb=void 0,Lb=void 0,Mb=void 0,Nb=void 0,Ob=void 0,Pb=void 0,Qb=void 0,Rb=void 0,Sb=void 0,Tb=void 0,Ub=void 0,Vb=void 0,Wb=void 0,Xb=void 0,Yb=void 0,Zb=void 0,$b=void 0,_b=void 0,ac=void 0,bc=void 0,cc=void 0,dc=void 0,ec=void 0,fc=void 0,gc=void 0,hc=void 0,ic=void 0,jc=void 0,kc=void 0,lc=void 0,mc=void 0,nc=void 0,oc=void 0,pc=void 0,qc=void 0,rc=void 0,sc=void 0,tc=void 0,uc=void 0,vc=void 0,wc=void 0,xc=void 0,yc=void 0,zc=void 0,Ac=void 0,Bc=void 0,Cc=void 0,Dc=void 0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=void 0,Rc=vb.__vertexArray,Sc=vb.__uvArray,Tc=vb.__uv2Array,Uc=vb.__normalArray,Vc=vb.__tangentArray,Wc=vb.__colorArray,Xc=vb.__skinVertexAArray,Yc=vb.__skinVertexBArray,Zc=vb.__skinIndexArray,$c=vb.__skinWeightArray,_c=vb.__morphTargetsArrays,ad=vb.__morphNormalsArrays,bd=vb.__webglCustomAttributesList,cd=void 0,dd=vb.__faceArray,ed=vb.__lineArray,fd=wb.geometry,gd=fd.elementsNeedUpdate,hd=fd.uvsNeedUpdate,id=fd.normalsNeedUpdate,jd=fd.tangetsNeedUpdate,kd=fd.colorsNeedUpdate,ld=fd.morphTargetsNeedUpdate,md=fd.vertices,nd=vb.faces3,od=vb.faces4,pd=fd.faces,qd=fd.faceVertexUvs[0],rd=fd.faceVertexUvs[1],sd=fd.skinVerticesA,td=fd.skinVerticesB,ud=fd.skinIndices,vd=fd.skinWeights,wd=fd.morphTargets,xd=fd.morphNormals;if(fd.verticesNeedUpdate){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],Pb=md[Hb.a],Qb=md[Hb.b],Rb=md[Hb.c],Rc[Fc]=Pb.x,Rc[Fc+1]=Pb.y,Rc[Fc+2]=Pb.z,Rc[Fc+3]=Qb.x,Rc[Fc+4]=Qb.y,Rc[Fc+5]=Qb.z,Rc[Fc+6]=Rb.x,Rc[Fc+7]=Rb.y,Rc[Fc+8]=Rb.z,Fc+=9;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],Pb=md[Hb.a],Qb=md[Hb.b],Rb=md[Hb.c],Sb=md[Hb.d],Rc[Fc]=Pb.x,Rc[Fc+1]=Pb.y,Rc[Fc+2]=Pb.z,Rc[Fc+3]=Qb.x,Rc[Fc+4]=Qb.y,Rc[Fc+5]=Qb.z,Rc[Fc+6]=Rb.x,Rc[Fc+7]=Rb.y,Rc[Fc+8]=Rb.z,Rc[Fc+9]=Sb.x,Rc[Fc+10]=Sb.y,Rc[Fc+11]=Sb.z,Fc+=12;I.bindBuffer(I.ARRAY_BUFFER,vb.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,Rc,xb)}if(ld){yc=0;for(zc=wd.length;yc<zc;yc++){Eb=Oc=0;for(Fb=nd.length;Eb<Fb;Eb++)Cc=nd[Eb],Hb=pd[Cc],Pb=wd[yc].vertices[Hb.a],Qb=wd[yc].vertices[Hb.b],Rb=wd[yc].vertices[Hb.c],Ac=_c[yc],Ac[Oc]=Pb.x,Ac[Oc+1]=Pb.y,Ac[Oc+2]=Pb.z,Ac[Oc+3]=Qb.x,Ac[Oc+4]=Qb.y,Ac[Oc+5]=Qb.z,Ac[Oc+6]=Rb.x,Ac[Oc+7]=Rb.y,Ac[Oc+8]=Rb.z,zb.morphNormals&&(Db?(Dc=xd[yc].vertexNormals[Cc],Xb=Dc.a,Yb=Dc.b,Zb=Dc.c):Zb=Yb=Xb=xd[yc].faceNormals[Cc],Bc=ad[yc],Bc[Oc]=Xb.x,Bc[Oc+1]=Xb.y,Bc[Oc+2]=Xb.z,Bc[Oc+3]=Yb.x,Bc[Oc+4]=Yb.y,Bc[Oc+5]=Yb.z,Bc[Oc+6]=Zb.x,Bc[Oc+7]=Zb.y,Bc[Oc+8]=Zb.z),Oc+=9;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Cc=od[Eb],Hb=pd[Cc],Pb=wd[yc].vertices[Hb.a],Qb=wd[yc].vertices[Hb.b],Rb=wd[yc].vertices[Hb.c],Sb=wd[yc].vertices[Hb.d],Ac=_c[yc],Ac[Oc]=Pb.x,Ac[Oc+1]=Pb.y,Ac[Oc+2]=Pb.z,Ac[Oc+3]=Qb.x,Ac[Oc+4]=Qb.y,Ac[Oc+5]=Qb.z,Ac[Oc+6]=Rb.x,Ac[Oc+7]=Rb.y,Ac[Oc+8]=Rb.z,Ac[Oc+9]=Sb.x,Ac[Oc+10]=Sb.y,Ac[Oc+11]=Sb.z,zb.morphNormals&&(Db?(Dc=xd[yc].vertexNormals[Cc],Xb=Dc.a,Yb=Dc.b,Zb=Dc.c,$b=Dc.d):$b=Zb=Yb=Xb=xd[yc].faceNormals[Cc],Bc=ad[yc],Bc[Oc]=Xb.x,Bc[Oc+1]=Xb.y,Bc[Oc+2]=Xb.z,Bc[Oc+3]=Yb.x,Bc[Oc+4]=Yb.y,Bc[Oc+5]=Yb.z,Bc[Oc+6]=Zb.x,Bc[Oc+7]=Zb.y,Bc[Oc+8]=Zb.z,Bc[Oc+9]=$b.x,Bc[Oc+10]=$b.y,Bc[Oc+11]=$b.z),Oc+=12;I.bindBuffer(I.ARRAY_BUFFER,vb.__webglMorphTargetsBuffers[yc]),I.bufferData(I.ARRAY_BUFFER,_c[yc],xb),zb.morphNormals&&(I.bindBuffer(I.ARRAY_BUFFER,vb.__webglMorphNormalsBuffers[yc]),I.bufferData(I.ARRAY_BUFFER,ad[yc],xb))}}if(vd.length){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],dc=vd[Hb.a],ec=vd[Hb.b],fc=vd[Hb.c],$c[Nc]=dc.x,$c[Nc+1]=dc.y,$c[Nc+2]=dc.z,$c[Nc+3]=dc.w,$c[Nc+4]=ec.x,$c[Nc+5]=ec.y,$c[Nc+6]=ec.z,$c[Nc+7]=ec.w,$c[Nc+8]=fc.x,$c[Nc+9]=fc.y,$c[Nc+10]=fc.z,$c[Nc+11]=fc.w,hc=ud[Hb.a],ic=ud[Hb.b],jc=ud[Hb.c],Zc[Nc]=hc.x,Zc[Nc+1]=hc.y,Zc[Nc+2]=hc.z,Zc[Nc+3]=hc.w,Zc[Nc+4]=ic.x,Zc[Nc+5]=ic.y,Zc[Nc+6]=ic.z,Zc[Nc+7]=ic.w,Zc[Nc+8]=jc.x,Zc[Nc+9]=jc.y,Zc[Nc+10]=jc.z,Zc[Nc+11]=jc.w,lc=sd[Hb.a],mc=sd[Hb.b],nc=sd[Hb.c],Xc[Nc]=lc.x,Xc[Nc+1]=lc.y,Xc[Nc+2]=lc.z,Xc[Nc+3]=1,Xc[Nc+4]=mc.x,Xc[Nc+5]=mc.y,Xc[Nc+6]=mc.z,Xc[Nc+7]=1,Xc[Nc+8]=nc.x,Xc[Nc+9]=nc.y,Xc[Nc+10]=nc.z,Xc[Nc+11]=1,pc=td[Hb.a],qc=td[Hb.b],rc=td[Hb.c],Yc[Nc]=pc.x,Yc[Nc+1]=pc.y,Yc[Nc+2]=pc.z,Yc[Nc+3]=1,Yc[Nc+4]=qc.x,Yc[Nc+5]=qc.y,Yc[Nc+6]=qc.z,Yc[Nc+7]=1,Yc[Nc+8]=rc.x,Yc[Nc+9]=rc.y,Yc[Nc+10]=rc.z,Yc[Nc+11]=1,Nc+=12;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],dc=vd[Hb.a],ec=vd[Hb.b],fc=vd[Hb.c],gc=vd[Hb.d],$c[Nc]=dc.x,$c[Nc+1]=dc.y,$c[Nc+2]=dc.z,$c[Nc+3]=dc.w,$c[Nc+4]=ec.x,$c[Nc+5]=ec.y,$c[Nc+6]=ec.z,$c[Nc+7]=ec.w,$c[Nc+8]=fc.x,$c[Nc+9]=fc.y,$c[Nc+10]=fc.z,$c[Nc+11]=fc.w,$c[Nc+12]=gc.x,$c[Nc+13]=gc.y,$c[Nc+14]=gc.z,$c[Nc+15]=gc.w,hc=ud[Hb.a],ic=ud[Hb.b],jc=ud[Hb.c],kc=ud[Hb.d],Zc[Nc]=hc.x,Zc[Nc+1]=hc.y,Zc[Nc+2]=hc.z,Zc[Nc+3]=hc.w,Zc[Nc+4]=ic.x,Zc[Nc+5]=ic.y,Zc[Nc+6]=ic.z,Zc[Nc+7]=ic.w,Zc[Nc+8]=jc.x,Zc[Nc+9]=jc.y,Zc[Nc+10]=jc.z,Zc[Nc+11]=jc.w,Zc[Nc+12]=kc.x,Zc[Nc+13]=kc.y,Zc[Nc+14]=kc.z,Zc[Nc+15]=kc.w,lc=sd[Hb.a],mc=sd[Hb.b],nc=sd[Hb.c],oc=sd[Hb.d],Xc[Nc]=lc.x,Xc[Nc+1]=lc.y,Xc[Nc+2]=lc.z,Xc[Nc+3]=1,Xc[Nc+4]=mc.x,Xc[Nc+5]=mc.y,Xc[Nc+6]=mc.z,Xc[Nc+7]=1,Xc[Nc+8]=nc.x,Xc[Nc+9]=nc.y,Xc[Nc+10]=nc.z,Xc[Nc+11]=1,Xc[Nc+12]=oc.x,Xc[Nc+13]=oc.y,Xc[Nc+14]=oc.z,Xc[Nc+15]=1,pc=td[Hb.a],qc=td[Hb.b],rc=td[Hb.c],sc=td[Hb.d],Yc[Nc]=pc.x,Yc[Nc+1]=pc.y,Yc[Nc+2]=pc.z,Yc[Nc+3]=1,Yc[Nc+4]=qc.x,Yc[Nc+5]=qc.y,Yc[Nc+6]=qc.z,Yc[Nc+7]=1,Yc[Nc+8]=rc.x,Yc[Nc+9]=rc.y,Yc[Nc+10]=rc.z,Yc[Nc+11]=1,Yc[Nc+12]=sc.x,Yc[Nc+13]=sc.y,Yc[Nc+14]=sc.z,Yc[Nc+15]=1,Nc+=16;Nc>0&&(I.bindBuffer(I.ARRAY_BUFFER,vb.__webglSkinVertexABuffer),I.bufferData(I.ARRAY_BUFFER,Xc,xb),I.bindBuffer(I.ARRAY_BUFFER,vb.__webglSkinVertexBBuffer),I.bufferData(I.ARRAY_BUFFER,Yc,xb),I.bindBuffer(I.ARRAY_BUFFER,vb.__webglSkinIndicesBuffer),I.bufferData(I.ARRAY_BUFFER,Zc,xb),I.bindBuffer(I.ARRAY_BUFFER,vb.__webglSkinWeightsBuffer),I.bufferData(I.ARRAY_BUFFER,$c,xb))}if(kd&&Bb){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],Kb=Hb.vertexColors,Lb=Hb.color,Kb.length===3&&Bb===THREE.VertexColors?(_b=Kb[0],ac=Kb[1],bc=Kb[2]):bc=ac=_b=Lb,Wc[Mc]=_b.r,Wc[Mc+1]=_b.g,Wc[Mc+2]=_b.b,Wc[Mc+3]=ac.r,Wc[Mc+4]=ac.g,Wc[Mc+5]=ac.b,Wc[Mc+6]=bc.r,Wc[Mc+7]=bc.g,Wc[Mc+8]=bc.b,Mc+=9;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],Kb=Hb.vertexColors,Lb=Hb.color,Kb.length===4&&Bb===THREE.VertexColors?(_b=Kb[0],ac=Kb[1],bc=Kb[2],cc=Kb[3]):cc=bc=ac=_b=Lb,Wc[Mc]=_b.r,Wc[Mc+1]=_b.g,Wc[Mc+2]=_b.b,Wc[Mc+3]=ac.r,Wc[Mc+4]=ac.g,Wc[Mc+5]=ac.b,Wc[Mc+6]=bc.r,Wc[Mc+7]=bc.g,Wc[Mc+8]=bc.b,Wc[Mc+9]=cc.r,Wc[Mc+10]=cc.g,Wc[Mc+11]=cc.b,Mc+=12;Mc>0&&(I.bindBuffer(I.ARRAY_BUFFER,vb.__webglColorBuffer),I.bufferData(I.ARRAY_BUFFER,Wc,xb))}if(jd&&fd.hasTangents){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],Mb=Hb.vertexTangents,Tb=Mb[0],Ub=Mb[1],Vb=Mb[2],Vc[Kc]=Tb.x,Vc[Kc+1]=Tb.y,Vc[Kc+2]=Tb.z,Vc[Kc+3]=Tb.w,Vc[Kc+4]=Ub.x,Vc[Kc+5]=Ub.y,Vc[Kc+6]=Ub.z,Vc[Kc+7]=Ub.w,Vc[Kc+8]=Vb.x,Vc[Kc+9]=Vb.y,Vc[Kc+10]=Vb.z,Vc[Kc+11]=Vb.w,Kc+=12;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],Mb=Hb.vertexTangents,Tb=Mb[0],Ub=Mb[1],Vb=Mb[2],Wb=Mb[3],Vc[Kc]=Tb.x,Vc[Kc+1]=Tb.y,Vc[Kc+2]=Tb.z,Vc[Kc+3]=Tb.w,Vc[Kc+4]=Ub.x,Vc[Kc+5]=Ub.y,Vc[Kc+6]=Ub.z,Vc[Kc+7]=Ub.w,Vc[Kc+8]=Vb.x,Vc[Kc+9]=Vb.y,Vc[Kc+10]=Vb.z,Vc[Kc+11]=Vb.w,Vc[Kc+12]=Wb.x,Vc[Kc+13]=Wb.y,Vc[Kc+14]=Wb.z,Vc[Kc+15]=Wb.w,Kc+=16;I.bindBuffer(I.ARRAY_BUFFER,vb.__webglTangentBuffer),I.bufferData(I.ARRAY_BUFFER,Vc,xb)}if(id&&Ab){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++){Hb=pd[nd[Eb]],Ib=Hb.vertexNormals,Jb=Hb.normal;if(Ib.length===3&&Db)for(tc=0;tc<3;tc++)vc=Ib[tc],Uc[Jc]=vc.x,Uc[Jc+1]=vc.y,Uc[Jc+2]=vc.z,Jc+=3;else for(tc=0;tc<3;tc++)Uc[Jc]=Jb.x,Uc[Jc+1]=Jb.y,Uc[Jc+2]=Jb.z,Jc+=3}Eb=0;for(Fb=od.length;Eb<Fb;Eb++){Hb=pd[od[Eb]],Ib=Hb.vertexNormals,Jb=Hb.normal;if(Ib.length===4&&Db)for(tc=0;tc<4;tc++)vc=Ib[tc],Uc[Jc]=vc.x,Uc[Jc+1]=vc.y,Uc[Jc+2]=vc.z,Jc+=3;else for(tc=0;tc<4;tc++)Uc[Jc]=Jb.x,Uc[Jc+1]=Jb.y,Uc[Jc+2]=Jb.z,Jc+=3}I.bindBuffer(I.ARRAY_BUFFER,vb.__webglNormalBuffer),I.bufferData(I.ARRAY_BUFFER,Uc,xb)}if(hd&&qd&&Cb){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++){Gb=nd[Eb],Hb=pd[Gb],Nb=qd[Gb];if(Nb!==void 0)for(tc=0;tc<3;tc++)wc=Nb[tc],Sc[Gc]=wc.u,Sc[Gc+1]=wc.v,Gc+=2}Eb=0;for(Fb=od.length;Eb<Fb;Eb++){Gb=od[Eb],Hb=pd[Gb],Nb=qd[Gb];if(Nb!==void 0)for(tc=0;tc<4;tc++)wc=Nb[tc],Sc[Gc]=wc.u,Sc[Gc+1]=wc.v,Gc+=2}Gc>0&&(I.bindBuffer(I.ARRAY_BUFFER,vb.__webglUVBuffer),I.bufferData(I.ARRAY_BUFFER,Sc,xb))}if(hd&&rd&&Cb){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++){Gb=nd[Eb],Hb=pd[Gb],Ob=rd[Gb];if(Ob!==void 0)for(tc=0;tc<3;tc++)xc=Ob[tc],Tc[Hc]=xc.u,Tc[Hc+1]=xc.v,Hc+=2}Eb=0;for(Fb=od.length;Eb<Fb;Eb++){Gb=od[Eb],Hb=pd[Gb],Ob=rd[Gb];if(Ob!==void 0)for(tc=0;tc<4;tc++)xc=Ob[tc],Tc[Hc]=xc.u,Tc[Hc+1]=xc.v,Hc+=2}Hc>0&&(I.bindBuffer(I.ARRAY_BUFFER,vb.__webglUV2Buffer),I.bufferData(I.ARRAY_BUFFER,Tc,xb))}if(gd){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],dd[Ic]=Ec,dd[Ic+1]=Ec+1,dd[Ic+2]=Ec+2,Ic+=3,ed[Lc]=Ec,ed[Lc+1]=Ec+1,ed[Lc+2]=Ec,ed[Lc+3]=Ec+2,ed[Lc+4]=Ec+1,ed[Lc+5]=Ec+2,Lc+=6,Ec+=3;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],dd[Ic]=Ec,dd[Ic+1]=Ec+1,dd[Ic+2]=Ec+3,dd[Ic+3]=Ec+1,dd[Ic+4]=Ec+2,dd[Ic+5]=Ec+3,Ic+=6,ed[Lc]=Ec,ed[Lc+1]=Ec+1,ed[Lc+2]=Ec,ed[Lc+3]=Ec+3,ed[Lc+4]=Ec+1,ed[Lc+5]=Ec+2,ed[Lc+6]=Ec+2,ed[Lc+7]=Ec+3,Lc+=8,Ec+=4;I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,vb.__webglFaceBuffer),I.bufferData(I.ELEMENT_ARRAY_BUFFER,dd,xb),I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,vb.__webglLineBuffer),I.bufferData(I.ELEMENT_ARRAY_BUFFER,ed,xb)}if(bd){tc=0;for(uc=bd.length;tc<uc;tc++){cd=bd[tc];if(cd.__original.needsUpdate){Pc=0;if(cd.size===1){if(cd.boundTo===void 0||cd.boundTo==="vertices"){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],cd.array[Pc]=cd.value[Hb.a],cd.array[Pc+1]=cd.value[Hb.b],cd.array[Pc+2]=cd.value[Hb.c],Pc+=3;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],cd.array[Pc]=cd.value[Hb.a],cd.array[Pc+1]=cd.value[Hb.b],cd.array[Pc+2]=cd.value[Hb.c],cd.array[Pc+3]=cd.value[Hb.d],Pc+=4}else if(cd.boundTo==="faces"){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Qc=cd.value[nd[Eb]],cd.array[Pc]=Qc,cd.array[Pc+1]=Qc,cd.array[Pc+2]=Qc,Pc+=3;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Qc=cd.value[od[Eb]],cd.array[Pc]=Qc,cd.array[Pc+1]=Qc,cd.array[Pc+2]=Qc,cd.array[Pc+3]=Qc,Pc+=4}}else if(cd.size===2){if(cd.boundTo===void 0||cd.boundTo==="vertices"){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],Pb=cd.value[Hb.a],Qb=cd.value[Hb.b],Rb=cd.value[Hb.c],cd.array[Pc]=Pb.x,cd.array[Pc+1]=Pb.y,cd.array[Pc+2]=Qb.x,cd.array[Pc+3]=Qb.y,cd.array[Pc+4]=Rb.x,cd.array[Pc+5]=Rb.y,Pc+=6;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],Pb=cd.value[Hb.a],Qb=cd.value[Hb.b],Rb=cd.value[Hb.c],Sb=cd.value[Hb.d],cd.array[Pc]=Pb.x,cd.array[Pc+1]=Pb.y,cd.array[Pc+2]=Qb.x,cd.array[Pc+3]=Qb.y,cd.array[Pc+4]=Rb.x,cd.array[Pc+5]=Rb.y,cd.array[Pc+6]=Sb.x,cd.array[Pc+7]=Sb.y,Pc+=8}else if(cd.boundTo==="faces"){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Rb=Qb=Pb=Qc=cd.value[nd[Eb]],cd.array[Pc]=Pb.x,cd.array[Pc+1]=Pb.y,cd.array[Pc+2]=Qb.x,cd.array[Pc+3]=Qb.y,cd.array[Pc+4]=Rb.x,cd.array[Pc+5]=Rb.y,Pc+=6;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Sb=Rb=Qb=Pb=Qc=cd.value[od[Eb]],cd.array[Pc]=Pb.x,cd.array[Pc+1]=Pb.y,cd.array[Pc+2]=Qb.x,cd.array[Pc+3]=Qb.y,cd.array[Pc+4]=Rb.x,cd.array[Pc+5]=Rb.y,cd.array[Pc+6]=Sb.x,cd.array[Pc+7]=Sb.y,Pc+=8}}else if(cd.size===3){var yd;yd=cd.type==="c"?["r","g","b"]:["x","y","z"];if(cd.boundTo===void 0||cd.boundTo==="vertices"){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],Pb=cd.value[Hb.a],Qb=cd.value[Hb.b],Rb=cd.value[Hb.c],cd.array[Pc]=Pb[yd[0]],cd.array[Pc+1]=Pb[yd[1]],cd.array[Pc+2]=Pb[yd[2]],cd.array[Pc+3]=Qb[yd[0]],cd.array[Pc+4]=Qb[yd[1]],cd.array[Pc+5]=Qb[yd[2]],cd.array[Pc+6]=Rb[yd[0]],cd.array[Pc+7]=Rb[yd[1]],cd.array[Pc+8]=Rb[yd[2]],Pc+=9;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],Pb=cd.value[Hb.a],Qb=cd.value[Hb.b],Rb=cd.value[Hb.c],Sb=cd.value[Hb.d],cd.array[Pc]=Pb[yd[0]],cd.array[Pc+1]=Pb[yd[1]],cd.array[Pc+2]=Pb[yd[2]],cd.array[Pc+3]=Qb[yd[0]],cd.array[Pc+4]=Qb[yd[1]],cd.array[Pc+5]=Qb[yd[2]],cd.array[Pc+6]=Rb[yd[0]],cd.array[Pc+7]=Rb[yd[1]],cd.array[Pc+8]=Rb[yd[2]],cd.array[Pc+9]=Sb[yd[0]],cd.array[Pc+10]=Sb[yd[1]],cd.array[Pc+11]=Sb[yd[2]],Pc+=12}else if(cd.boundTo==="faces"){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Rb=Qb=Pb=Qc=cd.value[nd[Eb]],cd.array[Pc]=Pb[yd[0]],cd.array[Pc+1]=Pb[yd[1]],cd.array[Pc+2]=Pb[yd[2]],cd.array[Pc+3]=Qb[yd[0]],cd.array[Pc+4]=Qb[yd[1]],cd.array[Pc+5]=Qb[yd[2]],cd.array[Pc+6]=Rb[yd[0]],cd.array[Pc+7]=Rb[yd[1]],cd.array[Pc+8]=Rb[yd[2]],Pc+=9;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Sb=Rb=Qb=Pb=Qc=cd.value[od[Eb]],cd.array[Pc]=Pb[yd[0]],cd.array[Pc+1]=Pb[yd[1]],cd.array[Pc+2]=Pb[yd[2]],cd.array[Pc+3]=Qb[yd[0]],cd.array[Pc+4]=Qb[yd[1]],cd.array[Pc+5]=Qb[yd[2]],cd.array[Pc+6]=Rb[yd[0]],cd.array[Pc+7]=Rb[yd[1]],cd.array[Pc+8]=Rb[yd[2]],cd.array[Pc+9]=Sb[yd[0]],cd.array[Pc+10]=Sb[yd[1]],cd.array[Pc+11]=Sb[yd[2]],Pc+=12}}else if(cd.size===4)if(cd.boundTo===void 0||cd.boundTo==="vertices"){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Hb=pd[nd[Eb]],Pb=cd.value[Hb.a],Qb=cd.value[Hb.b],Rb=cd.value[Hb.c],cd.array[Pc]=Pb.x,cd.array[Pc+1]=Pb.y,cd.array[Pc+2]=Pb.z,cd.array[Pc+3]=Pb.w,cd.array[Pc+4]=Qb.x,cd.array[Pc+5]=Qb.y,cd.array[Pc+6]=Qb.z,cd.array[Pc+7]=Qb.w,cd.array[Pc+8]=Rb.x,cd.array[Pc+9]=Rb.y,cd.array[Pc+10]=Rb.z,cd.array[Pc+11]=Rb.w,Pc+=12;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Hb=pd[od[Eb]],Pb=cd.value[Hb.a],Qb=cd.value[Hb.b],Rb=cd.value[Hb.c],Sb=cd.value[Hb.d],cd.array[Pc]=Pb.x,cd.array[Pc+1]=Pb.y,cd.array[Pc+2]=Pb.z,cd.array[Pc+3]=Pb.w,cd.array[Pc+4]=Qb.x,cd.array[Pc+5]=Qb.y,cd.array[Pc+6]=Qb.z,cd.array[Pc+7]=Qb.w,cd.array[Pc+8]=Rb.x,cd.array[Pc+9]=Rb.y,cd.array[Pc+10]=Rb.z,cd.array[Pc+11]=Rb.w,cd.array[Pc+12]=Sb.x,cd.array[Pc+13]=Sb.y,cd.array[Pc+14]=Sb.z,cd.array[Pc+15]=Sb.w,Pc+=16}else if(cd.boundTo==="faces"){Eb=0;for(Fb=nd.length;Eb<Fb;Eb++)Rb=Qb=Pb=Qc=cd.value[nd[Eb]],cd.array[Pc]=Pb.x,cd.array[Pc+1]=Pb.y,cd.array[Pc+2]=Pb.z,cd.array[Pc+3]=Pb.w,cd.array[Pc+4]=Qb.x,cd.array[Pc+5]=Qb.y,cd.array[Pc+6]=Qb.z,cd.array[Pc+7]=Qb.w,cd.array[Pc+8]=Rb.x,cd.array[Pc+9]=Rb.y,cd.array[Pc+10]=Rb.z,cd.array[Pc+11]=Rb.w,Pc+=12;Eb=0;for(Fb=od.length;Eb<Fb;Eb++)Sb=Rb=Qb=Pb=Qc=cd.value[od[Eb]],cd.array[Pc]=Pb.x,cd.array[Pc+1]=Pb.y,cd.array[Pc+2]=Pb.z,cd.array[Pc+3]=Pb.w,cd.array[Pc+4]=Qb.x,cd.array[Pc+5]=Qb.y,cd.array[Pc+6]=Qb.z,cd.array[Pc+7]=Qb.w,cd.array[Pc+8]=Rb.x,cd.array[Pc+9]=Rb.y,cd.array[Pc+10]=Rb.z,cd.array[Pc+11]=Rb.w,cd.array[Pc+12]=Sb.x,cd.array[Pc+13]=Sb.y,cd.array[Pc+14]=Sb.z,cd.array[Pc+15]=Sb.w,Pc+=16}I.bindBuffer(I.ARRAY_BUFFER,cd.buffer),I.bufferData(I.ARRAY_BUFFER,cd.array,xb)}}}yb&&(delete vb.__inittedArrays,delete vb.__colorArray,delete vb.__normalArray,delete vb.__tangentArray,delete vb.__uvArray,delete vb.__uv2Array,delete vb.__faceArray,delete vb.__vertexArray,delete vb.__lineArray,delete vb.__skinVertexAArray,delete vb.__skinVertexBArray,delete vb.__skinIndexArray,delete vb.__skinWeightArray)}}}pb.verticesNeedUpdate=!1,pb.morphTargetsNeedUpdate=!1,pb.elementsNeedUpdate=!1,pb.uvsNeedUpdate=!1,pb.normalsNeedUpdate=!1,pb.colorsNeedUpdate=!1,pb.tangetsNeedUpdate=!1,sb.attributes&&m(sb)}else if(ob instanceof THREE.Ribbon){if(pb.verticesNeedUpdate||pb.colorsNeedUpdate){var zd=pb,Ad=I.DYNAMIC_DRAW,Bd=void 0,Cd=void 0,Dd=void 0,Ed=void 0,Fd=void 0,Gd=zd.vertices,Hd=zd.colors,Id=Gd.length,Jd=Hd.length,Kd=zd.__vertexArray,Ld=zd.__colorArray,Md=zd.colorsNeedUpdate;if(zd.verticesNeedUpdate){for(Bd=0;Bd<Id;Bd++)Dd=Gd[Bd],Ed=Bd*3,Kd[Ed]=Dd.x,Kd[Ed+1]=Dd.y,Kd[Ed+2]=Dd.z;I.bindBuffer(I.ARRAY_BUFFER,zd.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,Kd,Ad)}if(Md){for(Cd=0;Cd<Jd;Cd++)Fd=Hd[Cd],Ed=Cd*3,Ld[Ed]=Fd.r,Ld[Ed+1]=Fd.g,Ld[Ed+2]=Fd.b;I.bindBuffer(I.ARRAY_BUFFER,zd.__webglColorBuffer),I.bufferData(I.ARRAY_BUFFER,Ld,Ad)}}pb.verticesNeedUpdate=!1,pb.colorsNeedUpdate=!1}else if(ob instanceof THREE.Line){sb=c(ob,qb),rb=sb.attributes&&l(sb);if(pb.verticesNeedUpdate||pb.colorsNeedUpdate||rb){var Nd=pb,Od=I.DYNAMIC_DRAW,Pd=void 0,Qd=void 0,Rd=void 0,Sd=void 0,Td=void 0,Ud=Nd.vertices,Vd=Nd.colors,Wd=Ud.length,Xd=Vd.length,Yd=Nd.__vertexArray,Zd=Nd.__colorArray,$d=Nd.colorsNeedUpdate,_d=Nd.__webglCustomAttributesList,ae=void 0,be=void 0,ce=void 0,de=void 0,ee=void 0,fe=void 0;if(Nd.verticesNeedUpdate){for(Pd=0;Pd<Wd;Pd++)Rd=Ud[Pd],Sd=Pd*3,Yd[Sd]=Rd.x,Yd[Sd+1]=Rd.y,Yd[Sd+2]=Rd.z;I.bindBuffer(I.ARRAY_BUFFER,Nd.__webglVertexBuffer),I.bufferData(I.ARRAY_BUFFER,Yd,Od)}if($d){for(Qd=0;Qd<Xd;Qd++)Td=Vd[Qd],Sd=Qd*3,Zd[Sd]=Td.r,Zd[Sd+1]=Td.g,Zd[Sd+2]=Td.b;I.bindBuffer(I.ARRAY_BUFFER,Nd.__webglColorBuffer),I.bufferData(I.ARRAY_BUFFER,Zd,Od)}if(_d){ae=0;for(be=_d.length;ae<be;ae++){fe=_d[ae];if(fe.needsUpdate&&(fe.boundTo===void 0||fe.boundTo==="vertices")){Sd=0,de=fe.value.length;if(fe.size===1)for(ce=0;ce<de;ce++)fe.array[ce]=fe.value[ce];else if(fe.size===2)for(ce=0;ce<de;ce++)ee=fe.value[ce],fe.array[Sd]=ee.x,fe.array[Sd+1]=ee.y,Sd+=2;else if(fe.size===3)if(fe.type==="c")for(ce=0;ce<de;ce++)ee=fe.value[ce],fe.array[Sd]=ee.r,fe.array[Sd+1]=ee.g,fe.array[Sd+2]=ee.b,Sd+=3;else for(ce=0;ce<de;ce++)ee=fe.value[ce],fe.array[Sd]=ee.x,fe.array[Sd+1]=ee.y,fe.array[Sd+2]=ee.z,Sd+=3;else if(fe.size===4)for(ce=0;ce<de;ce++)ee=fe.value[ce],fe.array[Sd]=ee.x,fe.array[Sd+1]=ee.y,fe.array[Sd+2]=ee.z,fe.array[Sd+3]=ee.w,Sd+=4;I.bindBuffer(I.ARRAY_BUFFER,fe.buffer),I.bufferData(I.ARRAY_BUFFER,fe.array,Od)}}}}pb.verticesNeedUpdate=!1,pb.colorsNeedUpdate=!1,sb.attributes&&m(sb)}else ob instanceof THREE.ParticleSystem&&(sb=c(ob,qb),rb=sb.attributes&&l(sb),(pb.verticesNeedUpdate||pb.colorsNeedUpdate||ob.sortParticles||rb)&&f(pb,I.DYNAMIC_DRAW,ob),pb.verticesNeedUpdate=!1,pb.colorsNeedUpdate=!1,sb.attributes&&m(sb))}},this.initMaterial=function(a,b,c,d){var e,f,g;a instanceof THREE.MeshDepthMaterial?g="depth":a instanceof THREE.MeshNormalMaterial?g="normal":a instanceof THREE.MeshBasicMaterial?g="basic":a instanceof THREE.MeshLambertMaterial?g="lambert":a instanceof THREE.MeshPhongMaterial?g="phong":a instanceof THREE.LineBasicMaterial?g="basic":a instanceof THREE.ParticleBasicMaterial&&(g="particle_basic");if(g){var h=THREE.ShaderLib[g];a.uniforms=THREE.UniformsUtils.clone(h.uniforms),a.vertexShader=h.vertexShader,a.fragmentShader=h.fragmentShader}var i,j,k,l,m;i=l=m=h=0;for(j=b.length;i<j;i++)k=b[i],k.onlyShadow||(k instanceof THREE.DirectionalLight&&l++,k instanceof THREE.PointLight&&m++,k instanceof THREE.SpotLight&&h++);m+h+l<=G?(j=l,k=m,l=h):(j=Math.ceil(G*l/(m+l)),l=k=G-j);var n=0,h=0;for(m=b.length;h<m;h++)i=b[h],i.castShadow&&(i instanceof THREE.SpotLight&&n++,i instanceof THREE.DirectionalLight&&!i.shadowCascade&&n++);var o=50;d!==void 0&&d instanceof THREE.SkinnedMesh&&(o=d.bones.length);var p;a:{m=a.fragmentShader,i=a.vertexShader;var h=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:o,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:j,maxPointLights:k,maxSpotLights:l,maxShadows:n,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:d&&d.doubleSided},q,d=[];g?d.push(g):(d.push(m),d.push(i));for(q in c)d.push(q),d.push(c[q]);g=d.join(),q=0;for(d=J.length;q<d;q++)if(J[q].code===g){p=J[q].program;break a}q=I.createProgram(),d=["precision "+y+" float;",nb>0?"#define VERTEX_TEXTURES":"",H.gammaInput?"#define GAMMA_INPUT":"",H.gammaOutput?"#define GAMMA_OUTPUT":"",H.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),j=["precision "+y+" float;","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",H.gammaInput?"#define GAMMA_INPUT":"",H.gammaOutput?"#define GAMMA_OUTPUT":"",H.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),I.attachShader(q,s("fragment",j+m)),I.attachShader(q,s("vertex",d+i)),I.linkProgram(q),I.getProgramParameter(q,I.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+I.getProgramParameter(q,I.VALIDATE_STATUS)+", gl error ["+I.getError()+"]"),q.uniforms={},q.attributes={};var r,d=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","boneGlobalMatrices","morphTargetInfluences"];for(r in h)d.push(r);r=d,d=0;for(h=r.length;d<h;d++)m=r[d],q.uniforms[m]=I.getUniformLocation(q,m);d=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(r=0;r<c.maxMorphTargets;r++)d.push("morphTarget"+r);for(r=0;r<c.maxMorphNormals;r++)d.push("morphNormal"+r);for(p in b)d.push(p);p=d,r=0;for(b=p.length;r<b;r++)c=p[r],q.attributes[c]=I.getAttribLocation(q,c);q.id=J.length,J.push({program:q,code:g}),H.info.memory.programs=J.length,p=q}a.program=p,p=a.program.attributes,p.position>=0&&I.enableVertexAttribArray(p.position),p.color>=0&&I.enableVertexAttribArray(p.color),p.normal>=0&&I.enableVertexAttribArray(p.normal),p.tangent>=0&&I.enableVertexAttribArray(p.tangent),a.skinning&&p.skinVertexA>=0&&p.skinVertexB>=0&&p.skinIndex>=0&&p.skinWeight>=0&&(I.enableVertexAttribArray(p.skinVertexA),I.enableVertexAttribArray(p.skinVertexB),I.enableVertexAttribArray(p.skinIndex),I.enableVertexAttribArray(p.skinWeight));if(a.attributes)for(f in a.attributes)p[f]!==void 0&&p[f]>=0&&I.enableVertexAttribArray(p[f]);if(a.morphTargets){a.numSupportedMorphTargets=0,q="morphTarget";for(f=0;f<this.maxMorphTargets;f++)r=q+f,p[r]>=0&&(I.enableVertexAttribArray(p[r]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0,q="morphNormal";for(f=0;f<this.maxMorphNormals;f++)r=q+f,p[r]>=0&&(I.enableVertexAttribArray(p[r]),a.numSupportedMorphNormals++)}a.uniformsList=[];for(e in a.uniforms)a.uniformsList.push([a.uniforms[e],e])},this.setFaceCulling=function(a,b){a?(!b||b==="ccw"?I.frontFace(I.CCW):I.frontFace(I.CW),a==="back"?I.cullFace(I.BACK):a==="front"?I.cullFace(I.FRONT):I.cullFace(I.FRONT_AND_BACK),I.enable(I.CULL_FACE)):I.disable(I.CULL_FACE)},this.setObjectFaces=function(a){Q!==a.doubleSided&&(a.doubleSided?I.disable(I.CULL_FACE):I.enable(I.CULL_FACE),Q=a.doubleSided),R!==a.flipSided&&(a.flipSided?I.frontFace(I.CW):I.frontFace(I.CCW),R=a.flipSided)},this.setDepthTest=function(a){W!==a&&(a?I.enable(I.DEPTH_TEST):I.disable(I.DEPTH_TEST),W=a)},this.setDepthWrite=function(a){X!==a&&(I.depthMask(a),X=a)},this.setBlending=function(a,b,c,d){if(a!==S){switch(a){case THREE.NoBlending:I.disable(I.BLEND);break;case THREE.AdditiveBlending:I.enable(I.BLEND),I.blendEquation(I.FUNC_ADD),I.blendFunc(I.SRC_ALPHA,I.ONE);break;case THREE.SubtractiveBlending:I.enable(I.BLEND),I.blendEquation(I.FUNC_ADD),I.blendFunc(I.ZERO,I.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:I.enable(I.BLEND),I.blendEquation(I.FUNC_ADD),I.blendFunc(I.ZERO,I.SRC_COLOR);break;case THREE.CustomBlending:I.enable(I.BLEND);break;default:I.enable(I.BLEND),I.blendEquationSeparate(I.FUNC_ADD,I.FUNC_ADD),I.blendFuncSeparate(I.SRC_ALPHA,I.ONE_MINUS_SRC_ALPHA,I.ONE,I.ONE_MINUS_SRC_ALPHA)}S=a}if(a===THREE.CustomBlending){b!==T&&(I.blendEquation(w(b)),T=b);if(c!==U||d!==V)I.blendFunc(w(c),w(d)),U=c,V=d}else V=U=T=null},this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=I.createTexture(),H.info.memory.textures++),I.activeTexture(I.TEXTURE0+b),I.bindTexture(I.TEXTURE_2D,a.__webglTexture),I.pixelStorei(I.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=(c.width&c.width-1)===0&&(c.height&c.height-1)===0,e=w(a.format),f=w(a.type);t(I.TEXTURE_2D,a,d),a instanceof THREE.DataTexture?I.texImage2D(I.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):I.texImage2D(I.TEXTURE_2D,0,e,e,f,a.image),a.generateMipmaps&&d&&I.generateMipmap(I.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else I.activeTexture(I.TEXTURE0+b),I.bindTexture(I.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){a.depthBuffer===void 0&&(a.depthBuffer=!0),a.stencilBuffer===void 0&&(a.stencilBuffer=!0),a.__webglTexture=I.createTexture();var c=(a.width&a.width-1)===0&&(a.height&a.height-1)===0,d=w(a.format),e=w(a.type);if(b){a.__webglFramebuffer=[],a.__webglRenderbuffer=[],I.bindTexture(I.TEXTURE_CUBE_MAP,a.__webglTexture),t(I.TEXTURE_CUBE_MAP,a,c);for(var f=0;f<6;f++){a.__webglFramebuffer[f]=I.createFramebuffer(),a.__webglRenderbuffer[f]=I.createRenderbuffer(),I.texImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=I.TEXTURE_CUBE_MAP_POSITIVE_X+f;I.bindFramebuffer(I.FRAMEBUFFER,a.__webglFramebuffer[f]),I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,h,g.__webglTexture,0),u(a.__webglRenderbuffer[f],a)}c&&I.generateMipmap(I.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=I.createFramebuffer(),a.__webglRenderbuffer=I.createRenderbuffer(),I.bindTexture(I.TEXTURE_2D,a.__webglTexture),t(I.TEXTURE_2D,a,c),I.texImage2D(I.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=I.TEXTURE_2D,I.bindFramebuffer(I.FRAMEBUFFER,a.__webglFramebuffer),I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,d,a.__webglTexture,0),u(a.__webglRenderbuffer,a),c&&I.generateMipmap(I.TEXTURE_2D);b?I.bindTexture(I.TEXTURE_CUBE_MAP,null):I.bindTexture(I.TEXTURE_2D,null),I.bindRenderbuffer(I.RENDERBUFFER,null),I.bindFramebuffer(I.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=cb,a=db,d=ab,e=bb),b!==L&&(I.bindFramebuffer(I.FRAMEBUFFER,b),I.viewport(d,e,c,a),L=b),eb=c,fb=a},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(a,b,c){this.width=a,this.height=b,c=c||{},this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter,this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=c.format!==void 0?c.format:THREE.RGBAFormat,this.type=c.type!==void 0?c.type:THREE.UnsignedByteType,this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:!0,this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:!0,this.generateMipmaps=!0},THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);return a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.format=this.format,a.type=this.type,a.depthBuffer=this.depthBuffer,a.stencilBuffer=this.stencilBuffer,a},THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget,THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld),this.positionScreen.copy(a.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.faceMaterial=this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.faceMaterial=this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e),e.h=THREE.Math.clamp(e.h+b,0,1),e.s=THREE.Math.clamp(e.s+c,0,1),e.v=THREE.Math.clamp(e.v+d,0,1),a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,e=a.b,f=Math.max(Math.max(c,d),e),g=Math.min(Math.min(c,d),e);if(g===f)g=c=0;else{var h=f-g,g=h/f,c=(c===f?(d-e)/h:d===f?2+(e-c)/h:4+(c-d)/h)/6;c<0&&(c+=1),c>1&&(c-=1)}return b===void 0&&(b={h:0,s:0,v:0}),b.h=c,b.s=g,b.v=f,b}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,i=a.faces,j=f.faces,k=a.faceVertexUvs[0],l=f.faceVertexUvs[0],m={},n=0;n<a.materials.length;n++)m[a.materials[n].id]=n;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var n=0,o=h.length;n<o;n++){var p=h[n].clone();c&&c.multiplyVector3(p),g.push(p)}n=0;for(o=j.length;n<o;n++){var g=j[n],q,r,s=g.vertexNormals,t=g.vertexColors;g instanceof THREE.Face3?q=new THREE.Face3(g.a+e,g.b+e,g.c+e):g instanceof THREE.Face4&&(q=new THREE.Face4(g.a+e,g.b+e,g.c+e,g.d+e)),q.normal.copy(g.normal),d&&d.multiplyVector3(q.normal),h=0;for(p=s.length;h<p;h++)r=s[h].clone(),d&&d.multiplyVector3(r),q.vertexNormals.push(r);q.color.copy(g.color),h=0;for(p=t.length;h<p;h++)r=t[h],q.vertexColors.push(r.clone());g.materialIndex!==void 0&&(h=f.materials[g.materialIndex],p=h.id,t=m[p],t===void 0&&(t=a.materials.length,m[p]=t,a.materials.push(h)),q.materialIndex=t),q.centroid.copy(g.centroid),c&&c.multiplyVector3(q.centroid),i.push(q)}n=0;for(o=l.length;n<o;n++){c=l[n],d=[],h=0;for(p=c.length;h<p;h++)d.push(new THREE.UV(c[h].u,c[h].v));k.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,e=a.faces,f=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice()),a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=e.length;a<c;a++)b.faces.push(e[a].clone());a=0;for(c=f.length;a<c;a++){for(var d=f[a],e=[],g=0,h=d.length;g<h;g++)e.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(e)}return b},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;return d=THREE.GeometryUtils.random(),e=THREE.GeometryUtils.random(),d+e>1&&(d=1-d,e=1-e),f=1-d-e,g.copy(a),g.multiplyScalar(d),h.copy(b),h.multiplyScalar(e),g.addSelf(h),h.copy(c),h.multiplyScalar(f),g.addSelf(h),g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c];var b=b.vertices[a.d],g;return c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b)),THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return j[e]>a?b(c,e-1):j[e]<a?b(e+1,d):e}return b(0,j.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,i=0,j=[],k,l,m,n;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(k=g[d.a],l=g[d.b],m=g[d.c],d._area=THREE.GeometryUtils.triangleArea(k,l,m)):d instanceof THREE.Face4&&(k=g[d.a],l=g[d.b],m=g[d.c],n=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(k,l,n),d._area2=THREE.GeometryUtils.triangleArea(l,m,n),d._area=d._area1+d._area2),i+=d._area,j[e]=i;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*i,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;return e.sub(a,b),d=e.length(),e.sub(a,c),a=e.length(),e.sub(b,c),c=e.length(),b=.5*(d+a+c),Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;return c.add(b.min,b.max),c.multiplyScalar(-0.5),a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z)),a.computeBoundingBox(),c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)d[e].u!==1&&(d[e].u=d[e].u-Math.floor(d[e].u)),d[e].v!==1&&(d[e].v=d[e].v-Math.floor(d[e].v))},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++){d=a.faces[b];if(d instanceof THREE.Face4){e=d.a;var i=d.b,j=d.c,k=d.d,l=new THREE.Face3,m=new THREE.Face3;l.color.copy(d.color),m.color.copy(d.color),l.materialIndex=d.materialIndex,m.materialIndex=d.materialIndex,l.a=e,l.b=i,l.c=k,m.a=i,m.b=j,m.c=k,d.vertexColors.length===4&&(l.vertexColors[0]=d.vertexColors[0].clone(),l.vertexColors[1]=d.vertexColors[1].clone(),l.vertexColors[2]=d.vertexColors[3].clone(),m.vertexColors[0]=d.vertexColors[1].clone(),m.vertexColors[1]=d.vertexColors[2].clone(),m.vertexColors[2]=d.vertexColors[3].clone()),f.push(l,m),d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(l=a.faceVertexUvs[d][b],i=l[1],j=l[2],k=l[3],l=[l[0].clone(),i.clone(),k.clone()],i=[i.clone(),j.clone(),k.clone()],h[d].push(l,i));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(i=a.faceUvs[d][b],g[d].push(i,i))}else{f.push(d),d=0;for(e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d])}}a.faces=f,a.faceUvs=g,a.faceVertexUvs=h,a.computeCentroids(),a.computeFaceNormals(),a.computeVertexNormals(),a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],j=a.vertices[f.d];b.push(g.clone()),b.push(h.clone()),b.push(i.clone()),b.push(j.clone()),f.a=e,f.b=e+1,f.c=e+2,f.d=e+3}else g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],b.push(g.clone()),b.push(h.clone()),b.push(i.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b,delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v=[],w=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)w[c]=[];c=0;for(d=a.faces.length;c<d;c++){e=a.faces[c];if(e instanceof THREE.Face3){f=e.a,g=e.b,h=e.c,j=a.vertices[f],k=a.vertices[g],l=a.vertices[h],n=j.distanceTo(k),o=k.distanceTo(l),m=j.distanceTo(l);if(n>b||o>b||m>b){i=a.vertices.length,t=e.clone(),u=e.clone(),n>=o&&n>=m?(j=j.clone(),j.lerpSelf(k,.5),t.a=f,t.b=i,t.c=h,u.a=i,u.b=g,u.c=h,e.vertexNormals.length===3&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],.5),t.vertexNormals[1].copy(f),u.vertexNormals[0].copy(f)),e.vertexColors.length===3&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],.5),t.vertexColors[1].copy(f),u.vertexColors[0].copy(f)),e=0):o>=n&&o>=m?(j=k.clone(),j.lerpSelf(l,.5),t.a=f,t.b=g,t.c=i,u.a=i,u.b=h,u.c=f,e.vertexNormals.length===3&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],.5),t.vertexNormals[2].copy(f),u.vertexNormals[0].copy(f),u.vertexNormals[1].copy(e.vertexNormals[2]),u.vertexNormals[2].copy(e.vertexNormals[0])),e.vertexColors.length===3&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],.5),t.vertexColors[2].copy(f),u.vertexColors[0].copy(f),u.vertexColors[1].copy(e.vertexColors[2]),u.vertexColors[2].copy(e.vertexColors[0])),e=1):(j=j.clone(),j.lerpSelf(l,.5),t.a=f,t.b=g,t.c=i,u.a=i,u.b=g,u.c=h,e.vertexNormals.length===3&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],.5),t.vertexNormals[2].copy(f),u.vertexNormals[0].copy(f)),e.vertexColors.length===3&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],.5),t.vertexColors[2].copy(f),u.vertexColors[0].copy(f)),e=2),v.push(t,u),a.vertices.push(j),f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(j=a.faceVertexUvs[f][c],u=j[0],h=j[1],t=j[2],e===0?(k=u.clone(),k.lerpSelf(h,.5),j=[u.clone(),k.clone(),t.clone()],h=[k.clone(),h.clone(),t.clone()]):e===1?(k=h.clone(),k.lerpSelf(t,.5),j=[u.clone(),h.clone(),k.clone()],h=[k.clone(),t.clone(),u.clone()]):(k=u.clone(),k.lerpSelf(t,.5),j=[u.clone(),h.clone(),k.clone()],h=[k.clone(),h.clone(),t.clone()]),w[f].push(j,h))}else{v.push(e),f=0;for(g=a.faceVertexUvs.length;f<g;f++)w[f].push(a.faceVertexUvs[f][c])}}else{f=e.a,g=e.b,h=e.c,i=e.d,j=a.vertices[f],k=a.vertices[g],l=a.vertices[h],m=a.vertices[i],n=j.distanceTo(k),o=k.distanceTo(l),p=l.distanceTo(m),q=j.distanceTo(m);if(n>b||o>b||p>b||q>b){r=a.vertices.length,s=a.vertices.length+1,t=e.clone(),u=e.clone(),n>=o&&n>=p&&n>=q||p>=o&&p>=n&&p>=q?(n=j.clone(),n.lerpSelf(k,.5),k=l.clone(),k.lerpSelf(m,.5),t.a=f,t.b=r,t.c=s,t.d=i,u.a=r,u.b=g,u.c=h,u.d=s,e.vertexNormals.length===4&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],.5),t.vertexNormals[1].copy(f),t.vertexNormals[2].copy(g),u.vertexNormals[0].copy(f),u.vertexNormals[3].copy(g)),e.vertexColors.length===4&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],.5),t.vertexColors[1].copy(f),t.vertexColors[2].copy(g),u.vertexColors[0].copy(f),u.vertexColors[3].copy(g)),e=0):(n=k.clone(),n.lerpSelf(l,.5),k=m.clone(),k.lerpSelf(j,.5),t.a=f,t.b=g,t.c=r,t.d=s,u.a=s,u.b=r,u.c=h,u.d=i,e.vertexNormals.length===4&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],.5),t.vertexNormals[2].copy(f),t.vertexNormals[3].copy(g),u.vertexNormals[0].copy(g),u.vertexNormals[1].copy(f)),e.vertexColors.length===4&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],.5),t.vertexColors[2].copy(f),t.vertexColors[3].copy(g),u.vertexColors[0].copy(g),u.vertexColors[1].copy(f)),e=1),v.push(t,u),a.vertices.push(n,k),f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(j=a.faceVertexUvs[f][c],u=j[0],h=j[1],t=j[2],j=j[3],e===0?(k=u.clone(),k.lerpSelf(h,.5),l=t.clone(),l.lerpSelf(j,.5),u=[u.clone(),k.clone(),l.clone(),j.clone()],h=[k.clone(),h.clone(),t.clone(),l.clone()]):(k=h.clone(),k.lerpSelf(t,.5),l=j.clone(),l.lerpSelf(u,.5),u=[u.clone(),h.clone(),k.clone(),l.clone()],h=[l.clone(),k.clone(),t.clone(),j.clone()]),w[f].push(u,h))}else{v.push(e),f=0;for(g=a.faceVertexUvs.length;f<g;f++)w[f].push(a.faceVertexUvs[f][c])}}}a.faces=v,a.faceVertexUvs=w}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c){var d=new Image,e=new THREE.Texture(d,b);return d.onload=function(){e.needsUpdate=!0,c&&c(this)},d.crossOrigin=this.crossOrigin,d.src=a,e},loadTextureCube:function(a,b,c){var d,e=[],f=new THREE.Texture(e,b),b=e.loadCount=0;for(d=a.length;b<d;++b)e[b]=new Image,e[b].onload=function(){e.loadCount=e.loadCount+1,e.loadCount===6&&(f.needsUpdate=!0),c&&c(this)},e[b].crossOrigin=this.crossOrigin,e[b].src=a[b];return f},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,e=a.height,f=document.createElement("canvas");f.width=d,f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,i=g.createImageData(d,e),j=i.data,k=0;k<d;k++)for(var l=0;l<e;l++){var m=l-1<0?0:l-1,n=l+1>e-1?e-1:l+1,o=k-1<0?0:k-1,p=k+1>d-1?d-1:k+1,q=[],r=[0,0,h[(l*d+k)*4]/255*b];q.push([-1,0,h[(l*d+o)*4]/255*b]),q.push([-1,-1,h[(m*d+o)*4]/255*b]),q.push([0,-1,h[(m*d+k)*4]/255*b]),q.push([1,-1,h[(m*d+p)*4]/255*b]),q.push([1,0,h[(l*d+p)*4]/255*b]),q.push([1,1,h[(n*d+p)*4]/255*b]),q.push([0,1,h[(n*d+k)*4]/255*b]),q.push([-1,1,h[(n*d+o)*4]/255*b]),m=[],o=q.length;for(n=0;n<o;n++){var p=q[n],s=q[(n+1)%o],p=[p[0]-r[0],p[1]-r[1],p[2]-r[2]],s=[s[0]-r[0],s[1]-r[1],s[2]-r[2]];m.push(c([p[1]*s[2]-p[2]*s[1],p[2]*s[0]-p[0]*s[2],p[0]*s[1]-p[1]*s[0]]))}q=[0,0,0];for(n=0;n<m.length;n++)q[0]=q[0]+m[n][0],q[1]=q[1]+m[n][1],q[2]=q[2]+m[n][2];q[0]=q[0]/m.length,q[1]=q[1]/m.length,q[2]=q[2]/m.length,r=(l*d+k)*4,j[r]=(q[0]+1)/2*255|0,j[r+1]=(q[1]+.5)*255|0,j[r+2]=q[2]*255|0,j[r+3]=255}return g.putImageData(i,0,0),f},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(c.r*255),g=Math.floor(c.g*255),c=Math.floor(c.b*255),h=0;h<d;h++)e[h*3]=f,e[h*3+1]=g,e[h*3+2]=c;return a=new THREE.DataTexture(e,a,b,THREE.RGBFormat),a.needsUpdate=!0,a}},THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,e=a.children.length;for(d=0;d<e;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,e=new THREE.Object3D;for(c=0;c<d;c++){var f=new THREE.Mesh(a,b[c]);e.add(f)}return e},cloneObject:function(a){var b;a instanceof THREE.MorphAnimMesh?(b=new THREE.MorphAnimMesh(a.geometry,a.material),b.duration=a.duration,b.mirroredLoop=a.mirroredLoop,b.time=a.time,b.lastKeyframe=a.lastKeyframe,b.currentKeyframe=a.currentKeyframe,b.direction=a.direction,b.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,b.opacity=a.opacity,b.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.MarchingCubes?(b=new THREE.MarchingCubes(a.resolution,a.material),b.field.set(a.field),b.isolation=a.isolation):a instanceof THREE.Object3D&&(b=new THREE.Object3D),b.name=a.name,b.parent=a.parent,b.up.copy(a.up),b.position.copy(a.position),b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation),b.eulerOrder=a.eulerOrder,b.scale.copy(a.scale),b.dynamic=a.dynamic,b.doubleSided=a.doubleSided,b.flipSided=a.flipSided,b.renderDepth=a.renderDepth,b.rotationAutoUpdate=a.rotationAutoUpdate,b.matrix.copy(a.matrix),b.matrixWorld.copy(a.matrixWorld),b.matrixRotationWorld.copy(a.matrixRotationWorld),b.matrixAutoUpdate=a.matrixAutoUpdate,b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,b.quaternion.copy(a.quaternion),b.useQuaternion=a.useQuaternion,b.boundRadius=a.boundRadius,b.boundRadiusScale=a.boundRadiusScale,b.visible=a.visible,b.castShadow=a.castShadow,b.receiveShadow=a.receiveShadow,b.frustumCulled=a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d,d.parent=b}if(a instanceof THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld),a.applyMatrix(d),b.remove(a),c.add(a)}},THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform float uNormalScale;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\nif ( enableReflection ) {\nvec3 wPos = cameraPosition - vViewPosition;\nvec3 vReflect = reflect( normalize( wPos ), normal );\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}}),THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++,this.vertexColorArray=this.vertexUvArray=this.vertexNormalArray=this.vertexPositionArray=this.vertexIndexArray=this.vertexColorBuffer=this.vertexUvBuffer=this.vertexNormalBuffer=this.vertexPositionBuffer=this.vertexIndexBuffer=null,this.dynamic=!1,this.boundingSphere=this.boundingBox=null,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(a){return this.getPoint(this.getUtoTmapping(a))},THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c},THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c},THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]},THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,i;g<=h;){d=Math.floor(g+(h-g)/2),i=c[d]-f;if(i<0)g=d+1;else{if(!(i>0)){h=d;break}h=d-1}}return d=h,c[d]==f?d/(e-1):(g=c[d],c=(d+(f-g)/(c[d+1]-g))/(e-1))},THREE.Curve.prototype.getNormalVector=function(a){return a=this.getTangent(a),new THREE.Vector2(-a.y,a.x)},THREE.Curve.prototype.getTangent=function(a){var b=a-1e-4,a=a+1e-4;return b<0&&(b=0),a>1&&(a=1),b=this.getPoint(b),this.getPoint(a).clone().subSelf(b).normalize()},THREE.Curve.prototype.getTangentAt=function(a){return this.getTangent(this.getUtoTmapping(a))},THREE.LineCurve=function(a,b){this.v1=a,this.v2=b},THREE.LineCurve.prototype=new THREE.Curve,THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);return b.multiplyScalar(a).addSelf(this.v1),b},THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()},THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a,this.v1=b,this.v2=c},THREE.QuadraticBezierCurve.prototype=new THREE.Curve,THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(b,a)},THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;return b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x),a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y),b=new THREE.Vector2(b,a),b.normalize(),b},THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},THREE.CubicBezierCurve.prototype=new THREE.Curve,THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(b,a)},THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;return b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),b=new THREE.Vector2(b,a),b.normalize(),b},THREE.SplineCurve=function(a){this.points=a==void 0?[]:a},THREE.SplineCurve.prototype=new THREE.Curve,THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;return e=(d.length-1)*a,a=Math.floor(e),e-=a,c[0]=a==0?a:a-1,c[1]=a,c[2]=a>d.length-2?d.length-1:a+1,c[3]=a>d.length-3?d.length-1:a+2,b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e),b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e),b},THREE.ArcCurve=function(a,b,c,d,e,f){this.aX=a,this.aY=b,this.aRadius=c,this.aStartAngle=d,this.aEndAngle=e,this.aClockwise=f},THREE.ArcCurve.prototype=new THREE.Curve,THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.ArcCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;return this.aClockwise||(a=1-a),b=this.aStartAngle+a*b,a=this.aX+this.aRadius*Math.cos(b),b=this.aY+this.aRadius*Math.sin(b),new THREE.Vector2(a,b)},THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=(c-a)*.5,d=(d-b)*.5,f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}},THREE.Curve.create=function(a,b){return a.prototype=new THREE.Curve,a.prototype.constructor=a,a.prototype.getPoint=b,a},THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a,this.v2=b},function(a){var b=new THREE.Vector3;return b.sub(this.v2,this.v1),b.multiplyScalar(a),b.addSelf(this.v1),b}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a,this.v1=b,this.v2=c},function(a){var b,c;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(b,c,a)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},function(a){var b,c;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(b,c,a)}),THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,a=(d.length-1)*a;e=Math.floor(a),a-=e,c[0]=e==0?e:e-1,c[1]=e,c[2]=e>d.length-2?d.length-1:e+1,c[3]=e>d.length-3?d.length-1:e+2,e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];return b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a),b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a),b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a),b}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;return e=(d.length-0)*a,a=Math.floor(e),e-=a,a+=a>0?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length,c[0]=(a-1)%d.length,c[1]=a%d.length,c[2]=(a+1)%d.length,c[3]=(a+2)%d.length,b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e),b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e),b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,d[c[1]].z,d[c[2]].z,d[c[3]].z,e),b}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=new THREE.Curve,THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(a){this.curves.push(a)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))},THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null},THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a},THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e;b=c=Number.NEGATIVE_INFINITY,d=e=Number.POSITIVE_INFINITY;var f,g,h,i;i=new THREE.Vector2,g=0;for(h=a.length;g<h;g++)f=a[g],f.x>b?b=f.x:f.x<d&&(d=f.x),f.y>c?c=f.y:f.y<c&&(e=f.y),i.addSelf(f.x,f.y);return{minX:d,minY:e,maxX:b,maxY:c,centroid:i.divideScalar(h)}},THREE.CurvePath.prototype.createPointsGeometry=function(a){return this.createGeometry(this.getPoints(a,!0))},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return this.createGeometry(this.getSpacedPoints(a,!0))},THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,0));return b},THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)},THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends),d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends),d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c},THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,i;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,i=g/c.maxX,i=b.getUtoTmapping(i,g),g=b.getPoint(i),h=b.getNormalVector(i).multiplyScalar(h),f.x=g.x+h.x,f.y=g.y+h.y;return a},THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){a[b]==void 0&&(a[b]=[]),a[b].indexOf(c)===-1&&a[b].push(c)},this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)},this.removeEventListener=function(b,c){var d=a[b].indexOf(c);d!==-1&&a[b].splice(d,1)}},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=new THREE.Object3D,THREE.Gyroscope.prototype.constructor=THREE.Gyroscope,THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(a){THREE.CurvePath.call(this),this.actions=[],a&&this.fromPoints(a)},THREE.Path.prototype=new THREE.CurvePath,THREE.Path.prototype.constructor=THREE.Path,THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc"},THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})},THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b))),this.actions.push({action:THREE.PathActions.LINE_TO,args:c})},THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d))),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})},THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f))),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})},THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a),this.curves.push(new THREE.SplineCurve(c)),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})},THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1],h=new THREE.ArcCurve(h.x+a,h.y+b,c,d,e,f);this.curves.push(h),h=h.getPoint(f?1:0),g.push(h.x),g.push(h.y),this.actions.push({action:THREE.PathActions.ARC,args:g})},THREE.Path.prototype.absarc=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=new THREE.ArcCurve(a,b,c,d,e,f);this.curves.push(h),h=h.getPoint(f?1:0),g.push(h.x),g.push(h.y),this.actions.push({action:THREE.PathActions.ARC,args:g})},THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b},THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);var a=a||12,c=[],d,e,f,g,h,i,j,k,l,m,n,o,p;d=0;for(e=this.actions.length;d<e;d++){f=this.actions[d],g=f.action,f=f.args;switch(g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2],i=f[3],l=f[0],m=f[1],c.length>0?(g=c[c.length-1],n=g.x,o=g.y):(g=this.actions[d-1].args,n=g[g.length-2],o=g[g.length-1]);for(f=1;f<=a;f++)p=f/a,g=THREE.Shape.Utils.b2(p,n,l,h),p=THREE.Shape.Utils.b2(p,o,m,i),c.push(new THREE.Vector2(g,p));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4],i=f[5],l=f[0],m=f[1],j=f[2],k=f[3],c.length>0?(g=c[c.length-1],n=g.x,o=g.y):(g=this.actions[d-1].args,n=g[g.length-2],o=g[g.length-1]);for(f=1;f<=a;f++)p=f/a,g=THREE.Shape.Utils.b3(p,n,l,j,h),p=THREE.Shape.Utils.b3(p,o,m,k,i),c.push(new THREE.Vector2(g,p));break;case THREE.PathActions.CSPLINE_THRU:g=this.actions[d-1].args,p=[new THREE.Vector2(g[g.length-2],g[g.length-1])],g=a*f[0].length,p=p.concat(f[0]),p=new THREE.SplineCurve(p);for(f=1;f<=g;f++)c.push(p.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0],i=f[1],j=f[2],l=f[3],m=!!f[5],k=f[4]-l,n=a*2;for(f=1;f<=n;f++)p=f/n,m||(p=1-p),p=l+p*k,g=h+j*Math.cos(p),p=i+j*Math.sin(p),c.push(new THREE.Vector2(g,p))}}return d=c[c.length-1],Math.abs(d.x-c[0].x)<1e-10&&Math.abs(d.y-c[0].y)<1e-10&&c.splice(c.length-1,1),b&&c.push(c[0]),c},THREE.Path.prototype.transform=function(a,b){return this.getBoundingBox(),this.getWrapPoints(this.getPoints(b),a)},THREE.Path.prototype.nltransform=function(a,b,c,d,e,f){var g=this.getPoints(),h,i,j,k,l;h=0;for(i=g.length;h<i;h++)j=g[h],k=j.x,l=j.y,j.x=a*k+b*l+c,j.y=d*l+e*k+f;return g},THREE.Path.prototype.debug=function(a){var b=this.getBoundingBox();a||(a=document.createElement("canvas"),a.setAttribute("width",b.maxX+100),a.setAttribute("height",b.maxY+100),document.body.appendChild(a)),b=a.getContext("2d"),b.fillStyle="white",b.fillRect(0,0,a.width,a.height),b.strokeStyle="black",b.beginPath();var c,d,e,a=0;for(c=this.actions.length;a<c;a++)d=this.actions[a],e=d.args,d=d.action,d!=THREE.PathActions.CSPLINE_THRU&&b[d].apply(b,e);b.stroke(),b.closePath(),b.strokeStyle="red",d=this.getPoints(),a=0;for(c=d.length;a<c;a++)e=d[a],b.beginPath(),b.arc(e.x,e.y,1.5,0,Math.PI*2,!1),b.stroke(),b.closePath()},THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&f.actions.length!=0&&(e.push(f),f=new THREE.Path),f[c].apply(f,d);f.actions.length!=0&&e.push(f);if(e.length==0)return[];var g;d=[],a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(e.length==1)return f=e[0],g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves,d.push(g),d;if(a){g=new THREE.Shape,a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g.actions=f.actions,g.curves=f.curves,d.push(g),g=new THREE.Shape):g.holes.push(f)}else{a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves):g.holes.push(f);d.push(g)}return d},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=new THREE.Path,THREE.Shape.prototype.constructor=THREE.Path,THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)},THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d},THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d},THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}},THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)},THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}},THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,i,j,k,l,m,n,o=[];for(i=0;i<b.length;i++){j=b[i],Array.prototype.push.apply(d,j),f=Number.POSITIVE_INFINITY;for(e=0;e<j.length;e++){m=j[e],n=[];for(l=0;l<c.length;l++)k=c[l],k=m.distanceToSquared(k),n.push(k),k<f&&(f=k,g=e,h=l)}e=h-1>=0?h-1:c.length-1,f=g-1>=0?g-1:j.length-1;var p=[j[g],c[h],c[e]];l=THREE.FontUtils.Triangulate.area(p);var q=[j[g],j[f],c[h]];m=THREE.FontUtils.Triangulate.area(q),n=h,k=g,h+=1,g+=-1,h<0&&(h+=c.length),h%=c.length,g<0&&(g+=j.length),g%=j.length,e=h-1>=0?h-1:c.length-1,f=g-1>=0?g-1:j.length-1,p=[j[g],c[h],c[e]],p=THREE.FontUtils.Triangulate.area(p),q=[j[g],j[f],c[h]],q=THREE.FontUtils.Triangulate.area(q),l+m>p+q&&(h=n,g=k,h<0&&(h+=c.length),h%=c.length,g<0&&(g+=j.length),g%=j.length,e=h-1>=0?h-1:c.length-1,f=g-1>=0?g-1:j.length-1),l=c.slice(0,h),m=c.slice(h),n=j.slice(g),k=j.slice(0,g),f=[j[g],j[f],c[h]],o.push([j[g],c[h],c[e]]),o.push(f),c=l.concat(n).concat(k).concat(m)}return{shape:c,isolatedPts:o,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,i,j={};f=0;for(g=d.length;f<g;f++)i=d[f].x+":"+d[f].y,j[i]!==void 0&&console.log("Duplicate point",i),j[i]=f;f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;d<3;d++)i=h[d].x+":"+h[d].y,i=j[i],i!==void 0&&(h[d]=i)}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;d<3;d++)i=h[d].x+":"+h[d].y,i=j[i],i!==void 0&&(h[d]=i)}return c.concat(e)},isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}},THREE.TextPath=function(a,b){THREE.Path.call(this),this.parameters=b||{},this.set(a)},THREE.TextPath.prototype.set=function(a,b){b=b||this.parameters,this.text=a;var c=b.curveSegments!==void 0?b.curveSegments:4,d=b.font!==void 0?b.font:"helvetiker",e=b.weight!==void 0?b.weight:"normal",f=b.style!==void 0?b.style:"normal";THREE.FontUtils.size=b.size!==void 0?b.size:100,THREE.FontUtils.divisions=c,THREE.FontUtils.face=d,THREE.FontUtils.weight=e,THREE.FontUtils.style=f},THREE.TextPath.prototype.toShapes=function(){for(var a=THREE.FontUtils.drawText(this.text).paths,b=[],c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,a[c].toShapes());return b},THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){a.indexOf(b)===-1&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b),b!==-1&&a.splice(b,1)},add:function(a){b[a.name]!==void 0&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting."),b[a.name]=a;if(a.initialized!==!0){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++){a.hierarchy[c].keys[d].time<0&&(a.hierarchy[c].keys[d].time=0);if(a.hierarchy[c].keys[d].rot!==void 0&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var e=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(e[0],e[1],e[2],e[3])}}if(a.hierarchy[c].keys.length&&a.hierarchy[c].keys[0].morphTargets!==void 0){e={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var f=0;f<a.hierarchy[c].keys[d].morphTargets.length;f++){var g=a.hierarchy[c].keys[d].morphTargets[f];e[g]=-1}a.hierarchy[c].usedMorphTargets=e;for(d=0;d<a.hierarchy[c].keys.length;d++){var h={};for(g in e){for(f=0;f<a.hierarchy[c].keys[d].morphTargets.length;f++)if(a.hierarchy[c].keys[d].morphTargets[f]===g){h[g]=a.hierarchy[c].keys[d].morphTargetsInfluences[f];break}f===a.hierarchy[c].keys[d].morphTargets.length&&(h[g]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=h}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=d}d=parseInt(a.length*a.fps,10),a.JIT={},a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if(typeof a=="string")return b[a]?b[a]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+a),null)},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};return c.LINEAR=0,c.CATMULLROM=1,c.CATMULLROM_FORWARD=2,c}(),THREE.Animation=function(a,b,c,d){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=c!==void 0?c:THREE.AnimationHandler.LINEAR,this.JITCompile=d!==void 0?d:!0,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0,this.loop=a!==void 0?a:!0,this.currentTime=b!==void 0?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0),e.matrixAutoUpdate=!0,e.animationCache===void 0&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey,f.pos=this.data.hierarchy[c].keys[0],f.rot=this.data.hierarchy[c].keys[0],f.scl=this.data.hierarchy[c].keys[0],e.pos=this.getNextKeyWith("pos",c,1),e.rot=this.getNextKeyWith("rot",c,1),e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.hierarchy.length;a++)this.hierarchy[a].animationCache!==void 0&&(this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix=this.hierarchy[a].animationCache.originalMatrix:this.hierarchy[a].matrix=this.hierarchy[a].animationCache.originalMatrix,delete this.hierarchy[a].animationCache)},THREE.Animation.prototype.update=function(a){if(this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,i,j,k=this.data.JIT.hierarchy,l,m;m=this.currentTime=this.currentTime+a*this.timeScale,l=this.currentTime=this.currentTime%this.data.length,j=parseInt(Math.min(l*this.data.fps,this.data.length*this.data.fps),10);for(var n=0,o=this.hierarchy.length;n<o;n++){a=this.hierarchy[n],i=a.animationCache;if(this.JITCompile&&k[n][j]!==void 0)a instanceof THREE.Bone?(a.skinMatrix=k[n][j],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!1):(a.matrix=k[n][j],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!0);else{this.JITCompile&&(a instanceof THREE.Bone?a.skinMatrix=a.animationCache.originalMatrix:a.matrix=a.animationCache.originalMatrix);for(var p=0;p<3;p++){c=b[p],g=i.prevKey[c],h=i.nextKey[c];if(h.time<=m){if(l<m){if(!this.loop){this.stop();return}g=this.data.hierarchy[n].keys[0];for(h=this.getNextKeyWith(c,n,1);h.time<l;)g=h,h=this.getNextKeyWith(c,n,h.index+1)}else do g=h,h=this.getNextKeyWith(c,n,h.index+1);while(h.time<l);i.prevKey[c]=g,i.nextKey[c]=h}a.matrixAutoUpdate=!0,a.matrixWorldNeedsUpdate=!0,d=(l-g.time)/(h.time-g.time),e=g[c],f=h[c];if(d<0||d>1)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+n),d=d<0?0:1;if(c==="pos"){c=a.position;if(this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d;else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",n,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",n,h.index+1).pos,d=d*.33+.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,d*1.01),this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else c==="rot"?THREE.Quaternion.slerp(e,f,a.quaternion,d):c==="scl"&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}}if(this.JITCompile&&k[0][j]===void 0){this.hierarchy[0].updateMatrixWorld(!0);for(n=0;n<this.hierarchy.length;n++)k[n][j]=this.hierarchy[n]instanceof THREE.Bone?this.hierarchy[n].skinMatrix.clone():this.hierarchy[n].matrix.clone()}}},THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,i,j;return e=(a.length-1)*b,f=Math.floor(e),e-=f,c[0]=f===0?f:f-1,c[1]=f,c[2]=f>a.length-2?f:f+1,c[3]=f>a.length-3?f:f+2,f=a[c[0]],h=a[c[1]],i=a[c[2]],j=a[c[3]],c=e*e,g=e*c,d[0]=this.interpolate(f[0],h[0],i[0],j[0],e,c,g),d[1]=this.interpolate(f[1],h[1],i[1],j[1],e,c,g),d[2]=this.interpolate(f[2],h[2],i[2],j[2],e,c,g),d},THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){return a=(c-a)*.5,d=(d-b)*.5,(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b},THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[d.length-1]},THREE.KeyFrameAnimation=function(a,b,c){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0,this.JITCompile=c!==void 0?c:!0,a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1,this.data.hierarchy[a].node.updateMatrix(),d.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0,this.loop=a!==void 0?a:!0,this.currentTime=b!==void 0?b:0,this.startTimeMs=b,this.startTime=1e7,this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,f.animationCache===void 0&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:e.matrix),e=this.data.hierarchy[c].keys,e.length&&(f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(c.animationCache!==void 0){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d),delete c.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,i;h=this.currentTime=this.currentTime+a*this.timeScale,g=this.currentTime=this.currentTime%this.data.length,g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g),e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((i=g<h)&&!this.loop){for(var a=0,j=this.hierarchy.length;a<j;a++){var k=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=k.length-1,e=this.hierarchy[a];if(k.length){for(k=0;k<f.length;k++)g=f[k],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix(),e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(j=this.hierarchy.length;a<j;a++){d=this.hierarchy[a],b=this.data.hierarchy[a];var k=b.keys,l=b.animationCache;if(this.JITCompile&&f[a][e]!==void 0)d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(k.length){this.JITCompile&&l&&(d instanceof THREE.Bone?d.skinMatrix=l.originalMatrix:d.matrix=l.originalMatrix),b=l.prevKey,c=l.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=k[0];for(c=k[1];c.time<g;)b=c,c=k[b.index+1]}else if(!i)for(var m=k.length-1;c.time<g&&c.index!==m;)b=c,c=k[b.index+1];l.prevKey=b,l.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix(),d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&f[0][e]===void 0){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)f[a][e]=this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=c>=0?c:c+b.length;c>=0;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]},THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0),d.lookAt(new THREE.Vector3(1,0,0)),this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0),e.lookAt(new THREE.Vector3(-1,0,0)),this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1),f.lookAt(new THREE.Vector3(0,1,0)),this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1),g.lookAt(new THREE.Vector3(0,-1,0)),this.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,1)),this.add(h);var i=new THREE.PerspectiveCamera(90,1,a,b);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(0,0,-1)),this.add(i),this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(a,b){var c=this.renderTarget,k=c.generateMipmaps;c.generateMipmaps=!1,c.activeCubeFace=0,a.render(b,d,c),c.activeCubeFace=1,a.render(b,e,c),c.activeCubeFace=2,a.render(b,f,c),c.activeCubeFace=3,a.render(b,g,c),c.activeCubeFace=4,a.render(b,h,c),c.generateMipmaps=k,c.activeCubeFace=5,a.render(b,i,c)}},THREE.CubeCamera.prototype=new THREE.Object3D,THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this),this.fov=c,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2,this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g),this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=new THREE.Camera,THREE.CombinedCamera.prototype.constructor=THREE.CombinedCamera,THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPersepectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a,this.cameraO.right=a,this.cameraO.top=b,this.cameraO.bottom=-b,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPersepectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2},THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a,this.inPersepectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPersepectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(a,b){var c=2*Math.atan((b!==void 0?b:24)/(a*2))*(180/Math.PI);return this.setFov(c),c},THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a,this.inPersepectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a,this.target=new THREE.Vector3(0,0,0),this.domElement=b!==void 0?b:document,this.movementSpeed=1,this.lookSpeed=.005,this.noFly=!1,this.lookVertical=!0,this.autoForward=!1,this.activeLook=!0,this.heightSpeed=!1,this.heightCoef=1,this.heightMin=0,this.constrainVertical=!1,this.verticalMin=0,this.verticalMax=Math.PI,this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=0,this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1,this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1)),this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus(),a.preventDefault(),a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0},this.onMouseUp=function(a){a.preventDefault(),a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1},this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)},this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}},this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}},this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0,b=a*this.movementSpeed,(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor)),this.moveBackward&&this.object.translateZ(b),this.moveLeft&&this.object.translateX(-b),this.moveRight&&this.object.translateX(b),this.moveUp&&this.object.translateY(b),this.moveDown&&this.object.translateY(-b),a*=this.lookSpeed,this.activeLook||(a=0),this.lon=this.lon+this.mouseX*a,this.lookVertical&&(this.lat=this.lat-this.mouseY*a),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*Math.PI/180,this.theta=this.lon*Math.PI/180;var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta),b.y=c.y+100*Math.cos(this.phi),b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta),b=1,this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin)),this.lon=this.lon+this.mouseX*a,this.lookVertical&&(this.lat=this.lat-this.mouseY*a*b),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*Math.PI/180,this.theta=this.lon*Math.PI/180,this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax)),b=this.target,c=this.object.position,b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta),b.y=c.y+100*Math.cos(this.phi),b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta),this.object.lookAt(b)}},this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1),this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1),this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1),this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1),this.domElement.addEventListener("keydown",c(this,this.onKeyDown),!1),this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1)},THREE.PathControls=function(a,b){function c(a){return(a*=2)<1?.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function e(a,b,c,d){var e={name:c,fps:.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),i=g.length,j=0;f=i-1,b={parent:-1,keys:[]},b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]},b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<i-1;f++)j=d*h.chunks[f]/h.total,b.keys[f]={time:j,pos:g[f]};return e.hierarchy[0]=b,THREE.AnimationHandler.add(e),new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function f(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z);return e}this.object=a,this.domElement=b!==void 0?b:document,this.id="PathControls"+THREE.PathControlsIdCounter++,this.duration=1e4,this.waypoints=[],this.useConstantSpeed=!0,this.resamplingCoef=50,this.debugPath=new THREE.Object3D,this.debugDummy=new THREE.Object3D,this.animationParent=new THREE.Object3D,this.lookSpeed=.005,this.lookHorizontal=this.lookVertical=!0,this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]},this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]},this.target=new THREE.Object3D,this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0,this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));var g=Math.PI*2,h=Math.PI/180;this.update=function(a){var b;this.lookHorizontal&&(this.lon=this.lon+this.mouseX*this.lookSpeed*a),this.lookVertical&&(this.lat=this.lat-this.mouseY*this.lookSpeed*a),this.lon=Math.max(0,Math.min(360,this.lon)),this.lat=Math.max(-85,Math.min(85,this.lat)),this.phi=(90-this.lat)*h,this.theta=this.lon*h,a=this.phi%g,this.phi=a>=0?a:a+g,b=this.verticalAngleMap.srcRange,a=this.verticalAngleMap.dstRange,b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0],b=this.horizontalAngleMap.srcRange,a=this.horizontalAngleMap.dstRange,b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]),d=a[1]-a[0],this.theta=c((b-a[0])/d)*d+a[0],a=this.target.position,a.x=100*Math.sin(this.phi)*Math.cos(this.theta),a.y=100*Math.cos(this.phi),a.z=100*Math.sin(this.phi)*Math.sin(this.theta),this.object.lookAt(this.target.position)},this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)},this.init=function(){this.spline=new THREE.Spline,this.spline.initFromArray(this.waypoints),this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a),a=new THREE.Mesh(g,b),a.position.set(0,10,0),this.animation=e(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.object),this.animationParent.add(this.target),this.animationParent.add(a)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=this.debugPath,b=this.spline,g=f(b,10),c=f(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1),a.add(g),c.scale.set(1,1,1),a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),i=0;i<b.points.length;i++)c=new THREE.Mesh(g,h),c.position.copy(b.points[i]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),!1)}},THREE.PathControlsIdCounter=0,THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a,this.domElement=b!==void 0?b:document,b&&this.domElement.setAttribute("tabindex",-1),this.movementSpeed=1,this.rollSpeed=.005,this.autoForward=this.dragToLook=!1,this.object.useQuaternion=!0,this.tmpQuaternion=new THREE.Quaternion,this.mouseStatus=0,this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this.moveVector=new THREE.Vector3(0,0,0),this.rotationVector=new THREE.Vector3(0,0,0),this.handleEvent=function(a){typeof this[a.type]=="function"&&this[a.type](a)},this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector(),this.updateRotationVector()}},this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector(),this.updateRotationVector()},this.mousedown=function(a){this.domElement!==document&&this.domElement.focus(),a.preventDefault(),a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=!0;break;case 2:this.object.moveBackward=!0}},this.mousemove=function(a){if(!this.dragToLook||this.mouseStatus>0){var b=this.getContainerDimensions(),c=b.size[0]/2,d=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c,this.moveState.pitchDown=(a.pageY-b.offset[1]-d)/d,this.updateRotationVector()}},this.mouseup=function(a){a.preventDefault(),a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()},this.update=function(a){var b=a*this.movementSpeed,a=a*this.rollSpeed;this.object.translateX(this.moveVector.x*b),this.object.translateY(this.moveVector.y*b),this.object.translateZ(this.moveVector.z*b),this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize(),this.object.quaternion.multiplySelf(this.tmpQuaternion),this.object.matrix.setPosition(this.object.position),this.object.matrix.setRotationFromQuaternion(this.object.quaternion),this.object.matrixWorldNeedsUpdate=!0},this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right,this.moveVector.y=-this.moveState.down+this.moveState.up,this.moveVector.z=-a+this.moveState.back},this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp,this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft,this.rotationVector.z=-this.moveState.rollRight+this.moveState.rollLeft},this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}},this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1),this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1),this.domElement.addEventListener("mouseup",c(this,this.mouseup),!1),this.domElement.addEventListener("keydown",c(this,this.keydown),!1),this.domElement.addEventListener("keyup",c(this,this.keyup),!1),this.updateMovementVector(),this.updateRotationVector()},THREE.RollControls=function(a,b){this.object=a,this.domElement=b!==void 0?b:document,this.mouseLook=!0,this.autoForward=!1,this.rollSpeed=this.movementSpeed=this.lookSpeed=1,this.constrainVertical=[-0.9,.9],this.object.matrixAutoUpdate=!1,this.forward=new THREE.Vector3(0,0,1),this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Matrix4,g=!1,h=1,i=0,j=0,k=0,l=0,m=0,n=window.innerWidth/2,o=window.innerHeight/2;this.update=function(a){if(this.mouseLook){var b=a*this.lookSpeed;this.rotateHorizontally(b*l),this.rotateVertically(b*m)}b=a*this.movementSpeed,this.object.translateZ(-b*(i>0||this.autoForward&&!(i<0)?1:i)),this.object.translateX(b*j),this.object.translateY(b*k),g&&(this.roll=this.roll+this.rollSpeed*a*h),this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize()),e.copy(this.forward),d.set(0,1,0),c.cross(d,e).normalize(),d.cross(e,c).normalize(),this.object.matrix.elements[0]=c.x,this.object.matrix.elements[4]=d.x,this.object.matrix.elements[8]=e.x,this.object.matrix.elements[1]=c.y,this.object.matrix.elements[5]=d.y,this.object.matrix.elements[9]=e.y,this.object.matrix.elements[2]=c.z,this.object.matrix.elements[6]=d.z,this.object.matrix.elements[10]=e.z,f.identity(),f.elements[0]=Math.cos(this.roll),f.elements[4]=-Math.sin(this.roll),f.elements[1]=Math.sin(this.roll),f.elements[5]=Math.cos(this.roll),this.object.matrix.multiplySelf(f),this.object.matrixWorldNeedsUpdate=!0,this.object.matrix.elements[12]=this.object.position.x,this.object.matrix.elements[13]=this.object.position.y,this.object.matrix.elements[14]=this.object.position.z},this.translateX=function(a){this.object.position.x=this.object.position.x+this.object.matrix.elements[0]*a,this.object.position.y=this.object.position.y+this.object.matrix.elements[1]*a,this.object.position.z=this.object.position.z+this.object.matrix.elements[2]*a},this.translateY=function(a){this.object.position.x=this.object.position.x+this.object.matrix.elements[4]*a,this.object.position.y=this.object.position.y+this.object.matrix.elements[5]*a,this.object.position.z=this.object.position.z+this.object.matrix.elements[6]*a},this.translateZ=function(a){this.object.position.x=this.object.position.x-this.object.matrix.elements[8]*a,this.object.position.y=this.object.position.y-this.object.matrix.elements[9]*a,this.object.position.z=this.object.position.z-this.object.matrix.elements[10]*a},this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]),c.multiplyScalar(a),this.forward.subSelf(c),this.forward.normalize()},this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]),d.multiplyScalar(a),this.forward.addSelf(d),this.forward.normalize()},this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1),this.domElement.addEventListener("mousemove",function(a){l=(a.clientX-n)/window.innerWidth,m=(a.clientY-o)/window.innerHeight},!1),this.domElement.addEventListener("mousedown",function(a){a.preventDefault(),a.stopPropagation();switch(a.button){case 0:i=1;break;case 2:i=-1}},!1),this.domElement.addEventListener("mouseup",function(a){a.preventDefault(),a.stopPropagation();switch(a.button){case 0:i=0;break;case 2:i=0}},!1),this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:i=1;break;case 37:case 65:j=-1;break;case 40:case 83:i=-1;break;case 39:case 68:j=1;break;case 81:g=!0,h=1;break;case 69:g=!0,h=-1;break;case 82:k=1;break;case 70:k=-1}},!1),this.domElement.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:i=0;break;case 37:case 65:j=0;break;case 40:case 83:i=0;break;case 39:case 68:j=0;break;case 81:g=!1;break;case 69:g=!1;break;case 82:k=0;break;case 70:k=0}},!1)},THREE.TrackballControls=function(a,b){THREE.EventTarget.call(this);var c=this;this.object=a,this.domElement=b!==void 0?b:document,this.enabled=!0,this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0},this.radius=(this.screen.width+this.screen.height)/4,this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=Infinity,this.keys=[65,83,68],this.target=new THREE.Vector3;var d=new THREE.Vector3,e=!1,f=-1,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector2,k=new THREE.Vector2,l=new THREE.Vector2,m=new THREE.Vector2,n={type:"change"};this.handleEvent=function(a){typeof this[a.type]=="function"&&this[a.type](a)},this.getMouseOnScreen=function(a,b){return new THREE.Vector2((a-c.screen.offsetLeft)/c.radius*.5,(b-c.screen.offsetTop)/c.radius*.5)},this.getMouseProjectionOnBall=function(a,b){var d=new THREE.Vector3((a-c.screen.width*.5-c.screen.offsetLeft)/c.radius,(c.screen.height*.5+c.screen.offsetTop-b)/c.radius,0),e=d.length();return e>1?d.normalize():d.z=Math.sqrt(1-e*e),g.copy(c.object.position).subSelf(c.target),e=c.object.up.clone().setLength(d.y),e.addSelf(c.object.up.clone().crossSelf(g).setLength(d.x)),e.addSelf(g.setLength(d.z)),e},this.rotateCamera=function(){var a=Math.acos(h.dot(i)/h.length()/i.length());if(a){var b=(new THREE.Vector3).cross(h,i).normalize(),d=new THREE.Quaternion,a=a*c.rotateSpeed;d.setFromAxisAngle(b,-a),d.multiplyVector3(g),d.multiplyVector3(c.object.up),d.multiplyVector3(i),c.staticMoving?h=i:(d.setFromAxisAngle(b,a*(c.dynamicDampingFactor-1)),d.multiplyVector3(h))}},this.zoomCamera=function(){var a=1+(k.y-j.y)*c.zoomSpeed;a!==1&&a>0&&(g.multiplyScalar(a),c.staticMoving?j=k:j.y=j.y+(k.y-j.y)*this.dynamicDampingFactor)},this.panCamera=function(){var a=m.clone().subSelf(l);if(a.lengthSq()){a.multiplyScalar(g.length()*c.panSpeed);var b=g.clone().crossSelf(c.object.up).setLength(a.x);b.addSelf(c.object.up.clone().setLength(a.y)),c.object.position.addSelf(b),c.target.addSelf(b),c.staticMoving?l=m:l.addSelf(a.sub(m,l).multiplyScalar(c.dynamicDampingFactor))}},this.checkDistances=function(){if(!c.noZoom||!c.noPan)c.object.position.lengthSq()>c.maxDistance*c.maxDistance&&c.object.position.setLength(c.maxDistance),g.lengthSq()<c.minDistance*c.minDistance&&c.object.position.add(c.target,g.setLength(c.minDistance))},this.update=function(){g.copy(c.object.position).subSelf(c.target),c.noRotate||c.rotateCamera(),c.noZoom||c.zoomCamera(),c.noPan||c.panCamera(),c.object.position.add(c.target,g),c.checkDistances(),c.object.lookAt(c.target),d.distanceTo(c.object.position)>0&&(c.dispatchEvent(n),d.copy(c.object.position))},this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1),this.domElement.addEventListener("mousemove",function(a){c.enabled&&(e&&(h=i=c.getMouseProjectionOnBall(a.clientX,a.clientY),j=k=c.getMouseOnScreen(a.clientX,a.clientY),l=m=c.getMouseOnScreen(a.clientX,a.clientY),e=!1),f!==-1&&(f===0&&!c.noRotate?i=c.getMouseProjectionOnBall(a.clientX,a.clientY):f===1&&!c.noZoom?k=c.getMouseOnScreen(a.clientX,a.clientY):f===2&&!c.noPan&&(m=c.getMouseOnScreen(a.clientX,a.clientY))))},!1),this.domElement.addEventListener("mousedown",function(a){c.enabled&&(a.preventDefault(),a.stopPropagation(),f===-1&&(f=a.button,f===0&&!c.noRotate?h=i=c.getMouseProjectionOnBall(a.clientX,a.clientY):f===1&&!c.noZoom?j=k=c.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(l=m=c.getMouseOnScreen(a.clientX,a.clientY))))},!1),this.domElement.addEventListener("mouseup",function(a){c.enabled&&(a.preventDefault(),a.stopPropagation(),f=-1)},!1),window.addEventListener("keydown",function(a){c.enabled&&f===-1&&(a.keyCode===c.keys[0]&&!c.noRotate?f=0:a.keyCode===c.keys[1]&&!c.noZoom?f=1:a.keyCode===c.keys[2]&&!c.noPan&&(f=2),f!==-1&&(e=!0))},!1),window.addEventListener("keyup",function(){c.enabled&&f!==-1&&(f=-1)},!1)},THREE.CubeGeometry=function(a,b,c,d,e,f,g,h){function i(a,b,c,g,h,i,k,l){var m,n=d||1,o=e||1,p=h/2,q=i/2,r=j.vertices.length;if(a==="x"&&b==="y"||a==="y"&&b==="x")m="z";else if(a==="x"&&b==="z"||a==="z"&&b==="x")m="y",o=f||1;else if(a==="z"&&b==="y"||a==="y"&&b==="z")m="x",n=f||1;var s=n+1,t=o+1,u=h/n,v=i/o,w=new THREE.Vector3;w[m]=k>0?1:-1;for(h=0;h<t;h++)for(i=0;i<s;i++){var x=new THREE.Vector3;x[a]=(i*u-p)*c,x[b]=(h*v-q)*g,x[m]=k,j.vertices.push(x)}for(h=0;h<o;h++)for(i=0;i<n;i++)a=new THREE.Face4(i+s*h+r,i+s*(h+1)+r,i+1+s*(h+1)+r,i+1+s*h+r),a.normal.copy(w),a.vertexNormals.push(w.clone(),w.clone(),w.clone(),w.clone()),a.materialIndex=l,j.faces.push(a),j.faceVertexUvs[0].push([new THREE.UV(i/n,h/o),new THREE.UV(i/n,(h+1)/o),new THREE.UV((i+1)/n,(h+1)/o),new THREE.UV((i+1)/n,h/o)])}THREE.Geometry.call(this);var j=this,k=a/2,l=b/2,m=c/2,n,o,p,q,r,s;if(g!==void 0){if(g instanceof Array)this.materials=g;else{this.materials=[];for(n=0;n<6;n++)this.materials.push(g)}n=0,q=1,o=2,r=3,p=4,s=5}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(h!=void 0)for(var t in h)this.sides[t]!==void 0&&(this.sides[t]=h[t]);this.sides.px&&i("z","y",-1,-1,c,b,k,n),this.sides.nx&&i("z","y",1,-1,c,b,-k,q),this.sides.py&&i("x","z",1,1,a,c,l,o),this.sides.ny&&i("x","z",1,-1,a,c,-l,r),this.sides.pz&&i("x","y",1,-1,a,b,m,p),this.sides.nz&&i("x","y",-1,-1,a,b,-m,s),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=new THREE.Geometry,THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry,THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);var a=a!==void 0?a:20,b=b!==void 0?b:20,c=c!==void 0?c:100,g=c/2,d=d||8,e=e||1,h,i,j=[],k=[];for(i=0;i<=e;i++){var l=[],m=[],n=i/e,o=n*(b-a)+a;for(h=0;h<=d;h++){var p=h/d,q=new THREE.Vector3;q.x=o*Math.sin(p*Math.PI*2),q.y=-n*c+g,q.z=o*Math.cos(p*Math.PI*2),this.vertices.push(q),l.push(this.vertices.length-1),m.push(new THREE.UV(p,n))}j.push(l),k.push(m)}c=(b-a)/c;for(h=0;h<d;h++){a!==0?(l=this.vertices[j[0][h]].clone(),m=this.vertices[j[0][h+1]].clone()):(l=this.vertices[j[1][h]].clone(),m=this.vertices[j[1][h+1]].clone()),l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*c).normalize(),m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();for(i=0;i<e;i++){var n=j[i][h],o=j[i+1][h],p=j[i+1][h+1],q=j[i][h+1],r=l.clone(),s=l.clone(),t=m.clone(),u=m.clone(),v=k[i][h].clone(),w=k[i+1][h].clone(),x=k[i+1][h+1].clone(),y=k[i][h+1].clone();this.faces.push(new THREE.Face4(n,o,p,q,[r,s,t,u])),this.faceVertexUvs[0].push([v,w,x,y])}}if(!f&&a>0){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++)n=j[0][h],o=j[0][h+1],p=this.vertices.length-1,r=new THREE.Vector3(0,1,0),s=new THREE.Vector3(0,1,0),t=new THREE.Vector3(0,1,0),v=k[0][h].clone(),w=k[0][h+1].clone(),x=new THREE.UV(w.u,0),this.faces.push(new THREE.Face3(n,o,p,[r,s,t])),this.faceVertexUvs[0].push([v,w,x])}if(!f&&b>0){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)n=j[i][h+1],o=j[i][h],p=this.vertices.length-1,r=new THREE.Vector3(0,-1,0),s=new THREE.Vector3(0,-1,0),t=new THREE.Vector3(0,-1,0),v=k[i][h+1].clone(),w=k[i][h].clone(),x=new THREE.UV(w.u,1),this.faces.push(new THREE.Face3(n,o,p,[r,s,t])),this.faceVertexUvs[0].push([v,w,x])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=new THREE.Geometry,THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.ExtrudeGeometry=function(a,b){typeof a!="undefined"&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=new THREE.Geometry,THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)},THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){return b||console.log("die"),b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;return d.set(a.x-b.x,a.y-b.y),e.set(a.x-c.x,a.y-c.y),d=d.normalize(),e=e.normalize(),f.set(-d.y,d.x),g.set(e.y,-e.x),h.copy(a).addSelf(f),i.copy(a).addSelf(g),h.equals(i)?g.clone():(h.copy(b).addSelf(f),i.copy(c).addSelf(g),f=d.dot(g),g=i.subSelf(h).dot(g),f===0&&(console.log("Either infinite or no solutions!"),g===0?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),g/=f,g<0?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=Math.PI*2),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).addSelf(h).subSelf(a).clone())}function e(c,d){var e,f;for(N=c.length;--N>=0;){e=N,f=N-1,f<0&&(f=c.length-1);for(var g=0,h=m+k*2,g=0;g<h;g++){var i=K*g,j=K*(g+1),l=d+e+i,i=d+f+i,n=d+f+j,j=d+e+j,o=c,p=g,q=h,l=l+B,i=i+B,n=n+B,j=j+B;A.faces.push(new THREE.Face4(l,i,n,j,null,null,s)),l=R.generateSideWallUV(A,a,o,b,l,i,n,j,p,q),A.faceVertexUvs[0].push(l)}}}function f(a,b,c){A.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=B,d+=B,e+=B,A.faces.push(new THREE.Face3(c,d,e,null,null,r)),c=f?R.generateBottomUV(A,a,b,c,d,e):R.generateTopUV(A,a,b,c,d,e),A.faceVertexUvs[0].push(c)}var h=b.amount!==void 0?b.amount:100,i=b.bevelThickness!==void 0?b.bevelThickness:6,j=b.bevelSize!==void 0?b.bevelSize:i-2,k=b.bevelSegments!==void 0?b.bevelSegments:3,l=b.bevelEnabled!==void 0?b.bevelEnabled:!0,m=b.steps!==void 0?b.steps:1,n=b.bendPath,o=b.extrudePath,p,q=!1,r=b.material,s=b.extrudeMaterial,t,u,v,w;o&&(p=o.getSpacedPoints(m),q=!0,l=!1,t=new THREE.TubeGeometry.FrenetFrames(o,m,!1),u=new THREE.Vector3,v=new THREE.Vector3,w=new THREE.Vector3),l||(j=i=k=0);var x,y,z,A=this,B=this.vertices.length;n&&a.addWrapPath(n);var o=a.extractPoints(),n=o.shape,C=o.holes;if(o=!THREE.Shape.Utils.isClockWise(n)){n=n.reverse(),y=0;for(z=C.length;y<z;y++)x=C[y],THREE.Shape.Utils.isClockWise(x)&&(C[y]=x.reverse());o=!1}var D=THREE.Shape.Utils.triangulateShape(n,C),E=n;y=0;for(z=C.length;y<z;y++)x=C[y],n=n.concat(x);var F,G,H,I,J,K=n.length,L,M=D.length,o=[],N=0;H=E.length,F=H-1;for(G=N+1;N<H;N++,F++,G++)F===H&&(F=0),G===H&&(G=0),o[N]=d(E[N],E[F],E[G]);var O=[],P,Q=o.concat();y=0;for(z=C.length;y<z;y++){x=C[y],P=[],N=0,H=x.length,F=H-1;for(G=N+1;N<H;N++,F++,G++)F===H&&(F=0),G===H&&(G=0),P[N]=d(x[N],x[F],x[G]);O.push(P),Q=Q.concat(P)}for(F=0;F<k;F++){H=F/k,I=i*(1-H),G=j*Math.sin(H*Math.PI/2),N=0;for(H=E.length;N<H;N++)J=c(E[N],o[N],G),f(J.x,J.y,-I);y=0;for(z=C.length;y<z;y++){x=C[y],P=O[y],N=0;for(H=x.length;N<H;N++)J=c(x[N],P[N],G),f(J.x,J.y,-I)}}G=j;for(N=0;N<K;N++)J=l?c(n[N],Q[N],G):n[N],q?(v.copy(t.normals[0]).multiplyScalar(J.x),u.copy(t.binormals[0]).multiplyScalar(J.y),w.copy(p[0]).addSelf(v).addSelf(u),f(w.x,w.y,w.z)):f(J.x,J.y,0);for(H=1;H<=m;H++)for(N=0;N<K;N++)J=l?c(n[N],Q[N],G):n[N],q?(v.copy(t.normals[H]).multiplyScalar(J.x),u.copy(t.binormals[H]).multiplyScalar(J.y),w.copy(p[H]).addSelf(v).addSelf(u),f(w.x,w.y,w.z)):f(J.x,J.y,h/m*H);for(F=k-1;F>=0;F--){H=F/k,I=i*(1-H),G=j*Math.sin(H*Math.PI/2),N=0;for(H=E.length;N<H;N++)J=c(E[N],o[N],G),f(J.x,J.y,h+I);y=0;for(z=C.length;y<z;y++){x=C[y],P=O[y],N=0;for(H=x.length;N<H;N++)J=c(x[N],P[N],G),q?f(J.x,J.y+p[m-1].y,p[m-1].x+I):f(J.x,J.y,h+I)}}var R=THREE.ExtrudeGeometry.WorldUVGenerator;(function(){if(l){var a;a=K*0;for(N=0;N<M;N++)L=D[N],g(L[2]+a,L[1]+a,L[0]+a,!0);a=m+k*2,a=K*a;for(N=0;N<M;N++)L=D[N],g(L[0]+a,L[1]+a,L[2]+a,!1)}else{for(N=0;N<M;N++)L=D[N],g(L[2],L[1],L[0],!0);for(N=0;N<M;N++)L=D[N],g(L[0]+K*m,L[1]+K*m,L[2]+K*m,!1)}})(),function(){var a=0;e(E,a),a+=E.length,y=0;for(z=C.length;y<z;y++)x=C[y],e(x,a),a+=x.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){return b=a.vertices[e].x,e=a.vertices[e].y,c=a.vertices[f].x,f=a.vertices[f].y,[new THREE.UV(a.vertices[d].x,1-a.vertices[d].y),new THREE.UV(b,1-e),new THREE.UV(c,1-f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){var b=a.vertices[e].x,c=a.vertices[e].y,e=a.vertices[e].z,d=a.vertices[f].x,i=a.vertices[f].y,f=a.vertices[f].z,j=a.vertices[g].x,k=a.vertices[g].y,g=a.vertices[g].z,l=a.vertices[h].x,m=a.vertices[h].y,a=a.vertices[h].z;return Math.abs(c-i)<.01?[new THREE.UV(b,e),new THREE.UV(d,f),new THREE.UV(j,g),new THREE.UV(l,a)]:[new THREE.UV(c,e),new THREE.UV(i,f),new THREE.UV(k,g),new THREE.UV(m,a)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);for(var b=b||12,c=c||2*Math.PI,d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++)d[f]=a[f].clone(),this.vertices.push(d[f]);for(var g=b+1,c=0;c<g;c++)for(f=0;f<d.length;f++)d[f]=e.multiplyVector3(d[f].clone()),this.vertices.push(d[f]);for(c=0;c<b;c++){d=0;for(e=a.length;d<e-1;d++)this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=new THREE.Geometry,THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var e=a/2,f=b/2,c=c||1,d=d||1,g=c+1,h=d+1,i=a/c,j=b/d,k=new THREE.Vector3(0,1,0),a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*i-e,0,a*j-f));for(a=0;a<d;a++)for(b=0;b<c;b++)e=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),e.normal.copy(k),e.vertexNormals.push(k.clone(),k.clone(),k.clone(),k.clone()),this.faces.push(e),this.faceVertexUvs[0].push([new THREE.UV(b/c,a/d),new THREE.UV(b/c,(a+1)/d),new THREE.UV((b+1)/c,(a+1)/d),new THREE.UV((b+1)/c,a/d)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=new THREE.Geometry,THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);var a=a||50,d=d!==void 0?d:0,e=e!==void 0?e:Math.PI*2,f=f!==void 0?f:0,g=g!==void 0?g:Math.PI,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),h,i,j=[],k=[];for(i=0;i<=c;i++){var l=[],m=[];for(h=0;h<=b;h++){var n=h/b,o=i/c,p=new THREE.Vector3;p.x=-a*Math.cos(d+n*e)*Math.sin(f+o*g),p.y=a*Math.cos(f+o*g),p.z=a*Math.sin(d+n*e)*Math.sin(f+o*g),this.vertices.push(p),l.push(this.vertices.length-1),m.push(new THREE.UV(n,o))}j.push(l),k.push(m)}for(i=0;i<c;i++)for(h=0;h<b;h++){var d=j[i][h+1],e=j[i][h],f=j[i+1][h],g=j[i+1][h+1],l=this.vertices[d].clone().normalize(),m=this.vertices[e].clone().normalize(),n=this.vertices[f].clone().normalize(),o=this.vertices[g].clone().normalize(),p=k[i][h+1].clone(),q=k[i][h].clone(),r=k[i+1][h].clone(),s=k[i+1][h+1].clone();Math.abs(this.vertices[d].y)==a?(this.faces.push(new THREE.Face3(d,f,g,[l,n,o])),this.faceVertexUvs[0].push([p,r,s])):Math.abs(this.vertices[f].y)==a?(this.faces.push(new THREE.Face3(d,e,f,[l,m,n])),this.faceVertexUvs[0].push([p,q,r])):(this.faces.push(new THREE.Face4(d,e,f,g,[l,m,n,o])),this.faceVertexUvs[0].push([p,q,r,s]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere={radius:a}},THREE.SphereGeometry.prototype=new THREE.Geometry,THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.TextGeometry=function(a,b){var c=(new THREE.TextPath(a,b)).toShapes();b.amount=b.height!==void 0?b.height:50,b.bevelThickness===void 0&&(b.bevelThickness=10),b.bevelSize===void 0&&(b.bevelSize=8),b.bevelEnabled===void 0&&(b.bevelEnabled=!1);if(b.bend){var d=c[c.length-1].getBoundingBox().maxX;b.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(d/2,120),new THREE.Vector2(d,0))}THREE.ExtrudeGeometry.call(this,c,b)},THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry,THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();return this.faces[b]=this.faces[b]||{},this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{},this.faces[b][a.cssFontWeight][a.cssFontStyle]=a,this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=0,e=(""+a).split(""),f=e.length,g=[],a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,i,j,k,l,m,n,o,p,q,r=b.glyphs[a]||b.glyphs["?"];if(r){if(r.o){b=r._cachedOutline||(r._cachedOutline=r.o.split(" ")),j=b.length;for(a=0;a<j;){i=b[a++];switch(i){case"m":i=b[a++]*c+d,k=b[a++]*c,f.push(new THREE.Vector2(i,k)),e.moveTo(i,k);break;case"l":i=b[a++]*c+d,k=b[a++]*c,f.push(new THREE.Vector2(i,k)),e.lineTo(i,k);break;case"q":i=b[a++]*c+d,k=b[a++]*c,n=b[a++]*c+d,o=b[a++]*c,e.quadraticCurveTo(n,o,i,k);if(g=f[f.length-1]){l=g.x,m=g.y,g=1;for(h=this.divisions;g<=h;g++){var s=g/h,t=THREE.Shape.Utils.b2(s,l,n,i),s=THREE.Shape.Utils.b2(s,m,o,k);f.push(new THREE.Vector2(t,s))}}break;case"b":i=b[a++]*c+d,k=b[a++]*c,n=b[a++]*c+d,o=b[a++]*-c,p=b[a++]*c+d,q=b[a++]*-c,e.bezierCurveTo(i,k,n,o,p,q);if(g=f[f.length-1]){l=g.x,m=g.y,g=1;for(h=this.divisions;g<=h;g++)s=g/h,t=THREE.Shape.Utils.b3(s,l,n,p,i),s=THREE.Shape.Utils.b3(s,m,o,q,k),f.push(new THREE.Vector2(t,s))}}}}return{offset:r.ha*c,points:f,path:e}}}},function(a){var b=function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return c*.5};return a.Triangulate=function(a,c){var d=a.length;if(d<3)return null;var e=[],f=[],g=[],h,i,j;if(b(a)>0)for(i=0;i<d;i++)f[i]=i;else for(i=0;i<d;i++)f[i]=d-1-i;var k=2*d;for(i=d-1;d>2;){if(k--<=0){console.log("Warning, unable to triangulate polygon!");break}h=i,d<=h&&(h=0),i=h+1,d<=i&&(i=0),j=i+1,d<=j&&(j=0);var l;a:{l=a;var m=h,n=i,o=j,p=d,q=f,r=void 0,s=void 0,t=void 0,u=void 0,v=void 0,w=void 0,x=void 0,y=void 0,z=void 0,s=l[q[m]].x,t=l[q[m]].y,u=l[q[n]].x,v=l[q[n]].y,w=l[q[o]].x,x=l[q[o]].y;if(1e-10>(u-s)*(x-t)-(v-t)*(w-s))l=!1;else{for(r=0;r<p;r++)if(r!=m&&r!=n&&r!=o){var y=l[q[r]].x,z=l[q[r]].y,A=void 0,B=void 0,C=void 0,D=void 0,E=void 0,F=void 0,G=void 0,H=void 0,I=void 0,J=void 0,K=void 0,L=void 0,A=C=E=void 0,A=w-u,B=x-v,C=s-w,D=t-x,E=u-s,F=v-t,G=y-s,H=z-t,I=y-u,J=z-v,K=y-w,L=z-x,A=A*J-B*I,E=E*H-F*G,C=C*L-D*K;if(A>=0&&C>=0&&E>=0){l=!1;break a}}l=!0}}if(l){e.push([a[f[h]],a[f[i]],a[f[j]]]),g.push([f[h],f[i],f[j]]),h=i;for(j=i+1;j<d;h++,j++)f[h]=f[j];d--,k=2*d}}return c?g:e},a.Triangulate.area=b,a}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this),this.radius=a||100,this.tube=b||40,this.segmentsR=c||8,this.segmentsT=d||6,this.arc=e||Math.PI*2,e=new THREE.Vector3,a=[],b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var f=d/this.segmentsT*this.arc,g=c/this.segmentsR*Math.PI*2;e.x=this.radius*Math.cos(f),e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f),h.y=(this.radius+this.tube*Math.cos(g))*Math.sin(f),h.z=this.tube*Math.sin(g),this.vertices.push(h),a.push(new THREE.UV(d/this.segmentsT,1-c/this.segmentsR)),b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){var e=(this.segmentsT+1)*c+d-1,f=(this.segmentsT+1)*(c-1)+d-1,g=(this.segmentsT+1)*(c-1)+d,h=(this.segmentsT+1)*c+d,i=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);i.normal.addSelf(b[e]),i.normal.addSelf(b[f]),i.normal.addSelf(b[g]),i.normal.addSelf(b[h]),i.normal.normalize(),this.faces.push(i),this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=new THREE.Geometry,THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);return Math.cos(b),b=Math.sin(a),a=c/d*a,c=Math.cos(a),g=e*(2+c)*.5*g,b=e*(2+c)*b*.5,e=f*e*Math.sin(a)*.5,new THREE.Vector3(g,b,e)}THREE.Geometry.call(this),this.radius=a||200,this.tube=b||40,this.segmentsR=c||64,this.segmentsT=d||8,this.p=e||2,this.q=f||3,this.heightScale=g||1,this.grid=Array(this.segmentsR),c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3;for(a=0;a<this.segmentsR;++a){this.grid[a]=Array(this.segmentsT);for(b=0;b<this.segmentsT;++b){var i=a/this.segmentsR*2*this.p*Math.PI,g=b/this.segmentsT*2*Math.PI,f=h(i,g,this.q,this.p,this.radius,this.heightScale),i=h(i+.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(i,f),d.add(i,f),e.cross(c,d),d.cross(e,c),e.normalize(),d.normalize(),i=-this.tube*Math.cos(g),g=this.tube*Math.sin(g),f.x=f.x+(i*d.x+g*e.x),f.y=f.y+(i*d.y+g*e.y),f.z=f.z+(i*d.z+g*e.z),this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}}for(a=0;a<this.segmentsR;++a)for(b=0;b<this.segmentsT;++b){var e=(a+1)%this.segmentsR,f=(b+1)%this.segmentsT,c=this.grid[a][b],d=this.grid[e][b],e=this.grid[e][f],f=this.grid[a][f],g=new THREE.UV(a/this.segmentsR,b/this.segmentsT),i=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT),j=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),k=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(c,d,e,f)),this.faceVertexUvs[0].push([g,i,j,k])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=new THREE.Geometry,THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),this.path=a,this.segments=b||64,this.radius=c||1,this.segmentsRadius=d||8,this.closed=e||!1,f&&(this.debug=new THREE.Object3D),this.grid=[];var g,h,f=this.segments+1,i,j,k,l=new THREE.Vector3,m,n,o,b=new THREE.TubeGeometry.FrenetFrames(a,b,e);m=b.tangents,n=b.normals,o=b.binormals,this.tangents=m,this.normals=n,this.binormals=o;for(b=0;b<f;b++){this.grid[b]=[],d=b/(f-1),k=a.getPointAt(d),d=m[b],g=n[b],h=o[b],this.debug&&(this.debug.add(new THREE.ArrowHelper(d,k,c,255)),this.debug.add(new THREE.ArrowHelper(g,k,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,k,c,65280)));for(d=0;d<this.segmentsRadius;d++)i=d/this.segmentsRadius*2*Math.PI,j=-this.radius*Math.cos(i),i=this.radius*Math.sin(i),l.copy(k),l.x=l.x+(j*g.x+i*h.x),l.y=l.y+(j*g.y+i*h.y),l.z=l.z+(j*g.z+i*h.z),this.grid[b][d]=this.vertices.push(new THREE.Vector3(l.x,l.y,l.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.segmentsRadius;d++)f=e?(b+1)%this.segments:b+1,l=(d+1)%this.segmentsRadius,a=this.grid[b][d],c=this.grid[f][d],f=this.grid[f][l],l=this.grid[b][l],m=new THREE.UV(b/this.segments,d/this.segmentsRadius),n=new THREE.UV((b+1)/this.segments,d/this.segmentsRadius),o=new THREE.UV((b+1)/this.segments,(d+1)/this.segmentsRadius),g=new THREE.UV(b/this.segments,(d+1)/this.segmentsRadius),this.faces.push(new THREE.Face4(a,c,f,l)),this.faceVertexUvs[0].push([m,n,o,g]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=new THREE.Geometry,THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,i=new THREE.Matrix4,b=b+1,j,k,l;this.tangents=e,this.normals=f,this.binormals=g;for(j=0;j<b;j++)k=j/(b-1),e[j]=a.getTangentAt(k),e[j].normalize();f[0]=new THREE.Vector3,g[0]=new THREE.Vector3,a=Number.MAX_VALUE,j=Math.abs(e[0].x),k=Math.abs(e[0].y),l=Math.abs(e[0].z),j<=a&&(a=j,d.set(1,0,0)),k<=a&&(a=k,d.set(0,1,0)),l<=a&&d.set(0,0,1),h.cross(e[0],d).normalize(),f[0].cross(e[0],h),g[0].cross(e[0],f[0]);for(j=1;j<b;j++)f[j]=f[j-1].clone(),g[j]=g[j-1].clone(),h.cross(e[j-1],e[j]),h.length()>1e-4&&(h.normalize(),d=Math.acos(e[j-1].dot(e[j])),i.makeRotationAxis(h,d).multiplyVector3(f[j])),g[j].cross(e[j],f[j]);if(c){d=Math.acos(f[0].dot(f[b-1])),d/=b-1,e[0].dot(h.cross(f[0],f[b-1]))>0&&(d=-d);for(j=1;j<b;j++)i.makeRotationAxis(e[j],d*j).multiplyVector3(f[j]),g[j].cross(e[j],f[j])}},THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;return b.uv=new THREE.UV(c,a),b}function f(a,b,c,d){d<1?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),i.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),i.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){l[a.index]||(l[a.index]=[]),l[b.index]||(l[b.index]=[]);var c=l[a.index][b.index];return c===void 0&&(l[a.index][b.index]=l[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2))),c}function h(a,b,c){return c<0&&a.u===1&&(a=new THREE.UV(a.u-1,a.v)),b.x===0&&b.z===0&&(a=new THREE.UV(c/2/Math.PI+.5,a.v)),a}THREE.Geometry.call(this);for(var c=c||1,d=d||0,i=this,j=0,k=a.length;j<k;j++)e(new THREE.Vector3(a[j][0],a[j][1],a[j][2]));for(var l=[],a=this.vertices,j=0,k=b.length;j<k;j++)f(a[b[j][0]],a[b[j][1]],a[b[j][2]],d);this.mergeVertices(),j=0;for(k=this.vertices.length;j<k;j++)this.vertices[j].multiplyScalar(c);this.computeCentroids(),this.boundingSphere={radius:c}},THREE.PolyhedronGeometry.prototype=new THREE.Geometry,THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)},THREE.IcosahedronGeometry.prototype=new THREE.Geometry,THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)},THREE.OctahedronGeometry.prototype=new THREE.Geometry,THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)},THREE.TetrahedronGeometry.prototype=new THREE.Geometry,THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0],d=d===void 0?!1:d,h,i,j,k,l=b+1;for(h=0;h<=c;h++){k=h/c;for(i=0;i<=b;i++)j=i/b,j=a(j,k),e.push(j)}var m,n,o,p;for(h=0;h<c;h++)for(i=0;i<b;i++)a=h*l+i,e=h*l+i+1,k=(h+1)*l+i,j=(h+1)*l+i+1,m=new THREE.UV(h/b,i/c),n=new THREE.UV(h/b,(i+1)/c),o=new THREE.UV((h+1)/b,i/c),p=new THREE.UV((h+1)/b,(i+1)/c),d?(f.push(new THREE.Face3(a,e,k)),f.push(new THREE.Face3(e,j,k)),g.push([m,n,o]),g.push([n,p,o])):(f.push(new THREE.Face4(a,e,j,k)),g.push([m,n,o,p]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=new THREE.Geometry,THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.AxisHelper=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3),a.vertices.push(new THREE.Vector3(0,100,0));var b=new THREE.CylinderGeometry(0,5,25,5,1),c;c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680})),c.rotation.z=-Math.PI/2,this.add(c),c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680})),c.position.x=100,c.rotation.z=-Math.PI/2,this.add(c),c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280})),this.add(c),c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280})),c.position.y=100,this.add(c),c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255})),c.rotation.x=Math.PI/2,this.add(c),c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255})),c.position.z=100,c.rotation.x=Math.PI/2,this.add(c)},THREE.AxisHelper.prototype=new THREE.Object3D,THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this),d===void 0&&(d=16776960),c===void 0&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0)),e.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d})),this.add(this.line),e=new THREE.CylinderGeometry(0,.05,.25,5,1),this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d})),this.cone.position.set(0,1,0),this.add(this.cone),b instanceof THREE.Vector3&&(this.position=b),this.setDirection(a),this.setLength(c)},THREE.ArrowHelper.prototype=new THREE.Object3D,THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a),a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a),this.rotation.getRotationFromMatrix(this.matrix,this.scale)},THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)},THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a),this.cone.material.color.setHex(a)},THREE.CameraHelper=function(a){function b(a,b,d){c(a,d),c(b,d)}function c(a,b){d.lineGeometry.vertices.push(new THREE.Vector3),d.lineGeometry.colors.push(new THREE.Color(b)),d.pointMap[a]===void 0&&(d.pointMap[a]=[]),d.pointMap[a].push(d.lineGeometry.vertices.length-1)}THREE.Object3D.call(this);var d=this;this.lineGeometry=new THREE.Geometry,this.lineMaterial=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.pointMap={},b("n1","n2",16755200),b("n2","n4",16755200),b("n4","n3",16755200),b("n3","n1",16755200),b("f1","f2",16755200),b("f2","f4",16755200),b("f4","f3",16755200),b("f3","f1",16755200),b("n1","f1",16755200),b("n2","f2",16755200),b("n3","f3",16755200),b("n4","f4",16755200),b("p","n1",16711680),b("p","n2",16711680),b("p","n3",16711680),b("p","n4",16711680),b("u1","u2",43775),b("u2","u3",43775),b("u3","u1",43775),b("c","t",16777215),b("p","c",3355443),b("cn1","cn2",3355443),b("cn3","cn4",3355443),b("cf1","cf2",3355443),b("cf3","cf4",3355443),this.camera=a,this.update(a),this.lines=new THREE.Line(this.lineGeometry,this.lineMaterial,THREE.LinePieces),this.add(this.lines)},THREE.CameraHelper.prototype=new THREE.Object3D,THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){function a(a,c,d,e){THREE.CameraHelper.__v.set(c,d,e),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c),a=b.pointMap[a];if(a!==void 0){c=0;for(d=a.length;c<d;c++)b.lineGeometry.vertices[a[c]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),a("c",0,0,-1),a("t",0,0,1),a("n1",-1,-1,-1),a("n2",1,-1,-1),a("n3",-1,1,-1),a("n4",1,1,-1),a("f1",-1,-1,1),a("f2",1,-1,1),a("f3",-1,1,1),a("f4",1,1,1),a("u1",.7,1.1,-1),a("u2",-0.7,1.1,-1),a("u3",0,2,-1),a("cf1",-1,0,1),a("cf2",1,0,1),a("cf3",0,-1,1),a("cf4",0,1,1),a("cn1",-1,0,-1),a("cn2",1,0,-1),a("cn3",0,-1,-1),a("cn4",0,1,-1),this.lineGeometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.SubdivisionModifier=function(a){this.subdivisions=a===void 0?1:a,this.useOldVertexColors=!1,this.supportUVs=!0,this.debug=!1},THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier,THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;b-->0;)this.smooth(a)},THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){m.debug&&console.log.apply(console,arguments)}function c(){console&&console.log.apply(console,arguments)}function d(a,c,d,e,g,h,i){var j=new THREE.Face4(a,c,d,e,null,g.color,g.material);if(m.useOldVertexColors){j.vertexColors=[];for(var n,o,p,q=0;q<4;q++){p=h[q],n=new THREE.Color,n.setRGB(0,0,0);for(var r=0;r<p.length;r++)o=g.vertexColors[p[r]-1],n.r=n.r+o.r,n.g=n.g+o.g,n.b=n.b+o.b;n.r=n.r/p.length,n.g=n.g/p.length,n.b=n.b/p.length,j.vertexColors[q]=n}}k.push(j),m.supportUVs&&(g=[f(a,""),f(c,i),f(d,i),f(e,i)],g[0]?g[1]?g[2]?g[3]?l.push(g):b("d :( ",e+":"+i):b("c :( ",d+":"+i):b("b :( ",c+":"+i):b("a :( ",a+":"+i))}function e(a,b){return Math.min(a,b)+"_"+Math.max(a,b)}function f(a,d){var e=a+":"+d,f=s[e];return f?f:(a>=t&&a<t+o.length?b("face pt"):b("edge pt"),c("warning, UV not found for",e),null)}function g(a,b,d){var e=a+":"+b;e in s?c("dup vertexNo",a,"oldFaceNo",b,"value",d,"key",e,s[e]):s[e]=d}function h(a,b){D[a]===void 0&&(D[a]=[]),D[a].push(b)}function i(a,b,c){E[a]===void 0&&(E[a]={}),E[a][b]=c}var j=[],k=[],l=[],m=this,n=a.vertices,o=a.faces,j=n.concat(),p=[],q={},r={},s={},t=n.length,u,v,w,x,y,z=a.faceVertexUvs[0],A;b("originalFaces, uvs, originalVerticesLength",o.length,z.length,t);if(m.supportUVs){u=0;for(v=z.length;u<v;u++){w=0;for(x=z[u].length;w<x;w++)A=o[u]["abcd".charAt(w)],g(A,u,z[u][w])}}z.length==0&&(m.supportUVs=!1),u=0;for(y in s)u++;u||(m.supportUVs=!1,b("no uvs")),b("-- Original Faces + Vertices UVs completed",s,"vs",z.length),u=0;for(v=o.length;u<v;u++)y=o[u],p.push(y.centroid),j.push(y.centroid),m.supportUVs&&(z=new THREE.UV,y instanceof THREE.Face3?(z.u=f(y.a,u).u+f(y.b,u).u+f(y.c,u).u,z.v=f(y.a,u).v+f(y.b,u).v+f(y.c,u).v,z.u=z.u/3,z.v=z.v/3):y instanceof THREE.Face4&&(z.u=f(y.a,u).u+f(y.b,u).u+f(y.c,u).u+f(y.d,u).u,z.v=f(y.a,u).v+f(y.b,u).v+f(y.c,u).v+f(y.d,u).v,z.u=z.u/4,z.v=z.v/4),g(t+u,"",z));b("-- added UVs for new Faces",s),v=function(a){function b(a,b){h[a]===void 0&&(h[a]=[]),h[a].push(b)}var c,d,f,g,h={};c=0;for(d=a.faces.length;c<d;c++)f=a.faces[c],f instanceof THREE.Face3?(g=e(f.a,f.b),b(g,c),g=e(f.b,f.c),b(g,c),g=e(f.c,f.a),b(g,c)):f instanceof THREE.Face4&&(g=e(f.a,f.b),b(g,c),g=e(f.b,f.c),b(g,c),g=e(f.c,f.d),b(g,c),g=e(f.d,f.a),b(g,c));return h}(a),A=0;var B,C,D={},E={};for(u in v){z=v[u],B=u.split("_"),C=B[0],B=B[1],h(C,[C,B]),h(B,[C,B]),w=0;for(x=z.length;w<x;w++)y=z[w],i(C,y,u),i(B,y,u);z.length<2&&(r[u]=!0)}b("vertexEdgeMap",D,"vertexFaceMap",E);for(u in v)z=v[u],y=z[0],x=z[1],B=u.split("_"),C=B[0],B=B[1],z=new THREE.Vector3,r[u]?(z.addSelf(n[C]),z.addSelf(n[B]),z.multiplyScalar(.5)):(z.addSelf(p[y]),z.addSelf(p[x]),z.addSelf(n[C]),z.addSelf(n[B]),z.multiplyScalar(.25)),q[u]=t+o.length+A,j.push(z),A++,m.supportUVs&&(z=new THREE.UV,z.u=f(C,y).u+f(B,y).u,z.v=f(C,y).v+f(B,y).v,z.u=z.u/2,z.v=z.v/2,g(q[u],y,z),r[u]||(z=new THREE.UV,z.u=f(C,x).u+f(B,x).u,z.v=f(C,x).v+f(B,x).v,z.u=z.u/2,z.v=z.v/2,g(q[u],x,z)));b("-- Step 2 done");var F,G;x=["123","12","2","23"],B=["123","23","3","31"];var H=["123","31","1","12"],I=["1234","12","2","23"],J=["1234","23","3","34"],K=["1234","34","4","41"],L=["1234","41","1","12"];u=0;for(v=p.length;u<v;u++)y=o[u],z=t+u,y instanceof THREE.Face3?(A=e(y.a,y.b),C=e(y.b,y.c),F=e(y.c,y.a),d(z,q[A],y.b,q[C],y,x,u),d(z,q[C],y.c,q[F],y,B,u),d(z,q[F],y.a,q[A],y,H,u)):y instanceof THREE.Face4?(A=e(y.a,y.b),C=e(y.b,y.c),F=e(y.c,y.d),G=e(y.d,y.a),d(z,q[A],y.b,q[C],y,I,u),d(z,q[C],y.c,q[F],y,J,u),d(z,q[F],y.d,q[G],y,K,u),d(z,q[G],y.a,q[A],y,L,u)):b("face should be a face!",y);q=new THREE.Vector3,y=new THREE.Vector3,u=0;for(v=n.length;u<v;u++)if(D[u]!==void 0){q.set(0,0,0),y.set(0,0,0),C=new THREE.Vector3(0,0,0),z=0;for(w in E[u])q.addSelf(p[w]),z++;x=0,A=D[u].length;for(w=0;w<A;w++)r[e(D[u][w][0],D[u][w][1])]&&x++;if(x!=2){q.divideScalar(z);for(w=0;w<A;w++)z=D[u][w],z=n[z[0]].clone().addSelf(n[z[1]]).divideScalar(2),y.addSelf(z);y.divideScalar(A),C.addSelf(n[u]),C.multiplyScalar(A-3),C.addSelf(q),C.addSelf(y.multiplyScalar(2)),C.divideScalar(A),j[u]=C}}a.vertices=j,a.faces=k,a.faceVertexUvs[0]=l,delete a.__tmpVertices,a.computeCentroids(),a.computeFaceNormals(),a.computeVertexNormals()},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=new THREE.Object3D,THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,a!==void 0&&this.add(a,b,c,d,e)},THREE.LensFlare.prototype=new THREE.Object3D,THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.supr=THREE.Object3D.prototype,THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){b===void 0&&(b=-1),c===void 0&&(c=0),f===void 0&&(f=1),e===void 0&&(e=new THREE.Color(16777215)),d===void 0&&(d=THREE.NormalBlending),c=Math.min(c,Math.max(0,c)),this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})},THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=-this.positionScreen.x*2,e=-this.positionScreen.y*2;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation=c.rotation+(c.wantedRotation-c.rotation)*.25},THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b),this.animationsMap={},this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=new THREE.Mesh,THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[a]=b,this.animationsList.push(b)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&h.length>1){var i=h[1];d[i]||(d[i]={start:Infinity,end:-Infinity}),h=d[i],f<h.start&&(h.start=f),f>h.end&&(h.end=f),c||(c=i)}}for(i in d)h=d[i],this.createAnimation(i,h.start,h.end,a);this.firstAnimation=c},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b},THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1},THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time=d.time+d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||d.time<0)d.direction=d.direction*-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),d.time<0&&(d.time=0,d.directionBackwards=!1)}else d.time=d.time%d.duration,d.time<0&&(d.time=d.time+d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f),e=d.time%e/e,d.directionBackwards&&(e=1-e),this.morphTargetInfluences[d.currentFrame]=e*g,this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}},THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);return b.shaderSource(d,a.fragmentShader),b.shaderSource(e,a.vertexShader),b.compileShader(d),b.compileShader(e),b.attachShader(c,d),b.attachShader(c,e),b.linkProgram(c),c}var b,c,d,e,f,g,h,i,j,k,l,m,n;this.init=function(q){b=q.context,c=q,d=new Float32Array(16),e=new Uint16Array(6),q=0,d[q++]=-1,d[q++]=-1,d[q++]=0,d[q++]=0,d[q++]=1,d[q++]=-1,d[q++]=1,d[q++]=0,d[q++]=1,d[q++]=1,d[q++]=1,d[q++]=1,d[q++]=-1,d[q++]=1,d[q++]=0,d[q++]=1,q=0,e[q++]=0,e[q++]=1,e[q++]=2,e[q++]=0,e[q++]=2,e[q++]=3,f=b.createBuffer(),g=b.createBuffer(),b.bindBuffer(b.ARRAY_BUFFER,f),b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g),b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW),h=b.createTexture(),i=b.createTexture(),b.bindTexture(b.TEXTURE_2D,h),b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.bindTexture(b.TEXTURE_2D,i),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(j=!1,k=a(THREE.ShaderFlares.lensFlare)):(j=!0,k=a(THREE.ShaderFlares.lensFlareVertexTexture)),l={},m={},l.vertex=b.getAttribLocation(k,"position"),l.uv=b.getAttribLocation(k,"uv"),m.renderType=b.getUniformLocation(k,"renderType"),m.map=b.getUniformLocation(k,"map"),m.occlusionMap=b.getUniformLocation(k,"occlusionMap"),m.opacity=b.getUniformLocation(k,"opacity"),m.color=b.getUniformLocation(k,"color"),m.scale=b.getUniformLocation(k,"scale"),m.rotation=b.getUniformLocation(k,"rotation"),m.screenPosition=b.getUniformLocation(k,"screenPosition"),n=!1},this.render=function(a,d,e,q){var a=a.__webglFlares,r=a.length;if(r){var s=new THREE.Vector3,t=q/e,u=e*.5,v=q*.5,w=16/q,x=new THREE.Vector2(w*t,w),y=new THREE.Vector3(1,1,0),z=new THREE.Vector2(1,1),A=m,w=l;b.useProgram(k),n||(b.enableVertexAttribArray(l.vertex),b.enableVertexAttribArray(l.uv),n=!0),b.uniform1i(A.occlusionMap,0),b.uniform1i(A.map,1),b.bindBuffer(b.ARRAY_BUFFER,f),b.vertexAttribPointer(w.vertex,2,b.FLOAT,!1,16,0),b.vertexAttribPointer(w.uv,2,b.FLOAT,!1,16,8),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g),b.disable(b.CULL_FACE),b.depthMask(!1);var B,C,D,E,F;for(B=0;B<r;B++){w=16/q,x.set(w*t,w),E=a[B],s.set(E.matrixWorld.elements[12],E.matrixWorld.elements[13],E.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(s),d.projectionMatrix.multiplyVector3(s),y.copy(s),z.x=y.x*u+u,z.y=y.y*v+v;if(j||z.x>0&&z.x<e&&z.y>0&&z.y<q){b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,h),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,z.x-8,z.y-8,16,16,0),b.uniform1i(A.renderType,0),b.uniform2f(A.scale,x.x,x.y),b.uniform3f(A.screenPosition,y.x,y.y,y.z),b.disable(b.BLEND),b.enable(b.DEPTH_TEST),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,i),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,z.x-8,z.y-8,16,16,0),b.uniform1i(A.renderType,1),b.disable(b.DEPTH_TEST),b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,h),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),E.positionScreen.copy(y),E.customUpdateCallback?E.customUpdateCallback(E):E.updateLensFlares(),b.uniform1i(A.renderType,2),b.enable(b.BLEND),C=0;for(D=E.lensFlares.length;C<D;C++)F=E.lensFlares[C],F.opacity>.001&&F.scale>.001&&(y.x=F.x,y.y=F.y,y.z=F.z,w=F.size*F.scale/q,x.x=w*t,x.y=w,b.uniform3f(A.screenPosition,y.x,y.y,y.z),b.uniform2f(A.scale,x.x,x.y),b.uniform1f(A.rotation,F.rotation),b.uniform1f(A.opacity,F.opacity),b.uniform3f(A.color,F.color.r,F.color.g,F.color.b),c.setBlending(F.blending,F.blendEquation,F.blendSrc,F.blendDst),c.setTexture(F.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}}b.enable(b.CULL_FACE),b.enable(b.DEPTH_TEST),b.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4,g=new THREE.Vector3,h=new THREE.Vector3;this.init=function(e){a=e.context,b=e;var e=THREE.ShaderLib.depthRGBA,f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f}),d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0}),c._shadowPass=!0,d._shadowPass=!0},this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)},this.update=function(i,j){var k,l,m,n,o,p,q,r,s,t=[];n=0,a.clearColor(1,1,1,1),a.disable(a.BLEND),a.enable(a.CULL_FACE),b.shadowMapCullFrontFaces?a.cullFace(a.FRONT):a.cullFace(a.BACK),b.setDepthTest(!0),k=0;for(l=i.__lights.length;k<l;k++){m=i.__lights[k];if(m.castShadow)if(m instanceof THREE.DirectionalLight&&m.shadowCascade)for(o=0;o<m.shadowCascadeCount;o++){var u;if(m.shadowCascadeArray[o])u=m.shadowCascadeArray[o];else{s=m,q=o,u=new THREE.DirectionalLight,u.isVirtual=!0,u.onlyShadow=!0,u.castShadow=!0,u.shadowCameraNear=s.shadowCameraNear,u.shadowCameraFar=s.shadowCameraFar,u.shadowCameraLeft=s.shadowCameraLeft,u.shadowCameraRight=s.shadowCameraRight,u.shadowCameraBottom=s.shadowCameraBottom,u.shadowCameraTop=s.shadowCameraTop,u.shadowCameraVisible=s.shadowCameraVisible,u.shadowDarkness=s.shadowDarkness,u.shadowBias=s.shadowCascadeBias[q],u.shadowMapWidth=s.shadowCascadeWidth[q],u.shadowMapHeight=s.shadowCascadeHeight[q],u.pointsWorld=[],u.pointsFrustum=[],r=u.pointsWorld,p=u.pointsFrustum;for(var v=0;v<8;v++)r[v]=new THREE.Vector3,p[v]=new THREE.Vector3;r=s.shadowCascadeNearZ[q],s=s.shadowCascadeFarZ[q],p[0].set(-1,-1,r),p[1].set(1,-1,r),p[2].set(-1,1,r),p[3].set(1,1,r),p[4].set(-1,-1,s),p[5].set(1,-1,s),p[6].set(-1,1,s),p[7].set(1,1,s),u.originalCamera=j,p=new THREE.Gyroscope,p.position=m.shadowCascadeOffset,p.add(u),p.add(u.target),j.add(p),m.shadowCascadeArray[o]=u,console.log("Created virtualLight",u)}q=m,r=o,s=q.shadowCascadeArray[r],s.position.copy(q.position),s.target.position.copy(q.target.position),s.lookAt(s.target),s.shadowCameraVisible=q.shadowCameraVisible,s.shadowDarkness=q.shadowDarkness,s.shadowBias=q.shadowCascadeBias[r],p=q.shadowCascadeNearZ[r],q=q.shadowCascadeFarZ[r],s=s.pointsFrustum,s[0].z=p,s[1].z=p,s[2].z=p,s[3].z=p,s[4].z=q,s[5].z=q,s[6].z=q,s[7].z=q,t[n]=u,n++}else t[n]=m,n++}k=0;for(l=t.length;k<l;k++){m=t[k],m.shadowMap||(m.shadowMap=new THREE.WebGLRenderTarget(m.shadowMapWidth,m.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),m.shadowMapSize=new THREE.Vector2(m.shadowMapWidth,m.shadowMapHeight),m.shadowMatrix=new THREE.Matrix4);if(!m.shadowCamera){if(m instanceof THREE.SpotLight)m.shadowCamera=new THREE.PerspectiveCamera(m.shadowCameraFov,m.shadowMapWidth/m.shadowMapHeight,m.shadowCameraNear,m.shadowCameraFar);else{if(!(m instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}m.shadowCamera=new THREE.OrthographicCamera(m.shadowCameraLeft,m.shadowCameraRight,m.shadowCameraTop,m.shadowCameraBottom,m.shadowCameraNear,m.shadowCameraFar)}i.add(m.shadowCamera),b.autoUpdateScene&&i.updateMatrixWorld()}m.shadowCameraVisible&&!m.cameraHelper&&(m.cameraHelper=new THREE.CameraHelper(m.shadowCamera),m.shadowCamera.add(m.cameraHelper));if(m.isVirtual&&u.originalCamera==j){o=j,n=m.shadowCamera,p=m.pointsFrustum,s=m.pointsWorld,g.set(Infinity,Infinity,Infinity),h.set(-Infinity,-Infinity,-Infinity);for(q=0;q<8;q++)r=s[q],r.copy(p[q]),THREE.ShadowMapPlugin.__projector.unprojectVector(r,o),n.matrixWorldInverse.multiplyVector3(r),r.x<g.x&&(g.x=r.x),r.x>h.x&&(h.x=r.x),r.y<g.y&&(g.y=r.y),r.y>h.y&&(h.y=r.y),r.z<g.z&&(g.z=r.z),r.z>h.z&&(h.z=r.z);n.left=g.x,n.right=h.x,n.top=h.y,n.bottom=g.y,n.updateProjectionMatrix()}n=m.shadowMap,p=m.shadowMatrix,o=m.shadowCamera,o.position.copy(m.matrixWorld.getPosition()),o.lookAt(m.target.matrixWorld.getPosition()),o.updateMatrixWorld(),o.matrixWorldInverse.getInverse(o.matrixWorld),m.cameraHelper&&(m.cameraHelper.lines.visible=m.shadowCameraVisible),m.shadowCameraVisible&&m.cameraHelper.update(),p.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),p.multiplySelf(o.projectionMatrix),p.multiplySelf(o.matrixWorldInverse),o._viewMatrixArray||(o._viewMatrixArray=new Float32Array(16)),o._projectionMatrixArray||(o._projectionMatrixArray=new Float32Array(16)),o.matrixWorldInverse.flattenToArray(o._viewMatrixArray),o.projectionMatrix.flattenToArray(o._projectionMatrixArray),f.multiply(o.projectionMatrix,o.matrixWorldInverse),e.setFromMatrix(f),b.setRenderTarget(n),b.clear(),s=i.__webglObjects,m=0;for(n=s.length;m<n;m++)q=s[m],p=q.object,q.render=!1,p.visible&&p.castShadow&&(!(p instanceof THREE.Mesh)||!p.frustumCulled||e.contains(p))&&(p._modelViewMatrix.multiply(o.matrixWorldInverse,p.matrixWorld),q.render=!0);m=0;for(n=s.length;m<n;m++)q=s[m],q.render&&(p=q.object,q=q.buffer,r=p.customDepthMaterial?p.customDepthMaterial:p.geometry.morphTargets.length?d:c,q instanceof THREE.BufferGeometry?b.renderBufferDirect(o,i.__lights,null,r,q,p):b.renderBuffer(o,i.__lights,null,r,q,p));s=i.__webglObjectsImmediate,m=0;for(n=s.length;m<n;m++)q=s[m],p=q.object,p.visible&&p.castShadow&&(p._modelViewMatrix.multiply(o.matrixWorldInverse,p.matrixWorld),b.renderImmediateObject(o,i.__lights,null,c,p))}k=b.getClearColor(),l=b.getClearAlpha(),a.clearColor(k.r,k.g,k.b,l),a.enable(a.BLEND),b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,e,f,g,h,i,j,k;this.init=function(a){b=a.context,c=a,d=new Float32Array(16),e=new Uint16Array(6),a=0,d[a++]=-1,d[a++]=-1,d[a++]=0,d[a++]=1,d[a++]=1,d[a++]=-1,d[a++]=1,d[a++]=1,d[a++]=1,d[a++]=1,d[a++]=1,d[a++]=0,d[a++]=-1,d[a++]=1,d[a++]=0,a=d[a++]=0,e[a++]=0,e[a++]=1,e[a++]=2,e[a++]=0,e[a++]=2,e[a++]=3,f=b.createBuffer(),g=b.createBuffer(),b.bindBuffer(b.ARRAY_BUFFER,f),b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g),b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,m=b.createProgram(),n=b.createShader(b.FRAGMENT_SHADER),o=b.createShader(b.VERTEX_SHADER);b.shaderSource(n,a.fragmentShader),b.shaderSource(o,a.vertexShader),b.compileShader(n),b.compileShader(o),b.attachShader(m,n),b.attachShader(m,o),b.linkProgram(m),h=m,i={},j={},i.position=b.getAttribLocation(h,"position"),i.uv=b.getAttribLocation(h,"uv"),j.uvOffset=b.getUniformLocation(h,"uvOffset"),j.uvScale=b.getUniformLocation(h,"uvScale"),j.rotation=b.getUniformLocation(h,"rotation"),j.scale=b.getUniformLocation(h,"scale"),j.alignment=b.getUniformLocation(h,"alignment"),j.color=b.getUniformLocation(h,"color"),j.map=b.getUniformLocation(h,"map"),j.opacity=b.getUniformLocation(h,"opacity"),j.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates"),j.affectedByDistance=b.getUniformLocation(h,"affectedByDistance"),j.screenPosition=b.getUniformLocation(h,"screenPosition"),j.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix"),j.projectionMatrix=b.getUniformLocation(h,"projectionMatrix"),k=!1},this.render=function(d,e,m,n){var d=d.__webglSprites,o=d.length;if(o){var p=i,q=j,r=n/m,m=m*.5,s=n*.5,t=!0;b.useProgram(h),k||(b.enableVertexAttribArray(p.position),b.enableVertexAttribArray(p.uv),k=!0),b.disable(b.CULL_FACE),b.enable(b.BLEND),b.depthMask(!0),b.bindBuffer(b.ARRAY_BUFFER,f),b.vertexAttribPointer(p.position,2,b.FLOAT,!1,16,0),b.vertexAttribPointer(p.uv,2,b.FLOAT,!1,16,8),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g),b.uniformMatrix4fv(q.projectionMatrix,!1,e._projectionMatrixArray),b.activeTexture(b.TEXTURE0),b.uniform1i(q.map,0);for(var u,v=[],p=0;p<o;p++)u=d[p],u.visible&&u.opacity!==0&&(u.useScreenCoordinates?u.z=-u.position.z:(u._modelViewMatrix.multiply(e.matrixWorldInverse,u.matrixWorld),u.z=-u._modelViewMatrix.elements[14]));d.sort(a);for(p=0;p<o;p++)u=d[p],u.visible&&u.opacity!==0&&u.map&&u.map.image&&u.map.image.width&&(u.useScreenCoordinates?(b.uniform1i(q.useScreenCoordinates,1),b.uniform3f(q.screenPosition,(u.position.x-m)/m,(s-u.position.y)/s,Math.max(0,Math.min(1,u.position.z)))):(b.uniform1i(q.useScreenCoordinates,0),b.uniform1i(q.affectedByDistance,u.affectedByDistance?1:0),b.uniformMatrix4fv(q.modelViewMatrix,!1,u._modelViewMatrix.elements)),e=u.map.image.width/(u.scaleByViewport?n:1),v[0]=e*r*u.scale.x,v[1]=e*u.scale.y,b.uniform2f(q.uvScale,u.uvScale.x,u.uvScale.y),b.uniform2f(q.uvOffset,u.uvOffset.x,u.uvOffset.y),b.uniform2f(q.alignment,u.alignment.x,u.alignment.y),b.uniform1f(q.opacity,u.opacity),b.uniform3f(q.color,u.color.r,u.color.g,u.color.b),b.uniform1f(q.rotation,u.rotation),b.uniform2fv(q.scale,v),u.mergeWith3D&&!t?(b.enable(b.DEPTH_TEST),t=!0):!u.mergeWith3D&&t&&(b.disable(b.DEPTH_TEST),t=!1),c.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),c.setTexture(u.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE),b.enable(b.DEPTH_TEST),b.depthMask(!0)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4;this.init=function(e){a=e.context,b=e;var e=THREE.ShaderLib.depthRGBA,f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f}),d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0}),c._shadowPass=!0,d._shadowPass=!0},this.render=function(a,b){this.enabled&&this.update(a,b)},this.update=function(g,h){var i,j,k,l,m,n;a.clearColor(1,1,1,1),a.disable(a.BLEND),b.setDepthTest(!0),b.autoUpdateScene&&g.updateMatrixWorld(),h._viewMatrixArray||(h._viewMatrixArray=new Float32Array(16)),h._projectionMatrixArray||(h._projectionMatrixArray=new Float32Array(16)),h.matrixWorldInverse.getInverse(h.matrixWorld),h.matrixWorldInverse.flattenToArray(h._viewMatrixArray),h.projectionMatrix.flattenToArray(h._projectionMatrixArray),f.multiply(h.projectionMatrix,h.matrixWorldInverse),e.setFromMatrix(f),b.setRenderTarget(this.renderTarget),b.clear(),n=g.__webglObjects,i=0;for(j=n.length;i<j;i++)k=n[i],m=k.object,k.render=!1,m.visible&&(!(m instanceof THREE.Mesh)||!m.frustumCulled||e.contains(m))&&(m._modelViewMatrix.multiply(h.matrixWorldInverse,m.matrixWorld),k.render=!0);i=0;for(j=n.length;i<j;i++)k=n[i],k.render&&(m=k.object,k=k.buffer,b.setObjectFaces(m),l=m.customDepthMaterial?m.customDepthMaterial:m.geometry.morphTargets.length?d:c,k instanceof THREE.BufferGeometry?b.renderBufferDirect(h,g.__lights,null,l,k,m):b.renderBuffer(h,g.__lights,null,l,k,m));n=g.__webglObjectsImmediate,i=0;for(j=n.length;i<j;i++)k=n[i],m=k.object,m.visible&&m.castShadow&&(m._modelViewMatrix.multiply(h.matrixWorldInverse,m.matrixWorld),b.renderImmediateObject(h,g.__lights,null,c,m));i=b.getClearColor(),j=b.getClearAlpha(),a.clearColor(i.r,i.g,i.b,j),a.enable(a.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};var Stats=function(){var a=Date.now(),b=a,c=0,d=1e3,e=0,f=0,g=1e3,h=0,i=0,j=0,k=document.createElement("div");k.id="stats",k.addEventListener("mousedown",function(a){a.preventDefault(),s(++j%2)},!1),k.style.cssText="width:80px;opacity:0.9;cursor:pointer";var l=document.createElement("div");l.id="fps",l.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002",k.appendChild(l);var m=document.createElement("div");m.id="fpsText",m.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",m.innerHTML="FPS",l.appendChild(m);var n=document.createElement("div");n.id="fpsGraph",n.style.cssText="position:relative;width:74px;height:30px;background-color:#0ff";for(l.appendChild(n);74>n.children.length;){var o=document.createElement("span");o.style.cssText="width:1px;height:30px;float:left;background-color:#113",n.appendChild(o)}var p=document.createElement("div");p.id="ms",p.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#020;display:none",k.appendChild(p);var q=document.createElement("div");q.id="msText",q.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",q.innerHTML="MS",p.appendChild(q);var r=document.createElement("div");r.id="msGraph",r.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0";for(p.appendChild(r);74>r.children.length;)o=document.createElement("span"),o.style.cssText="width:1px;height:30px;float:left;background-color:#131",r.appendChild(o);var s=function(a){j=a;switch(j){case 0:l.style.display="block",p.style.display="none";break;case 1:l.style.display="none",p.style.display="block"}};return{domElement:k,setMode:s,begin:function(){a=Date.now()},end:function(){var j=Date.now();c=j-a,d=Math.min(d,c),e=Math.max(e,c),q.textContent=c+" MS ("+d+"-"+e+")";var k=Math.min(30,30-30*(c/200));return r.appendChild(r.firstChild).style.height=k+"px",i++,j>b+1e3&&(f=Math.round(1e3*i/(j-b)),g=Math.min(g,f),h=Math.max(h,f),m.textContent=f+" FPS ("+g+"-"+h+")",k=Math.min(30,30-30*(f/100)),n.appendChild(n.firstChild).style.height=k+"px",b=j,i=0),j},update:function(){a=this.end()}}},Demonixis=Demonixis||{};Demonixis.Input=function(){this.keys={up:!1,down:!1,left:!1,right:!1,space:!1,enter:!1,control:!1,alt:!1,shift:!1,num_0:!1,num_1:!1,num_2:!1,num_3:!1,num_4:!1,num_5:!1,num_6:!1,num_7:!1,num_8:!1,num_9:!1,a:!1,b:!1,c:!1,d:!1,e:!1,f:!1,g:!1,h:!1,i:!1,j:!1,k:!1,l:!1,m:!1,n:!1,o:!1,p:!1,q:!1,r:!1,s:!1,t:!1,u:!1,v:!1,w:!1,x:!1,y:!1,z:!1,k_0:!1,k_1:!1,k_2:!1,k_3:!1,k_4:!1,k_5:!1,k_6:!1,k_7:!1,k_8:!1,k_9:!1},this.keyboardState={current:null,last:null},this.joykeys={up:!1,down:!1,left:!1,right:!1,upLeft:!1,upRight:!1,downLeft:!1,downRight:!1,actionA:!1,actionB:!1,actionC:!1,actionX:!1,actionY:!1,actionZ:!1,triggerL:!1,triggerR:!1,start:!1,select:!1},this.joykeyState={current:null,last:null};var a=this;this._onKeyboardDown=function(b){a._onKeyStateChange(b,!0)},this._onKeyboardUp=function(b){a._onKeyStateChange(b,!1)},document.addEventListener("keydown",this._onKeyboardDown,!1),document.addEventListener("keyup",this._onKeyboardUp,!1),this.virtualJoyKeys=document.getElementsByClassName("joykey"),this._onJoykeyDown=function(b){a._onJoykeyStateChange(b,!0)},this._onJoykeyUp=function(b){a._onJoykeyStateChange(b,!1)};for(var b=0,c=this.virtualJoyKeys.length;b<c;b++)this.virtualJoyKeys[b].addEventListener("mousedown",this._onJoykeyDown,!1),this.virtualJoyKeys[b].addEventListener("mouseup",this._onJoykeyUp,!1)},Demonixis.Input.prototype.destroy=function(){document.removeEventListener("keydown",this._onKeyboardDown,!1),document.removeEventListener("keyup",this._onKeyboardUp,!1);for(var a=0,b=this.virtualJoyKeys.length;a<b;a++)this.virtualJoyKeys[a].removeEventListener("mousedown",this._onJoykeyDown,!1),virtualJoyKeys[a].removeEventListener("mouseup",this._onJoykeyUp,!1)},Demonixis.Input.prototype._onKeyStateChange=function(a,b){a.preventDefault();switch(a.keyCode){case 13:this.keys.enter=b;break;case 16:this.keys.shift=b;break;case 17:this.keys.control=b;break;case 18:this.keys.alt=b;break;case 32:this.keys.space=b;break;case 37:this.keys.left=b;break;case 38:this.keys.up=b;break;case 39:this.keys.right=b;break;case 40:this.keys.down=b;break;case 48:this.keys.k_0=b;break;case 49:this.keys.k_1=b;break;case 50:this.keys.k_2=b;break;case 51:this.keys.k_3=b;break;case 52:this.keys.k_4=b;break;case 53:this.keys.k_5=b;break;case 54:this.keys.k_6=b;break;case 55:this.keys.k_7=b;break;case 56:this.keys.k_8=b;break;case 57:this.keys.k_9=b;break;case 65:this.keys.a=b;break;case 65:this.keys.b=b;break;case 65:this.keys.c=b;break;case 68:this.keys.d=b;break;case 69:this.keys.e=b;break;case 70:this.keys.f=b;break;case 71:this.keys.g=b;break;case 72:this.keys.h=b;break;case 73:this.keys.i=b;break;case 74:this.keys.j=b;break;case 75:this.keys.k=b;break;case 76:this.keys.l=b;break;case 77:this.keys.m=b;break;case 78:this.keys.n=b;break;case 79:this.keys.o=b;break;case 80:this.keys.p=b;break;case 81:this.keys.q=b;break;case 82:this.keys.r=b;break;case 83:this.keys.s=b;break;case 84:this.keys.t=b;break;case 85:this.keys.u=b;break;case 86:this.keys.v=b;break;case 87:this.keys.w=b;break;case 88:this.keys.x=b;break;case 89:this.keys.y=b;break;case 90:this.keys.z=b;break;case 96:this.keys.num_0=b;break;case 97:this.keys.num_1=b;break;case 98:this.keys.num_2=b;break;case 99:this.keys.num_3=b;break;case 100:this.keys.num_4=b;break;case 101:this.keys.num_5=b;break;case 102:this.keys.num_6=b;break;case 103:this.keys.num_7=b;break;case 104:this.keys.num_8=b;break;case 105:this.keys.num_9=b}},Demonixis.Input.prototype._onJoykeyStateChange=function(a,b){a.preventDefault();var c=a.currentTarget.id;switch(c){case"keyup":this.joykeys.up=b;break;case"keydown":this.joykeys.down=b;break;case"keyleft":this.joykeys.left=b;break;case"keyright":this.joykeys.right=b;break;case"keyUpLeft":this.joykeys.upLeft=b;break;case"keyUpRight":this.joykeys.upRight=b;break;case"keyDownLeft":this.joykeys.downLeft=b;break;case"keyDownRight":this.joykeys.downRight=b;break;case"keyActionA":this.joykeys.A=b;break;case"keyActionB":this.joykeys.B=b;break;case"keyActionC":this.joykeys.C=b;break;case"keyActionX":this.joykeys.X=b;break;case"keyActionY":this.joykeys.Y=b;break;case"keyActionZ":this.joykeys.Z=b;break;case"keyTriggerL":this.joykeys.triggerL=b;break;case"keyTriggerR":this.joykeys.triggerR=b;break;case"keyButtonStart":this.joykeys.start=b;break;case"keyButtonSelect":this.joykeys.select=b}},Demonixis.Input.prototype.pressed=function(a){return this.keys[a]};var Demonixis=window.Demonixis||{};Demonixis.Gui=Demonixis.Gui||{},Demonixis.Gui.MiniMap=function(a,b,c){this.parent=c,this.width=a,this.height=b,this.blockSize={width:5,height:5},this.playerPosition={x:0,y:0},this.miniMap=document.createElement("canvas"),this.ctx=this.miniMap.getContext("2d"),this.create=function(a,b,c,d){var e="position:absolute;",f=(a||"10")+"px;",g=(b||"10")+"px;",h=(d||"1px solid black")+";";this.miniMap.setAttribute("width",this.width*this.blockSize.width),this.miniMap.setAttribute("height",this.height*this.blockSize.height),this.miniMap.setAttribute("id","miniMap"),this.miniMap.setAttribute("style",e+"top:"+f+"left:"+g+h);var i=document.getElementById(this.parent);i[0]!="undefined"&&i.removeChild[i[0]],i.appendChild(this.miniMap)},this.draw=function(a,b,c){c==1?this.ctx.fillStyle="white":c=="D"?(this.ctx.fillStyle="red",this.playerPosition={x:a,y:b}):c=="J"?this.ctx.fillStype="yellow":c=="A"?this.ctx.fillStyle="blue":this.ctx.fillStyle="rgb(200, 200, 200)",this.ctx.fillRect(a*5,b*5,5,5)},this.update=function(a){this.ctx.fillStyle="white",this.ctx.fillRect(this.playerPosition.x*this.blockSize.width,this.playerPosition.y*this.blockSize.height,this.blockSize.width,this.blockSize.height),this.ctx.fillStyle="red",this.ctx.fillRect(a.x*this.blockSize.width,a.y*this.blockSize.height,this.blockSize.width,this.blockSize.height),this.playerPosition=a},this.drawAt=function(a,b,c){this.ctx.fillStyle=c,this.ctx.fillRect(a*this.blockSize.width,b*this.blockSize.height,this.blockSize.width,this.blockSize.height)}};var Demonixis=window.Demonixis||{};Demonixis.GraphicsHelper=Demonixis.GraphicsHelper||{},Demonixis.GraphicsHelper.repeatTexture=function(a,b){return a.wrapS=THREE.RepeatWrapping,a.wrapT=THREE.RepeatWrapping,a.repeat.x=b.x,a.repeat.y=b.y,a},Demonixis.GraphicsHelper.createCube=function(a,b,c,d,e){var f,g=a||new THREE.MeshBasicMaterial({color:170}),h=b||{x:1,y:1,z:1},i=c||{x:50,y:50,z:50},j=d||{x:1,y:1,z:1},k=e||{x:0,y:0,z:0};return f=new THREE.Mesh(new THREE.CubeGeometry(i.x,i.y,i.z),g),f.scale.set(j.x,j.y,j.z),f.position.set(h.x,h.y,h.z),f.rotation.set(k.x,k.y,k.z),f.overdraw=!0,f};var Demonixis=window.Demonixis||{};Demonixis.GameHelper=Demonixis.GameHelper||{},Demonixis.GameHelper.LevelHelper=function(a,b){this.current=a||1,this.next=this.current+1,this.count=b||5,this.isFinished=!1,this.getNext=function(){return this.next>this.count?(this.current=1,this.next=2,this.isFinished=!0):(this.current=this.next,this.next++),this.current}},Demonixis.GameHelper.CameraHelper=function(a){this.translation=5,this.rotation=.025,this.origin={position:{x:0,y:0,z:0,mapX:0,mapY:0,mapZ:0},x:0,y:0,z:0},this.camera=a};var requirejs,require,define;(function(a){function b(a,b){if(a&&a.charAt(0)==="."&&b){b=b.split("/"),b=b.slice(0,b.length-1),a=b.concat(a.split("/"));var c,d;for(c=0;d=a[c];c++)if(d===".")a.splice(c,1),c-=1;else if(d===".."){if(c===1&&(a[2]===".."||a[0]===".."))break;c>0&&(a.splice(c-1,2),c-=2)}a=a.join("/")}return a}function c(b,c){return function(){return l.apply(a,j.call(arguments,0).concat([b,c]))}}function d(a){return function(c){return b(c,a)}}function e(a){return function(b){h[a]=b}}function f(b){if(i.hasOwnProperty(b)){var c=i[b];delete i[b],k.apply(a,c)}return h[b]}function g(a,c){var e,g,h=a.indexOf("!");return h!==-1?(e=b(a.slice(0,h),c),a=a.slice(h+1),g=f(e),g&&g.normalize?a=g.normalize(a,d(c)):a=b(a,c)):a=b(a,c),{f:e?e+"!"+a:a,n:a,p:g}}var h={},i={},j=[].slice,k,l;if(typeof define=="function")return;k=function(b,d,j,k){var l=[],m,n,o,p,q,r;k||(k=b);if(typeof j=="function"){!d.length&&j.length&&(d=["require","exports","module"]);for(p=0;p<d.length;p++){r=g(d[p],k),o=r.f;if(o==="require")l[p]=c(b);else if(o==="exports")l[p]=h[b]={},m=!0;else if(o==="module")n=l[p]={id:b,uri:"",exports:h[b]};else if(h.hasOwnProperty(o)||i.hasOwnProperty(o))l[p]=f(o);else{if(!r.p)throw b+" missing "+o;r.p.load(r.n,c(k,!0),e(o),{}),l[p]=h[o]}}q=j.apply(h[b],l),b&&(n&&n.exports!==a?h[b]=n.exports:m||(h[b]=q))}else b&&(h[b]=j)},requirejs=l=function(b,c,d,e){return typeof b=="string"?f(g(b,c).f):(b.splice||(c.splice?(b=c,c=arguments[2]):b=[]),e?k(a,b,c,d):setTimeout(function(){k(a,b,c,d)},15),l)},l.config=function(){return l},require||(require=l),define=function(a,b,c){b.splice||(c=b,b=[]),define.unordered?i[a]=[a,b,c]:k(a,b,c)},define.amd={jQuery:!0}})(),define("almond",[],function(){}),define("app/main",["require"],function(a){(function(){function a(){m=new THREE.WebGLRenderer({antialias:!0}),m.setSize(j,k),m.setClearColorHex(15658734,1),m.clear(),o=new THREE.Scene,n=new THREE.PerspectiveCamera(45,j/k,1,1e4),n.position.y=50,o.add(n),t=new Stats,t.domElement.style.position="absolute",t.domElement.style.bottom="0px",u[0]=THREE.ImageUtils.loadTexture("assets/images/textures/grate02.jpg"),u[1]=THREE.ImageUtils.loadTexture("assets/images/textures/slab03.jpg"),u[2]=THREE.ImageUtils.loadTexture("assets/images/textures/aztec01.jpg"),u[3]=THREE.ImageUtils.loadTexture("assets/images/textures/tarmac02.jpg"),Demonixis.GraphicsHelper.repeatTexture(u[0],{x:256,y:256}),Demonixis.GraphicsHelper.repeatTexture(u[1],{x:256,y:256}),document.getElementById("canvasContainer").appendChild(t.domElement),document.getElementById("canvasContainer").appendChild(m.domElement),p=new Demonixis.Input,r=new Demonixis.GameHelper.LevelHelper,cameraHelper=new Demonixis.GameHelper.CameraHelper(n)}function b(){q=new Demonixis.Gui.MiniMap(w[0].length,w.length,"canvasContainer"),q.create();var a={width:w[0].length*100,height:w.length*100},b=new THREE.Mesh(new THREE.CubeGeometry(a.width,5,a.height),new THREE.MeshBasicMaterial({map:u[0]}));b.overdraw=!0,b.position.set(-50,1,-50),o.add(b);var c=new THREE.Mesh(new THREE.CubeGeometry(a.width,5,a.height),new THREE.MeshBasicMaterial({map:u[1]}));c.position.set(-50,100,-50),c.overdraw=!0,o.add(c);for(var d=0,e=w.length;d<e;d++)for(var f=0,g=w[f].length;f<g;f++){var h={x:100,y:100,z:100},i={x:-a.width/2+h.x*f,y:50,z:-a.height/2+h.z*d};f==0&&d==0&&(cameraHelper.origin.x=i.x,cameraHelper.origin.y=i.y,cameraHelper.origin.z=i.z);if(w[d][f]>1){var j=w[d][f],k=Demonixis.GraphicsHelper.createCube(new THREE.MeshBasicMaterial({map:u[j]}),i,h);o.add(k)}w[d][f]=="D"&&(n.position.set(i.x,i.y,i.z),cameraHelper.origin.position.x=i.x,cameraHelper.origin.position.y=i.y,cameraHelper.origin.position.z=i.z,cameraHelper.origin.position.mapX=f,cameraHelper.origin.position.mapY=d,cameraHelper.origin.position.mapZ=0),q.draw(f,d,w[d][f])}var l=new THREE.AmbientLight(16187215);o.add(l);var m=new THREE.DirectionalLight(16777215);m.position.set(1,1,1).normalize(),o.add(m)}function c(){p.keys.up&&e("up"),p.keys.down&&e("down"),p.keys.left&&e("left"),p.keys.right&&e("right");var a={rotation:Math.PI/2,translation:100};p.joykeys.up&&e("up",a),p.joykeys.down&&e("down",a),p.joykeys.left&&e("left",a),p.joykeys.right&&e("right",a),t.update()}function d(){m.render(o,n)}function e(a,b){var c=!1,d={x:n.position.x,z:n.position.z},e=n.rotation.y,f=50,g={translation:typeof b!="undefined"?b.translation:cameraHelper.translation,rotation:typeof b!="undefined"?b.rotation:cameraHelper.rotation};switch(a){case"up":d.x-=Math.sin(-n.rotation.y)*-g.translation,d.z-=Math.cos(-n.rotation.y)*g.translation;break;case"down":d.x-=Math.sin(n.rotation.y)*-g.translation,d.z+=Math.cos(n.rotation.y)*g.translation;break;case"left":e+=g.rotation;break;case"right":e-=g.rotation}var h=Math.abs(Math.floor((cameraHelper.origin.x+n.position.x*-1)/100)),i=Math.abs(Math.floor((cameraHelper.origin.z+n.position.z*-1)/100)),j=Math.abs(Math.floor((cameraHelper.origin.x+d.x*-1+f)/100)),k=Math.abs(Math.floor((cameraHelper.origin.z+d.z*-1+f)/100));j>=w[0].length&&(j=w[0].length),j<0&&(j=0),k>=w.length&&(k=w.length),k<0&&(k=0),w[k][j]!=1&&!isNaN(w[k][j])?c=!0:w[k][j]=="A"&&(x=!1),c==0?(n.rotation.y=e,n.position.x=d.x,n.position.z=d.z,q.update({x:j,y:k})):document.getElementById("bumpSound").play()}function f(a){x?(c(),d(),window.requestAnimationFrame(f,m.domElement)):g()}function g(){if(r.isFinished||r.isMobile)alert("Bravo la partie est finie\n\nMerci d'avoir testé cette démo"),document.location.href="https://plus.google.com/u/0/114532615363095107351/posts";else{for(var a=0,b=o.children.length;a<b;a++)o.remove(o.children[a]);m.clear(),o=new THREE.Scene,o.add(n),h(r.getNext()),x=!0}}function h(a){var b=new XMLHttpRequest;b.open("GET","assets/maps/maze3d-"+a+".json",!0),b.onreadystatechange=function(){b.readyState==4&&(w=JSON.parse(b.responseText),i())},b.send(null)}function i(){b(),f()}var j=window.innerWidth*.995,k=window.innerHeight*.995,l=document.getElementById("canvasContainer"),m,n,o,p,q,r,s,t,u=new Array(4),v=!1,w=new Array,x=!0;window.onload=function(){a();var b=1;b>0||b<=r.count?(r.current=b,r.next=b+1,h(b)):(r.current=1,r.next=2,h(1))}})()}),requirejs.config({baseUrl:"js/lib",paths:{app:"../app"}}),requirejs(["app/main"]),define("app",function(){})